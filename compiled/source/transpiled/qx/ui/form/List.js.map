{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/ui/form/List.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "scroll",
    "AbstractScrollArea",
    "implement",
    "IMultiSelection",
    "form",
    "IForm",
    "IField",
    "IModelSelection",
    "include",
    "MRemoteChildrenHandling",
    "MMultiSelectionHandling",
    "MForm",
    "MModelSelection",
    "construct",
    "horizontal",
    "__content",
    "_createListItemContainer",
    "addListener",
    "_onAddChild",
    "_onRemoveChild",
    "getChildControl",
    "add",
    "setOrientation",
    "initOrientation",
    "_onKeyPress",
    "_onKeyInput",
    "__pressedString",
    "events",
    "addItem",
    "removeItem",
    "properties",
    "appearance",
    "refine",
    "init",
    "focusable",
    "width",
    "height",
    "orientation",
    "check",
    "apply",
    "spacing",
    "themeable",
    "enableInlineFind",
    "readOnly",
    "event",
    "members",
    "__lastKeyPress",
    "SELECTION_MANAGER",
    "selection",
    "ScrollArea",
    "getChildrenContainer",
    "e",
    "fireDataEvent",
    "getData",
    "handleKeyPress",
    "_getManager",
    "container",
    "Composite",
    "_applyOrientation",
    "value",
    "old",
    "getContentElement",
    "setAttribute",
    "content",
    "oldLayout",
    "getLayout",
    "layout",
    "HBox",
    "VBox",
    "setLayout",
    "setAllowGrowX",
    "setAllowGrowY",
    "_applySpacing",
    "getSpacing",
    "dispose",
    "setSpacing",
    "_applyReadOnly",
    "setReadOnly",
    "addState",
    "isDraggable",
    "_applyDraggable",
    "isDroppable",
    "_applyDroppable",
    "removeState",
    "isEnabled",
    "_applyEnabled",
    "isReadOnly",
    "getKeyIdentifier",
    "isAltPressed",
    "items",
    "getSelection",
    "i",
    "length",
    "fireEvent",
    "getEnableInlineFind",
    "mode",
    "getSelectionMode",
    "Date",
    "valueOf",
    "getChar",
    "matchedItem",
    "findItemByLabelFuzzy",
    "setSelection",
    "search",
    "toLowerCase",
    "getChildren",
    "l",
    "currentLabel",
    "getLabel",
    "indexOf",
    "findItem",
    "ignoreCase",
    "item",
    "label",
    "isRich",
    "control",
    "labelNode",
    "getDomElement",
    "bom",
    "element",
    "Attribute",
    "get",
    "translate",
    "toString",
    "destruct",
    "_disposeObjects",
    "List"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A list of items. Displays an automatically scrolling list for all\n * added {@link qx.ui.form.IListItem} instances (typically this would be instances of\n * {@link qx.ui.form.ListItem} but can also be other Atoms, such as {@link qx.ui.form.CheckBox}).\n * Supports various selection options: single, multi, ...\n */\nqx.Class.define(\"qx.ui.form.List\", {\n  extend: qx.ui.core.scroll.AbstractScrollArea,\n  implement: [\n    qx.ui.core.IMultiSelection,\n    qx.ui.form.IForm,\n    qx.ui.form.IField,\n    qx.ui.form.IModelSelection\n  ],\n\n  include: [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MMultiSelectionHandling,\n    qx.ui.form.MForm,\n    qx.ui.form.MModelSelection\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param horizontal {Boolean?false} Whether the list should be horizontal.\n   */\n  construct(horizontal) {\n    super();\n\n    // Create content\n    this.__content = this._createListItemContainer();\n\n    // Used to fire item add/remove events\n    this.__content.addListener(\"addChildWidget\", this._onAddChild, this);\n    this.__content.addListener(\"removeChildWidget\", this._onRemoveChild, this);\n\n    // Add to scrollpane\n    this.getChildControl(\"pane\").add(this.__content);\n\n    // Apply orientation\n    if (horizontal) {\n      this.setOrientation(\"horizontal\");\n    } else {\n      this.initOrientation();\n    }\n\n    // Add keypress listener\n    this.addListener(\"keypress\", this._onKeyPress);\n    this.addListener(\"keyinput\", this._onKeyInput);\n\n    // initialize the search string\n    this.__pressedString = \"\";\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem: \"qx.event.type.Data\",\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"list\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    width: {\n      refine: true,\n      init: 100\n    },\n\n    // overridden\n    height: {\n      refine: true,\n      init: 200\n    },\n\n    /**\n     * Whether the list should be rendered horizontal or vertical.\n     */\n    orientation: {\n      check: [\"horizontal\", \"vertical\"],\n      init: \"vertical\",\n      apply: \"_applyOrientation\"\n    },\n\n    /** Spacing between the items */\n    spacing: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applySpacing\",\n      themeable: true\n    },\n\n    /** Controls whether the inline-find feature is activated or not */\n    enableInlineFind: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /** Whether the list is read only when enabled */\n    readOnly: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeReadOnly\",\n      apply: \"_applyReadOnly\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __pressedString: null,\n    __lastKeyPress: null,\n\n    /** @type {qx.ui.core.Widget} The children container */\n    __content: null,\n\n    /** @type {Class} Pointer to the selection manager to use */\n    SELECTION_MANAGER: qx.ui.core.selection.ScrollArea,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getChildrenContainer() {\n      return this.__content;\n    },\n\n    /**\n     * Handle child widget adds on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onAddChild(e) {\n      this.fireDataEvent(\"addItem\", e.getData());\n    },\n\n    /**\n     * Handle child widget removes on the content pane\n     *\n     * @param e {qx.event.type.Data} the event instance\n     */\n    _onRemoveChild(e) {\n      this.fireDataEvent(\"removeItem\", e.getData());\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Used to route external <code>keypress</code> events to the list\n     * handling (in fact the manager of the list)\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     */\n    handleKeyPress(e) {\n      if (!this._onKeyPress(e)) {\n        this._getManager().handleKeyPress(e);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROTECTED API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This container holds the list item widgets.\n     *\n     * @return {qx.ui.container.Composite} Container for the list item widgets\n     */\n    _createListItemContainer() {\n      return new qx.ui.container.Composite();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyOrientation(value, old) {\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-orientation\", value);\n\n      var content = this.__content;\n\n      // save old layout for disposal\n      var oldLayout = content.getLayout();\n\n      // Create new layout\n      var horizontal = value === \"horizontal\";\n      var layout = horizontal\n        ? new qx.ui.layout.HBox()\n        : new qx.ui.layout.VBox();\n\n      // Configure content\n      content.setLayout(layout);\n      content.setAllowGrowX(!horizontal);\n      content.setAllowGrowY(horizontal);\n\n      // Configure spacing\n      this._applySpacing(this.getSpacing());\n\n      // dispose old layout\n      if (oldLayout) {\n        oldLayout.dispose();\n      }\n    },\n\n    // property apply\n    _applySpacing(value, old) {\n      this.__content.getLayout().setSpacing(value);\n    },\n\n    // property readOnly\n    _applyReadOnly(value) {\n      this._getManager().setReadOnly(value);\n      if (value) {\n        this.addState(\"readonly\");\n        this.addState(\"disabled\");\n\n        // Remove draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(false, true);\n        }\n\n        // Remove droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(false, true);\n        }\n      } else {\n        this.removeState(\"readonly\");\n\n        if (this.isEnabled()) {\n          this.removeState(\"disabled\");\n\n          // Re-add draggable\n          if (this.isDraggable()) {\n            this._applyDraggable(true, false);\n          }\n\n          // Re-add droppable\n          if (this.isDroppable()) {\n            this._applyDroppable(true, false);\n          }\n        }\n      }\n    },\n\n    // override\n    _applyEnabled(value, old) {\n      super._applyEnabled(value, old);\n\n      // If editable has just been turned on, we need to correct for readOnly status\n      if (value && this.isReadOnly()) {\n        this.addState(\"disabled\");\n\n        // Remove draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(false, true);\n        }\n\n        // Remove droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(false, true);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for <code>keypress</code> events.\n     *\n     * @param e {qx.event.type.KeySequence} KeyPress event\n     * @return {Boolean} Whether the event was processed\n     */\n    _onKeyPress(e) {\n      // Execute action on press <ENTER>\n      if (e.getKeyIdentifier() == \"Enter\" && !e.isAltPressed()) {\n        var items = this.getSelection();\n        for (var i = 0; i < items.length; i++) {\n          items[i].fireEvent(\"action\");\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FIND SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handles the inline find - if enabled\n     *\n     * @param e {qx.event.type.KeyInput} key input event\n     */\n    _onKeyInput(e) {\n      // do nothing if the find is disabled\n      if (!this.getEnableInlineFind()) {\n        return;\n      }\n\n      // Only useful in single or one selection mode\n      var mode = this.getSelectionMode();\n      if (!(mode === \"single\" || mode === \"one\")) {\n        return;\n      }\n\n      // Reset string after a second of non pressed key\n      if (new Date().valueOf() - this.__lastKeyPress > 1000) {\n        this.__pressedString = \"\";\n      }\n\n      // Combine keys the user pressed to a string\n      this.__pressedString += e.getChar();\n\n      // Find matching item\n      var matchedItem = this.findItemByLabelFuzzy(this.__pressedString);\n\n      // if an item was found, select it\n      if (matchedItem) {\n        this.setSelection([matchedItem]);\n      }\n\n      // Store timestamp\n      this.__lastKeyPress = new Date().valueOf();\n    },\n\n    /**\n     * Takes the given string and tries to find a ListItem\n     * which starts with this string. The search is not case sensitive and the\n     * first found ListItem will be returned. If there could not be found any\n     * qualifying list item, null will be returned.\n     *\n     * @param search {String} The text with which the label of the ListItem should start with\n     * @return {qx.ui.form.ListItem} The found ListItem or null\n     */\n    findItemByLabelFuzzy(search) {\n      // lower case search text\n      search = search.toLowerCase();\n\n      // get all items of the list\n      var items = this.getChildren();\n\n      // go threw all items\n      for (var i = 0, l = items.length; i < l; i++) {\n        // get the label of the current item\n        var currentLabel = items[i].getLabel();\n\n        // if the label fits with the search text (ignore case, begins with)\n        if (currentLabel && currentLabel.toLowerCase().indexOf(search) == 0) {\n          // just return the first found element\n          return items[i];\n        }\n      }\n\n      // if no element was found, return null\n      return null;\n    },\n\n    /**\n     * Find an item by its {@link qx.ui.basic.Atom#getLabel}.\n     *\n     * @param search {String} A label or any item\n     * @param ignoreCase {Boolean?true} description\n     * @return {qx.ui.form.ListItem} The found ListItem or null\n     */\n    findItem(search, ignoreCase) {\n      // lowercase search\n      if (ignoreCase !== false) {\n        search = search.toLowerCase();\n      }\n\n      // get all items of the list\n      var items = this.getChildren();\n      var item;\n\n      // go through all items\n      for (var i = 0, l = items.length; i < l; i++) {\n        item = items[i];\n\n        // get the content of the label; text content when rich\n        var label;\n\n        if (item.isRich()) {\n          var control = item.getChildControl(\"label\", true);\n          if (control) {\n            var labelNode = control.getContentElement().getDomElement();\n            if (labelNode) {\n              label = qx.bom.element.Attribute.get(labelNode, \"text\");\n            }\n          }\n        } else {\n          label = item.getLabel();\n        }\n\n        if (label != null) {\n          if (label.translate) {\n            label = label.translate();\n          }\n          if (ignoreCase !== false) {\n            label = label.toLowerCase();\n          }\n\n          if (label.toString() == search.toString()) {\n            return item;\n          }\n        }\n      }\n\n      return null;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeObjects(\"__content\");\n  }\n});\n"
  ]
}