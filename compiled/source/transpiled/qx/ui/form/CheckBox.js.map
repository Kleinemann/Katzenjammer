{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/ui/form/CheckBox.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "ToggleButton",
    "include",
    "MForm",
    "MModelProperty",
    "implement",
    "IForm",
    "IModel",
    "IListItem",
    "construct",
    "label",
    "assertArgumentsCount",
    "arguments",
    "setValue",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "removeAttribute",
    "properties",
    "appearance",
    "refine",
    "init",
    "allowGrowX",
    "members",
    "_forwardStates",
    "invalid",
    "focused",
    "undetermined",
    "checked",
    "hovered",
    "_bindableProperties",
    "_applyValue",
    "value",
    "old",
    "addState",
    "removeState",
    "ariaChecked",
    "Boolean",
    "isTriState",
    "CheckBox"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EAAuC;AACrCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,YADkB;AAErCC,IAAAA,OAAO,EAAE,CAACV,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWG,KAAZ,EAAmBX,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWI,cAA9B,CAF4B;AAIrCC,IAAAA,SAAS,EAAE,CAACb,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWM,KAAZ,EAAmBd,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWO,MAA9B,EAAsCf,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWQ,SAAjD,CAJ0B;;AAMrC;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACEC,IAAAA,SAfqC,qBAe3BC,KAf2B,EAepB;AAC0B;AACvC,aAAKC,oBAAL,CAA0BC,SAA1B,EAAqC,CAArC,EAAwC,CAAxC;AACD;AAED,qDAAMF,KAAN,EALe,CAOf;AACA;;AACA,WAAKG,QAAL,CAAc,KAAd,EATe,CAWf;;AACA,UAAMC,SAAS,GAAG,KAAKC,iBAAL,EAAlB;AACAD,MAAAA,SAAS,CAACE,YAAV,CAAuB,MAAvB,EAA+B,UAA/B;AACAF,MAAAA,SAAS,CAACG,eAAV,CAA0B,cAA1B;AACAH,MAAAA,SAAS,CAACE,YAAV,CAAuB,cAAvB,EAAuC,KAAvC;AACD,KA/BoC;;AAiCrC;AACF;AACA;AACA;AACA;AAEEE,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE,IADE;AAEVC,QAAAA,IAAI,EAAE;AAFI,OAFF;AAOV;AACAC,MAAAA,UAAU,EAAE;AACVF,QAAAA,MAAM,EAAE,IADE;AAEVC,QAAAA,IAAI,EAAE;AAFI;AARF,KAvCyB;;AAqDrC;AACAE,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACIC,MAAAA,cAAc,EAAE;AACdC,QAAAA,OAAO,EAAE,IADK;AAEdC,QAAAA,OAAO,EAAE,IAFK;AAGdC,QAAAA,YAAY,EAAE,IAHA;AAIdC,QAAAA,OAAO,EAAE,IAJK;AAKdC,QAAAA,OAAO,EAAE;AALK,OAJT;;AAYP;AACJ;AACA;AACA;AACIC,MAAAA,mBAAmB,EAAE,CAAC,SAAD,EAAY,OAAZ,EAAqB,aAArB,EAAoC,OAApC,EAA6C,MAA7C,CAhBd;AAkBP;AACAC,MAAAA,WAnBO,uBAmBKC,KAnBL,EAmBYC,GAnBZ,EAmBiB;AACtBD,QAAAA,KAAK,GAAG,KAAKE,QAAL,CAAc,SAAd,CAAH,GAA8B,KAAKC,WAAL,CAAiB,SAAjB,CAAnC;AAEA,YAAIC,WAAW,GAAGC,OAAO,CAACL,KAAD,CAAzB;;AACA,YAAI,KAAKM,UAAL,EAAJ,EAAuB;AACrB,cAAIN,KAAK,KAAK,IAAd,EAAoB;AAClBI,YAAAA,WAAW,GAAG,OAAd;AACA,iBAAKF,QAAL,CAAc,cAAd;AACD,WAHD,MAGO,IAAID,GAAG,KAAK,IAAZ,EAAkB;AACvB,iBAAKE,WAAL,CAAiB,cAAjB;AACD;AACF,SAXqB,CAatB;;;AACA,aAAKpB,iBAAL,GAAyBC,YAAzB,CAAsC,cAAtC,EAAsDoB,WAAtD;AACD;AAlCM;AAtD4B,GAAvC;AAvBA5C,EAAAA,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWuC,QAAX,CAAoB5C,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A check box widget with an optional label.\n */\nqx.Class.define(\"qx.ui.form.CheckBox\", {\n  extend: qx.ui.form.ToggleButton,\n  include: [qx.ui.form.MForm, qx.ui.form.MModelProperty],\n\n  implement: [qx.ui.form.IForm, qx.ui.form.IModel, qx.ui.form.IListItem],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String?null} An optional label for the check box.\n   */\n  construct(label) {\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertArgumentsCount(arguments, 0, 1);\n    }\n\n    super(label);\n\n    // Initialize the checkbox to a valid value (the default is null which\n    // is invalid)\n    this.setValue(false);\n\n    // ARIA attrs\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"role\", \"checkbox\");\n    contentEl.removeAttribute(\"aria-pressed\");\n    contentEl.setAttribute(\"aria-checked\", false);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"checkbox\"\n    },\n\n    // overridden\n    allowGrowX: {\n      refine: true,\n      init: false\n    }\n  },\n\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      invalid: true,\n      focused: true,\n      undetermined: true,\n      checked: true,\n      hovered: true\n    },\n\n    /**\n     * overridden (from MExecutable to keep the icon out of the binding)\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties: [\"enabled\", \"label\", \"toolTipText\", \"value\", \"menu\"],\n\n    // overridden\n    _applyValue(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n\n      let ariaChecked = Boolean(value);\n      if (this.isTriState()) {\n        if (value === null) {\n          ariaChecked = \"mixed\";\n          this.addState(\"undetermined\");\n        } else if (old === null) {\n          this.removeState(\"undetermined\");\n        }\n      }\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-checked\", ariaChecked);\n    }\n  }\n});\n"
  ]
}