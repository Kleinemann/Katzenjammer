{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "__objects",
    "el",
    "document",
    "body",
    "Registration",
    "event",
    "addListener",
    "window",
    "documentElement",
    "_onPointerDown",
    "_onRoll",
    "_onKeyUpDown",
    "_onKeyPress",
    "Environment",
    "get",
    "bom",
    "Element",
    "hideAll",
    "__openTimer",
    "Timer",
    "_onOpenInterval",
    "__closeTimer",
    "_onCloseInterval",
    "members",
    "__scheduleOpen",
    "__scheduleClose",
    "_getChild",
    "menu",
    "start",
    "iter",
    "loop",
    "children",
    "getChildren",
    "length",
    "child",
    "i",
    "isEnabled",
    "isAnonymous",
    "isVisible",
    "_isInMenu",
    "widget",
    "ui",
    "Menu",
    "getLayoutParent",
    "_isMenuOpener",
    "menus",
    "getOpener",
    "_getMenuButton",
    "AbstractButton",
    "add",
    "obj",
    "Error",
    "reg",
    "push",
    "setZIndex",
    "remove",
    "lang",
    "Array",
    "exclude",
    "getActiveMenu",
    "scheduleOpen",
    "cancelClose",
    "cancelOpen",
    "restartWith",
    "getOpenInterval",
    "scheduleClose",
    "getCloseInterval",
    "stop",
    "e",
    "open",
    "preventContextMenuOnce",
    "__onPreventContextMenu",
    "target",
    "getTarget",
    "Widget",
    "getWidgetByElement",
    "stopPropagation",
    "preventDefault",
    "removeListener",
    "getMenu",
    "__selectionKeys",
    "Enter",
    "Space",
    "__navigationKeys",
    "Tab",
    "Escape",
    "Up",
    "Down",
    "Left",
    "Right",
    "iden",
    "getKeyIdentifier",
    "getSelectedButton",
    "navigation",
    "selection",
    "_onKeyPressUp",
    "_onKeyPressDown",
    "_onKeyPressLeft",
    "_onKeyPressRight",
    "button",
    "_onKeyPressEnter",
    "_onKeyPressSpace",
    "selectedButton",
    "indexOf",
    "nextItem",
    "setSelectedButton",
    "resetSelectedButton",
    "menuOpener",
    "parentMenu",
    "resetOpenedButton",
    "menubar",
    "Button",
    "buttons",
    "getMenuBar",
    "getMenuButtons",
    "index",
    "prevButton",
    "subMenu",
    "setOpenedButton",
    "first",
    "getOpenedButton",
    "nextButton",
    "hasListener",
    "clone",
    "setBubbles",
    "setTarget",
    "dispatchEvent",
    "getMomentum",
    "destruct",
    "_disposeObjects",
    "_disposeArray",
    "Manager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * This singleton manages visible menu instances and supports some\n * core features to schedule menu open/close with timeout support.\n *\n * It also manages the whole keyboard support for the currently\n * registered widgets.\n *\n * The zIndex order is also managed by this class.\n */\nqx.Class.define(\"qx.ui.menu.Manager\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Create data structure\n    this.__objects = [];\n\n    var el = document.body;\n    var Registration = qx.event.Registration;\n\n    // React on pointer/mouse events, but on native, to support inline applications\n    Registration.addListener(\n      window.document.documentElement,\n      \"pointerdown\",\n      this._onPointerDown,\n      this,\n      true\n    );\n\n    Registration.addListener(el, \"roll\", this._onRoll, this, true);\n\n    // React on keypress events\n    Registration.addListener(el, \"keydown\", this._onKeyUpDown, this, true);\n    Registration.addListener(el, \"keyup\", this._onKeyUpDown, this, true);\n    Registration.addListener(el, \"keypress\", this._onKeyPress, this, true);\n\n    // only use the blur event to hide windows on non touch devices [BUG #4033]\n    // When the menu is located on top of an iFrame, the select will fail\n    if (!qx.core.Environment.get(\"event.touch\")) {\n      // Hide all when the window is blurred\n      qx.bom.Element.addListener(window, \"blur\", this.hideAll, this);\n    }\n\n    // Create open timer\n    this.__openTimer = new qx.event.Timer();\n    this.__openTimer.addListener(\"interval\", this._onOpenInterval, this);\n\n    // Create close timer\n    this.__closeTimer = new qx.event.Timer();\n    this.__closeTimer.addListener(\"interval\", this._onCloseInterval, this);\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n\n  members: {\n    __scheduleOpen: null,\n    __scheduleClose: null,\n    __openTimer: null,\n    __closeTimer: null,\n    __objects: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Query engine for menu children.\n     *\n     * @param menu {qx.ui.menu.Menu} Any menu instance\n     * @param start {Integer} Child index to start with\n     * @param iter {Integer} Iteration count, normally <code>+1</code> or <code>-1</code>\n     * @param loop {Boolean?false} Whether to wrap when reaching the begin/end of the list\n     * @return {qx.ui.menu.Button} Any menu button or <code>null</code>\n     */\n    _getChild(menu, start, iter, loop) {\n      var children = menu.getChildren();\n      var length = children.length;\n      var child;\n\n      for (var i = start; i < length && i >= 0; i += iter) {\n        child = children[i];\n        if (child.isEnabled() && !child.isAnonymous() && child.isVisible()) {\n          return child;\n        }\n      }\n\n      if (loop) {\n        i = i == length ? 0 : length - 1;\n        for (; i != start; i += iter) {\n          child = children[i];\n          if (child.isEnabled() && !child.isAnonymous() && child.isVisible()) {\n            return child;\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Whether the given widget is inside any Menu instance.\n     *\n     * @param widget {qx.ui.core.Widget} Any widget\n     * @return {Boolean} <code>true</code> when the widget is part of any menu\n     */\n    _isInMenu(widget) {\n      while (widget) {\n        if (widget instanceof qx.ui.menu.Menu) {\n          return true;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return false;\n    },\n\n    /**\n     * Whether the given widget is one of the menu openers.\n     *\n     * @param widget {qx.ui.core.Widget} Any widget\n     * @return {Boolean} <code>true</code> if the widget is a menu opener\n     */\n    _isMenuOpener(widget) {\n      var menus = this.__objects;\n\n      for (var i = 0; i < menus.length; i++) {\n        if (menus[i].getOpener() === widget) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns an instance of a menu button if the given widget is a child\n     *\n     * @param widget {qx.ui.core.Widget} any widget\n     * @return {qx.ui.menu.Button} Any menu button instance or <code>null</code>\n     */\n    _getMenuButton(widget) {\n      while (widget) {\n        if (widget instanceof qx.ui.menu.AbstractButton) {\n          return widget;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds a menu to the list of visible menus.\n     *\n     * @param obj {qx.ui.menu.Menu} Any menu instance.\n     */\n    add(obj) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(obj instanceof qx.ui.menu.Menu)) {\n          throw new Error(\"Object is no menu: \" + obj);\n        }\n      }\n\n      var reg = this.__objects;\n      reg.push(obj);\n      obj.setZIndex(1e6 + reg.length);\n    },\n\n    /**\n     * Remove a menu from the list of visible menus.\n     *\n     * @param obj {qx.ui.menu.Menu} Any menu instance.\n     */\n    remove(obj) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!(obj instanceof qx.ui.menu.Menu)) {\n          throw new Error(\"Object is no menu: \" + obj);\n        }\n      }\n\n      var reg = this.__objects;\n      if (reg) {\n        qx.lang.Array.remove(reg, obj);\n      }\n    },\n\n    /**\n     * Hides all currently opened menus.\n     */\n    hideAll() {\n      var reg = this.__objects;\n      if (reg) {\n        for (var i = reg.length - 1; i >= 0; i--) {\n          reg[i].exclude();\n        }\n      }\n    },\n\n    /**\n     * Returns the menu which was opened at last (which\n     * is the active one this way)\n     *\n     * @return {qx.ui.menu.Menu} The current active menu or <code>null</code>\n     */\n    getActiveMenu() {\n      var reg = this.__objects;\n      return reg.length > 0 ? reg[reg.length - 1] : null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCHEDULED OPEN/CLOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Schedules the given menu to be opened after the\n     * {@link qx.ui.menu.Menu#openInterval} configured by the\n     * menu instance itself.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to schedule for open\n     */\n    scheduleOpen(menu) {\n      // Cancel close of given menu first\n      this.cancelClose(menu);\n\n      // When the menu is already visible\n      if (menu.isVisible()) {\n        // Cancel all other open requests\n        if (this.__scheduleOpen) {\n          this.cancelOpen(this.__scheduleOpen);\n        }\n      }\n\n      // When the menu is not visible and not scheduled already\n      // then schedule it for opening\n      else if (this.__scheduleOpen != menu) {\n        // menu.debug(\"Schedule open\");\n        this.__scheduleOpen = menu;\n        this.__openTimer.restartWith(menu.getOpenInterval());\n      }\n    },\n\n    /**\n     * Schedules the given menu to be closed after the\n     * {@link qx.ui.menu.Menu#closeInterval} configured by the\n     * menu instance itself.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to schedule for close\n     */\n    scheduleClose(menu) {\n      // Cancel open of the menu first\n      this.cancelOpen(menu);\n\n      // When the menu is already invisible\n      if (!menu.isVisible()) {\n        // Cancel all other close requests\n        if (this.__scheduleClose) {\n          this.cancelClose(this.__scheduleClose);\n        }\n      }\n\n      // When the menu is visible and not scheduled already\n      // then schedule it for closing\n      else if (this.__scheduleClose != menu) {\n        // menu.debug(\"Schedule close\");\n        this.__scheduleClose = menu;\n        this.__closeTimer.restartWith(menu.getCloseInterval());\n      }\n    },\n\n    /**\n     * When the given menu is scheduled for open this pending\n     * request is canceled.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to cancel for open\n     */\n    cancelOpen(menu) {\n      if (this.__scheduleOpen == menu) {\n        // menu.debug(\"Cancel open\");\n        this.__openTimer.stop();\n        this.__scheduleOpen = null;\n      }\n    },\n\n    /**\n     * When the given menu is scheduled for close this pending\n     * request is canceled.\n     *\n     * @param menu {qx.ui.menu.Menu} The menu to cancel for close\n     */\n    cancelClose(menu) {\n      if (this.__scheduleClose == menu) {\n        // menu.debug(\"Cancel close\");\n        this.__closeTimer.stop();\n        this.__scheduleClose = null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for a pending open request. Configured to the interval\n     * of the current menu to open.\n     *\n     * @param e {qx.event.type.Event} Interval event\n     */\n    _onOpenInterval(e) {\n      // Stop timer\n      this.__openTimer.stop();\n\n      // Open menu and reset flag\n      this.__scheduleOpen.open();\n      this.__scheduleOpen = null;\n    },\n\n    /**\n     * Event listener for a pending close request. Configured to the interval\n     * of the current menu to close.\n     *\n     * @param e {qx.event.type.Event} Interval event\n     */\n    _onCloseInterval(e) {\n      // Stop timer, reset scheduling flag\n      this.__closeTimer.stop();\n\n      // Close menu and reset flag\n      this.__scheduleClose.exclude();\n      this.__scheduleClose = null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXTMENU EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Internal function registers a handler to stop next\n     * <code>contextmenu</code> event.\n     * This function will be called by {@link qx.ui.menu.Button#_onTap}, if\n     * right click was pressed.\n     *\n     * @internal\n     */\n    preventContextMenuOnce() {\n      qx.event.Registration.addListener(\n        document.body,\n        \"contextmenu\",\n        this.__onPreventContextMenu,\n        this,\n        true\n      );\n    },\n\n    /**\n     * Internal event handler to stop <code>contextmenu</code> event bubbling,\n     * if target is inside the opened menu.\n     *\n     * @param e {qx.event.type.Mouse} contextmenu event\n     *\n     * @internal\n     */\n    __onPreventContextMenu(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n      if (this._isInMenu(target)) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      // stop only once\n      qx.event.Registration.removeListener(\n        document.body,\n        \"contextmenu\",\n        this.__onPreventContextMenu,\n        this,\n        true\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler for pointerdown events\n     *\n     * @param e {qx.event.type.Pointer} pointerdown event\n     */\n    _onPointerDown(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n\n      // If the target is 'null' the tap appears on a DOM element witch is not\n      // a widget. This happens normally with an inline application, when the user\n      // taps not in the inline application. In this case all all currently\n      // open menus should be closed.\n      if (target == null) {\n        this.hideAll();\n        return;\n      }\n\n      // If the target is the one which has opened the current menu\n      // we ignore the pointerdown to let the button process the event\n      // further with toggling or ignoring the tap.\n      if (target.getMenu && target.getMenu() && target.getMenu().isVisible()) {\n        return;\n      }\n\n      // All taps not inside a menu will hide all currently open menus\n      if (this.__objects.length > 0 && !this._isInMenu(target)) {\n        this.hideAll();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      KEY EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Map of all keys working on an active menu selection\n     * @lint ignoreReferenceField(__selectionKeys)\n     */\n    __selectionKeys: {\n      Enter: 1,\n      Space: 1\n    },\n\n    /**\n     * @type {Map} Map of all keys working without a selection\n     * @lint ignoreReferenceField(__navigationKeys)\n     */\n    __navigationKeys: {\n      Tab: 1,\n      Escape: 1,\n      Up: 1,\n      Down: 1,\n      Left: 1,\n      Right: 1\n    },\n\n    /**\n     * Event handler for all keyup/keydown events. Stops all events\n     * when any menu is opened.\n     *\n     * @param e {qx.event.type.KeySequence} Keyboard event\n     */\n    _onKeyUpDown(e) {\n      var menu = this.getActiveMenu();\n      if (!menu) {\n        return;\n      }\n\n      // Stop for all supported key combos\n      var iden = e.getKeyIdentifier();\n      if (\n        this.__navigationKeys[iden] ||\n        (this.__selectionKeys[iden] && menu.getSelectedButton())\n      ) {\n        e.stopPropagation();\n      }\n    },\n\n    /**\n     * Event handler for all keypress events. Delegates the event to the more\n     * specific methods defined in this class.\n     *\n     * Currently processes the keys: <code>Up</code>, <code>Down</code>,\n     * <code>Left</code>, <code>Right</code> and <code>Enter</code>.\n     *\n     * @param e {qx.event.type.KeySequence} Keyboard event\n     */\n    _onKeyPress(e) {\n      var menu = this.getActiveMenu();\n      if (!menu) {\n        return;\n      }\n\n      var iden = e.getKeyIdentifier();\n      var navigation = this.__navigationKeys[iden];\n      var selection = this.__selectionKeys[iden];\n\n      if (navigation) {\n        switch (iden) {\n          case \"Up\":\n            this._onKeyPressUp(menu);\n            break;\n\n          case \"Down\":\n            this._onKeyPressDown(menu);\n            break;\n\n          case \"Left\":\n            this._onKeyPressLeft(menu);\n            break;\n\n          case \"Right\":\n            this._onKeyPressRight(menu);\n            break;\n\n          case \"Tab\":\n          case \"Escape\":\n            this.hideAll();\n            break;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n      } else if (selection) {\n        // Do not process these events when no item is hovered\n        var button = menu.getSelectedButton();\n        if (button) {\n          switch (iden) {\n            case \"Enter\":\n              this._onKeyPressEnter(menu, button, e);\n              break;\n\n            case \"Space\":\n              this._onKeyPressSpace(menu, button, e);\n              break;\n          }\n\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Up</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressUp(menu) {\n      // Query for previous child\n      var selectedButton = menu.getSelectedButton();\n      var children = menu.getChildren();\n      var start = selectedButton\n        ? menu.indexOf(selectedButton) - 1\n        : children.length - 1;\n      var nextItem = this._getChild(menu, start, -1, true);\n\n      // Reconfigure property\n      if (nextItem) {\n        menu.setSelectedButton(nextItem);\n      } else {\n        menu.resetSelectedButton();\n      }\n    },\n\n    /**\n     * Event handler for <code>Down</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressDown(menu) {\n      // Query for next child\n      var selectedButton = menu.getSelectedButton();\n      var start = selectedButton ? menu.indexOf(selectedButton) + 1 : 0;\n      var nextItem = this._getChild(menu, start, 1, true);\n\n      // Reconfigure property\n      if (nextItem) {\n        menu.setSelectedButton(nextItem);\n      } else {\n        menu.resetSelectedButton();\n      }\n    },\n\n    /**\n     * Event handler for <code>Left</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressLeft(menu) {\n      var menuOpener = menu.getOpener();\n      if (!menuOpener) {\n        return;\n      }\n\n      // Back to the \"parent\" menu\n      if (menuOpener instanceof qx.ui.menu.AbstractButton) {\n        var parentMenu = menuOpener.getLayoutParent();\n\n        parentMenu.resetOpenedButton();\n        parentMenu.setSelectedButton(menuOpener);\n      }\n\n      // Goto the previous toolbar button\n      else if (menuOpener instanceof qx.ui.menubar.Button) {\n        var buttons = menuOpener.getMenuBar().getMenuButtons();\n        var index = buttons.indexOf(menuOpener);\n\n        // This should not happen, definitely!\n        if (index === -1) {\n          return;\n        }\n\n        // Get previous button, fallback to end if first arrived\n        var prevButton = null;\n        var length = buttons.length;\n        for (var i = 1; i <= length; i++) {\n          var button = buttons[(index - i + length) % length];\n          if (button.isEnabled() && button.isVisible()) {\n            prevButton = button;\n            break;\n          }\n        }\n\n        if (prevButton && prevButton != menuOpener) {\n          prevButton.open(true);\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Right</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     */\n    _onKeyPressRight(menu) {\n      var selectedButton = menu.getSelectedButton();\n\n      // Open sub-menu of hovered item and select first child\n      if (selectedButton) {\n        var subMenu = selectedButton.getMenu();\n\n        if (subMenu) {\n          // Open previously hovered item\n          menu.setOpenedButton(selectedButton);\n\n          // Hover first item in new submenu\n          var first = this._getChild(subMenu, 0, 1);\n          if (first) {\n            subMenu.setSelectedButton(first);\n          }\n\n          return;\n        }\n      }\n\n      // No hover and no open item\n      // When first button has a menu, open it, otherwise only hover it\n      else if (!menu.getOpenedButton()) {\n        var first = this._getChild(menu, 0, 1);\n\n        if (first) {\n          menu.setSelectedButton(first);\n\n          if (first.getMenu()) {\n            menu.setOpenedButton(first);\n          }\n\n          return;\n        }\n      }\n\n      // Jump to the next toolbar button\n      var menuOpener = menu.getOpener();\n\n      // Look up opener hierarchy for menu button\n      if (menuOpener instanceof qx.ui.menu.Button && selectedButton) {\n        // From one inner selected button try to find the top level\n        // menu button which has opened the whole menu chain.\n        while (menuOpener) {\n          menuOpener = menuOpener.getLayoutParent();\n          if (menuOpener instanceof qx.ui.menu.Menu) {\n            menuOpener = menuOpener.getOpener();\n            if (menuOpener instanceof qx.ui.menubar.Button) {\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n\n        if (!menuOpener) {\n          return;\n        }\n      }\n\n      // Ask the toolbar for the next menu button\n      if (menuOpener instanceof qx.ui.menubar.Button) {\n        var buttons = menuOpener.getMenuBar().getMenuButtons();\n        var index = buttons.indexOf(menuOpener);\n\n        // This should not happen, definitely!\n        if (index === -1) {\n          return;\n        }\n\n        // Get next button, fallback to first if end arrived\n        var nextButton = null;\n        var length = buttons.length;\n        for (var i = 1; i <= length; i++) {\n          var button = buttons[(index + i) % length];\n          if (button.isEnabled() && button.isVisible()) {\n            nextButton = button;\n            break;\n          }\n        }\n\n        if (nextButton && nextButton != menuOpener) {\n          nextButton.open(true);\n        }\n      }\n    },\n\n    /**\n     * Event handler for <code>Enter</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     * @param button {qx.ui.menu.AbstractButton} The selected button\n     * @param e {qx.event.type.KeySequence} The keypress event\n     */\n    _onKeyPressEnter(menu, button, e) {\n      // Route keypress event to the selected button\n      if (button.hasListener(\"keypress\")) {\n        // Clone and reconfigure event\n        var clone = e.clone();\n        clone.setBubbles(false);\n        clone.setTarget(button);\n\n        // Finally dispatch the clone\n        button.dispatchEvent(clone);\n      }\n\n      // Hide all open menus\n      this.hideAll();\n    },\n\n    /**\n     * Event handler for <code>Space</code> key\n     *\n     * @param menu {qx.ui.menu.Menu} The active menu\n     * @param button {qx.ui.menu.AbstractButton} The selected button\n     * @param e {qx.event.type.KeySequence} The keypress event\n     */\n    _onKeyPressSpace(menu, button, e) {\n      // Route keypress event to the selected button\n      if (button.hasListener(\"keypress\")) {\n        // Clone and reconfigure event\n        var clone = e.clone();\n        clone.setBubbles(false);\n        clone.setTarget(button);\n\n        // Finally dispatch the clone\n        button.dispatchEvent(clone);\n      }\n    },\n\n    /**\n     * Event handler for roll which hides all windows on scroll.\n     *\n     * @param e {qx.event.type.Roll} The roll event.\n     */\n    _onRoll(e) {\n      var target = e.getTarget();\n      target = qx.ui.core.Widget.getWidgetByElement(target, true);\n\n      if (\n        this.__objects.length > 0 &&\n        !this._isInMenu(target) &&\n        !this._isMenuOpener(target) &&\n        !e.getMomentum()\n      ) {\n        this.hideAll();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    var Registration = qx.event.Registration;\n    var el = document.body;\n\n    // React on pointerdown events\n    Registration.removeListener(\n      window.document.documentElement,\n      \"pointerdown\",\n      this._onPointerDown,\n      this,\n      true\n    );\n\n    // React on keypress events\n    Registration.removeListener(el, \"keydown\", this._onKeyUpDown, this, true);\n    Registration.removeListener(el, \"keyup\", this._onKeyUpDown, this, true);\n    Registration.removeListener(el, \"keypress\", this._onKeyPress, this, true);\n\n    this._disposeObjects(\"__openTimer\", \"__closeTimer\");\n    this._disposeArray(\"__objects\");\n  }\n});\n"
  ]
}