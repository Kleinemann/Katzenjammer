{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/ui/core/Widget.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "LayoutItem",
    "include",
    "locale",
    "MTranslation",
    "implement",
    "IDisposable",
    "construct",
    "__contentElement",
    "__createContentElement",
    "initFocusable",
    "initSelectable",
    "initNativeContextMenu",
    "events",
    "appear",
    "disappear",
    "createChildControl",
    "resize",
    "move",
    "syncAppearance",
    "mousemove",
    "mouseover",
    "mouseout",
    "mousedown",
    "mouseup",
    "click",
    "auxclick",
    "dblclick",
    "contextmenu",
    "beforeContextmenuOpen",
    "mousewheel",
    "touchstart",
    "touchend",
    "touchmove",
    "touchcancel",
    "tap",
    "longtap",
    "dbltap",
    "swipe",
    "rotate",
    "pinch",
    "track",
    "roll",
    "pointermove",
    "pointerover",
    "pointerout",
    "pointerdown",
    "pointerup",
    "pointercancel",
    "keyup",
    "keydown",
    "keypress",
    "keyinput",
    "focus",
    "blur",
    "focusin",
    "focusout",
    "activate",
    "deactivate",
    "capture",
    "losecapture",
    "drop",
    "dragleave",
    "dragover",
    "drag",
    "dragstart",
    "dragend",
    "dragchange",
    "droprequest",
    "properties",
    "paddingTop",
    "check",
    "init",
    "apply",
    "themeable",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "padding",
    "group",
    "mode",
    "zIndex",
    "nullable",
    "event",
    "decorator",
    "backgroundColor",
    "textColor",
    "inheritable",
    "font",
    "dereference",
    "opacity",
    "cursor",
    "toolTip",
    "toolTipText",
    "toolTipIcon",
    "blockToolTip",
    "showToolTipWhenDisabled",
    "visibility",
    "enabled",
    "anonymous",
    "tabIndex",
    "focusable",
    "keepFocus",
    "keepActive",
    "draggable",
    "droppable",
    "selectable",
    "contextMenu",
    "nativeContextMenu",
    "appearance",
    "statics",
    "DEBUG",
    "UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR",
    "getWidgetByElement",
    "element",
    "considerAnonymousState",
    "Assert",
    "assertTrue",
    "$$qxObjectHash",
    "$$qxObject",
    "toHashCode",
    "widget",
    "getAnonymous",
    "parentNode",
    "e",
    "contains",
    "parent",
    "child",
    "getLayoutParent",
    "__separatorPool",
    "util",
    "ObjectPool",
    "members",
    "__initialAppearanceApplied",
    "__toolTipTextListenerId",
    "__layoutManager",
    "_getLayout",
    "_setLayout",
    "layout",
    "assertInstance",
    "Abstract",
    "connectToWidget",
    "queue",
    "Layout",
    "add",
    "setLayoutParent",
    "$$parent",
    "content",
    "getContentElement",
    "$$disposed",
    "remove",
    "$$refreshInheritables",
    "Visibility",
    "_updateInsets",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "changes",
    "lang",
    "Object",
    "isEmpty",
    "inner",
    "size",
    "pixel",
    "contentStyles",
    "position",
    "margin",
    "keys",
    "length",
    "setStyles",
    "local",
    "hasLayoutChildren",
    "inset",
    "getInsets",
    "innerWidth",
    "right",
    "innerHeight",
    "bottom",
    "getDecorator",
    "decoratorPadding",
    "theme",
    "manager",
    "Decoration",
    "getInstance",
    "resolve",
    "getPadding",
    "getPaddingTop",
    "getPaddingRight",
    "getPaddingBottom",
    "getPaddingLeft",
    "Error",
    "_findTopControl",
    "hasListener",
    "fireDataEvent",
    "getBounds",
    "__separators",
    "clearSeparators",
    "reg",
    "pool",
    "Widget",
    "i",
    "l",
    "poolObject",
    "renderSeparator",
    "separator",
    "bounds",
    "getObject",
    "set",
    "elem",
    "domEl",
    "getDomElement",
    "style",
    "push",
    "_computeSizeHint",
    "getWidth",
    "minWidth",
    "getMinWidth",
    "maxWidth",
    "getMaxWidth",
    "getHeight",
    "minHeight",
    "getMinHeight",
    "maxHeight",
    "getMaxHeight",
    "assert",
    "contentHint",
    "_getContentHint",
    "insets",
    "insetX",
    "insetY",
    "Infinity",
    "invalidateLayoutCache",
    "hint",
    "getSizeHint",
    "msg",
    "toString",
    "assertInteger",
    "_getHeightForWidth",
    "contentWidth",
    "contentHeight",
    "hasHeightForWidth",
    "getHeightForWidth",
    "_getContentHeightForWidth",
    "assertNumber",
    "getInnerSize",
    "computed",
    "fadeOut",
    "duration",
    "fadeIn",
    "_applyAnonymous",
    "value",
    "setAttribute",
    "removeAttribute",
    "show",
    "setVisibility",
    "hide",
    "exclude",
    "isVisible",
    "getVisibility",
    "isHidden",
    "isExcluded",
    "isSeeable",
    "Manager",
    "flush",
    "offsetWidth",
    "el",
    "_createContentElement",
    "connectObject",
    "classname",
    "styles",
    "boxSizing",
    "root",
    "Inline",
    "html",
    "Element",
    "overflowX",
    "overflowY",
    "__widgetChildren",
    "getLayoutChildren",
    "children",
    "__emptyChildren",
    "layoutChildren",
    "hasUserBounds",
    "concat",
    "Array",
    "scheduleLayoutUpdate",
    "invalidateLayoutChildren",
    "invalidateChildrenCache",
    "getChildrenContainer",
    "_getChildren",
    "_indexOf",
    "indexOf",
    "_hasChildren",
    "addChildrenToQueue",
    "_add",
    "options",
    "constructor",
    "__addHelper",
    "_addAt",
    "index",
    "ref",
    "setLayoutProperties",
    "insertBefore",
    "_addBefore",
    "before",
    "assertInArray",
    "_addAfter",
    "after",
    "insertAfter",
    "_remove",
    "__removeHelper",
    "_removeAt",
    "removeAt",
    "_removeAll",
    "_afterAddChild",
    "_afterRemoveChild",
    "assertNotIdentical",
    "assertType",
    "updateLayoutProperties",
    "assertNotUndefined",
    "releaseCapture",
    "isCapturing",
    "Registration",
    "getManager",
    "dispatcher",
    "getDispatcher",
    "dispatch",
    "MouseCapture",
    "getCaptureElement",
    "_applyPadding",
    "old",
    "name",
    "__updateContentPadding",
    "direction",
    "firstLow",
    "replace",
    "setStyle",
    "_applyDecorator",
    "getCssClassName",
    "removeClass",
    "addCssClass",
    "addClass",
    "_applyToolTipText",
    "addListener",
    "getToolTipText",
    "translate",
    "setToolTipText",
    "_applyTextColor",
    "_applyZIndex",
    "_applyVisibility",
    "_applyOpacity",
    "_applyCursor",
    "isSelectable",
    "Environment",
    "get",
    "_applyBackgroundColor",
    "color",
    "getBackgroundColor",
    "resolved",
    "Color",
    "_applyFont",
    "_onChangeTheme",
    "isDisposed",
    "updateAppearance",
    "getFont",
    "Type",
    "isString",
    "getTextColor",
    "__states",
    "$$stateChanges",
    "_forwardStates",
    "hasState",
    "state",
    "states",
    "addState",
    "Appearance",
    "forward",
    "controls",
    "__childControls",
    "control",
    "id",
    "removeState",
    "replaceState",
    "__appearanceSelector",
    "__updateSelector",
    "selector",
    "styler",
    "Property",
    "$$method",
    "setThemed",
    "unstyler",
    "resetThemed",
    "oldData",
    "styleFrom",
    "getAppearance",
    "obj",
    "$$subcontrol",
    "$$subparent",
    "reverse",
    "join",
    "newData",
    "prop",
    "undefined",
    "_applyAppearance",
    "checkAppearanceNeeds",
    "syncWidget",
    "jobs",
    "getEventTarget",
    "target",
    "getFocusTarget",
    "getEnabled",
    "getFocusable",
    "getFocusElement",
    "isTabable",
    "isFocusable",
    "_applyFocusable",
    "getTabIndex",
    "isNativelyFocusable",
    "_applyKeepFocus",
    "_applyKeepActive",
    "_applyTabIndex",
    "_applySelectable",
    "getCursor",
    "setSelectable",
    "_applyEnabled",
    "isDraggable",
    "_applyDraggable",
    "isDroppable",
    "_applyDroppable",
    "_applyNativeContextMenu",
    "_applyContextMenu",
    "getOpener",
    "resetOpener",
    "removeListener",
    "_onContextMenuOpen",
    "_onBeforeContextMenuOpen",
    "setOpener",
    "getType",
    "getPointerType",
    "getContextMenu",
    "openAtPointer",
    "stop",
    "getData",
    "_onStopEvent",
    "stopPropagation",
    "_getDragDropCursor",
    "DragDropCursor",
    "isEnabled",
    "_onDragStart",
    "_onDrag",
    "_onDragEnd",
    "_onDragChange",
    "placeToPointer",
    "getApplicationRoot",
    "setGlobalCursor",
    "moveTo",
    "resetGlobalCursor",
    "action",
    "getCurrentAction",
    "setAction",
    "resetAction",
    "visualizeFocus",
    "visualizeBlur",
    "scrollChildIntoView",
    "alignX",
    "alignY",
    "direct",
    "isScheduled",
    "getChildren",
    "forEach",
    "sibling",
    "scrollChildIntoViewX",
    "scrollChildIntoViewY",
    "align",
    "tabFocus",
    "hasChildControl",
    "_getCreatedChildControls",
    "getChildControl",
    "notcreate",
    "_createChildControl",
    "_showChildControl",
    "_excludeChildControl",
    "_isChildControlVisible",
    "_releaseChildControl",
    "pos",
    "_createChildControlImpl",
    "substring",
    "exc",
    "message",
    "$$resyncNeeded",
    "hash",
    "_disposeChildControls",
    "destroy",
    "dispose",
    "getSubcontrolId",
    "getContentLocation",
    "bom",
    "Location",
    "setDomLeft",
    "setDomTop",
    "setDomPosition",
    "setAriaLabel",
    "label",
    "addAriaLabelledBy",
    "labelWidgets",
    "__addAriaXBy",
    "addAriaDescribedBy",
    "describingWidgets",
    "widgets",
    "ariaAttr",
    "includes",
    "idArr",
    "contentEl",
    "widgetId",
    "getAttribute",
    "idStr",
    "res",
    "removeAllListeners",
    "Dispose",
    "clone",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "removeListenerById",
    "disconnectWidget",
    "setContextMenu",
    "_disposeArray",
    "_disposeObjects"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/* ************************************************************************\n\n\n\n************************************************************************ */\n\n/**\n * This is the base class for all widgets.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#core/' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @use(qx.ui.core.EventHandler)\n * @use(qx.event.handler.DragDrop)\n * @asset(qx/static/blank.gif)\n *\n * @ignore(qx.ui.root.Inline)\n */\nqx.Class.define(\"qx.ui.core.Widget\", {\n  extend: qx.ui.core.LayoutItem,\n  include: [qx.locale.MTranslation],\n  implement: [qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Create basic element\n    this.__contentElement = this.__createContentElement();\n\n    // Initialize properties\n    this.initFocusable();\n    this.initSelectable();\n    this.initNativeContextMenu();\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * Fired after the widget appears on the screen.\n     */\n    appear: \"qx.event.type.Event\",\n\n    /**\n     * Fired after the widget disappears from the screen.\n     */\n    disappear: \"qx.event.type.Event\",\n\n    /**\n     * Fired after the creation of a child control. The passed data is the\n     * newly created child widget.\n     */\n    createChildControl: \"qx.event.type.Data\",\n\n    /**\n     * Fired on resize (after layout) of the widget.\n     * The data property of the event contains the widget's computed location\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    resize: \"qx.event.type.Data\",\n\n    /**\n     * Fired on move (after layout) of the widget.\n     * The data property of the event contains the widget's computed location\n     * and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    move: \"qx.event.type.Data\",\n\n    /**\n     * Fired after the appearance has been applied. This happens before the\n     * widget becomes visible, on state and appearance changes. The data field\n     * contains the state map. This can be used to react on state changes or to\n     * read properties set by the appearance.\n     */\n    syncAppearance: \"qx.event.type.Data\",\n\n    /** Fired if the mouse cursor moves over the widget.\n     *  The data property of the event contains the widget's computed location\n     *  and dimension as returned by {@link qx.ui.core.LayoutItem#getBounds}\n     */\n    mousemove: \"qx.event.type.Mouse\",\n\n    /**\n     * Fired if the mouse cursor enters the widget.\n     *\n     * Note: This event is also dispatched if the widget is disabled!\n     */\n    mouseover: \"qx.event.type.Mouse\",\n\n    /**\n     * Fired if the mouse cursor leaves widget.\n     *\n     * Note: This event is also dispatched if the widget is disabled!\n     */\n    mouseout: \"qx.event.type.Mouse\",\n\n    /** Mouse button is pressed on the widget. */\n    mousedown: \"qx.event.type.Mouse\",\n\n    /** Mouse button is released on the widget. */\n    mouseup: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    click: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using a non primary button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    auxclick: \"qx.event.type.Mouse\",\n\n    /** Widget is double clicked using left or middle button.\n        {@link qx.event.type.Mouse#getButton} for more details.*/\n    dblclick: \"qx.event.type.Mouse\",\n\n    /** Widget is clicked using the right mouse button. */\n    contextmenu: \"qx.event.type.Mouse\",\n\n    /** Fired before the context menu is opened. */\n    beforeContextmenuOpen: \"qx.event.type.Data\",\n\n    /** Fired if the mouse wheel is used over the widget. */\n    mousewheel: \"qx.event.type.MouseWheel\",\n\n    /** Fired if a touch at the screen is started. */\n    touchstart: \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen has ended. */\n    touchend: \"qx.event.type.Touch\",\n\n    /** Fired during a touch at the screen. */\n    touchmove: \"qx.event.type.Touch\",\n\n    /** Fired if a touch at the screen is canceled. */\n    touchcancel: \"qx.event.type.Touch\",\n\n    /** Fired when a pointer taps on the screen. */\n    tap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer holds on the screen. */\n    longtap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer taps twice on the screen. */\n    dbltap: \"qx.event.type.Tap\",\n\n    /** Fired when a pointer swipes over the screen. */\n    swipe: \"qx.event.type.Touch\",\n\n    /** Fired when two pointers performing a rotate gesture on the screen. */\n    rotate: \"qx.event.type.Rotate\",\n\n    /** Fired when two pointers performing a pinch in/out gesture on the screen. */\n    pinch: \"qx.event.type.Pinch\",\n\n    /** Fired when an active pointer moves on the screen (after pointerdown till pointerup). */\n    track: \"qx.event.type.Track\",\n\n    /** Fired when an active pointer moves on the screen or the mouse wheel is used. */\n    roll: \"qx.event.type.Roll\",\n\n    /** Fired if a pointer (mouse/touch/pen) moves or changes any of it's values. */\n    pointermove: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) hovers the widget. */\n    pointerover: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) leaves this widget. */\n    pointerout: \"qx.event.type.Pointer\",\n\n    /**\n     * Fired if a pointer (mouse/touch/pen) button is pressed or\n     * a finger touches the widget.\n     */\n    pointerdown: \"qx.event.type.Pointer\",\n\n    /**\n     * Fired if all pointer (mouse/touch/pen) buttons are released or\n     * the finger is lifted from the widget.\n     */\n    pointerup: \"qx.event.type.Pointer\",\n\n    /** Fired if a pointer (mouse/touch/pen) action is canceled. */\n    pointercancel: \"qx.event.type.Pointer\",\n\n    /** This event if fired if a keyboard key is released. */\n    keyup: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event if fired if a keyboard key is pressed down. This event is\n     * only fired once if the user keeps the key pressed for a while.\n     */\n    keydown: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired any time a key is pressed. It will be repeated if\n     * the user keeps the key pressed. The pressed key can be determined using\n     * {@link qx.event.type.KeySequence#getKeyIdentifier}.\n     */\n    keypress: \"qx.event.type.KeySequence\",\n\n    /**\n     * This event is fired if the pressed key or keys result in a printable\n     * character. Since the character is not necessarily associated with a\n     * single physical key press, the event does not have a key identifier\n     * getter. This event gets repeated if the user keeps pressing the key(s).\n     *\n     * The unicode code of the pressed key can be read using\n     * {@link qx.event.type.KeyInput#getCharCode}.\n     */\n    keyinput: \"qx.event.type.KeyInput\",\n\n    /**\n     * The event is fired when the widget gets focused. Only widgets which are\n     * {@link #focusable} receive this event.\n     */\n    focus: \"qx.event.type.Focus\",\n\n    /**\n     * The event is fired when the widget gets blurred. Only widgets which are\n     * {@link #focusable} receive this event.\n     */\n    blur: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget receive the focus.\n     */\n    focusin: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget itself or any child of the widget lost the focus.\n     */\n    focusout: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets active (receives keyboard events etc.)\n     */\n    activate: \"qx.event.type.Focus\",\n\n    /**\n     * When the widget gets inactive\n     */\n    deactivate: \"qx.event.type.Focus\",\n\n    /**\n     * Fired if the widget becomes the capturing widget by a call to {@link #capture}.\n     */\n    capture: \"qx.event.type.Event\",\n\n    /**\n     * Fired if the widget looses the capturing mode by a call to\n     * {@link #releaseCapture} or a mouse click.\n     */\n    losecapture: \"qx.event.type.Event\",\n\n    /**\n     * Fired on the drop target when the drag&drop action is finished\n     * successfully. This event is normally used to transfer the data\n     * from the drag to the drop target.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    drop: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on a potential drop target when leaving it.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragleave: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on a potential drop target when reaching it via the pointer.\n     * This event can be canceled if none of the incoming data types\n     * are supported.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragover: \"qx.event.type.Drag\",\n\n    /**\n     * Fired during the drag. Contains the current pointer coordinates\n     * using {@link qx.event.type.Drag#getDocumentLeft} and\n     * {@link qx.event.type.Drag#getDocumentTop}\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    drag: \"qx.event.type.Drag\",\n\n    /**\n     * Initiate the drag-and-drop operation. This event is cancelable\n     * when the drag operation is currently not allowed/possible.\n     *\n     * Modeled after the WHATWG specification of Drag&Drop:\n     * http://www.whatwg.org/specs/web-apps/current-work/#dnd\n     */\n    dragstart: \"qx.event.type.Drag\",\n\n    /**\n     * Fired on the source (drag) target every time a drag session was ended.\n     */\n    dragend: \"qx.event.type.Drag\",\n\n    /**\n     * Fired when the drag configuration has been modified e.g. the user\n     * pressed a key which changed the selected action. This event will be\n     * fired on the draggable and the droppable element. In case of the\n     * droppable element, you can cancel the event and prevent a drop based on\n     * e.g. the current action.\n     */\n    dragchange: \"qx.event.type.Drag\",\n\n    /**\n     * Fired when the drop was successfully done and the target widget\n     * is now asking for data. The listener should transfer the data,\n     * respecting the selected action, to the event. This can be done using\n     * the event's {@link qx.event.type.Drag#addData} method.\n     */\n    droprequest: \"qx.event.type.Drag\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /*\n    ---------------------------------------------------------------------------\n      PADDING\n    ---------------------------------------------------------------------------\n    */\n\n    /** Padding of the widget (top) */\n    paddingTop: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (right) */\n    paddingRight: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (bottom) */\n    paddingBottom: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /** Padding of the widget (left) */\n    paddingLeft: {\n      check: \"Integer\",\n      init: 0,\n      apply: \"_applyPadding\",\n      themeable: true\n    },\n\n    /**\n     * The 'padding' property is a shorthand property for setting 'paddingTop',\n     * 'paddingRight', 'paddingBottom' and 'paddingLeft' at the same time.\n     *\n     * If four values are specified they apply to top, right, bottom and left respectively.\n     * If there is only one value, it applies to all sides, if there are two or three,\n     * the missing values are taken from the opposite side.\n     */\n    padding: {\n      group: [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\"],\n      mode: \"shorthand\",\n      themeable: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLING PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The z-index property sets the stack order of an element. An element with\n     * greater stack order is always in front of another element with lower stack order.\n     */\n    zIndex: {\n      nullable: true,\n      init: 10,\n      apply: \"_applyZIndex\",\n      event: \"changeZIndex\",\n      check: \"Integer\",\n      themeable: true\n    },\n\n    /**\n     * The decorator property points to an object, which is responsible\n     * for drawing the widget's decoration, e.g. border, background or shadow.\n     *\n     * This can be a decorator object or a string pointing to a decorator\n     * defined in the decoration theme.\n     */\n    decorator: {\n      nullable: true,\n      init: null,\n      apply: \"_applyDecorator\",\n      event: \"changeDecorator\",\n      check: \"Decorator\",\n      themeable: true\n    },\n\n    /**\n     * The background color the rendered widget.\n     */\n    backgroundColor: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyBackgroundColor\",\n      event: \"changeBackgroundColor\",\n      themeable: true\n    },\n\n    /**\n     * The text color the rendered widget.\n     */\n    textColor: {\n      nullable: true,\n      check: \"Color\",\n      apply: \"_applyTextColor\",\n      event: \"changeTextColor\",\n      themeable: true,\n      inheritable: true\n    },\n\n    /**\n     * The widget's font. The value is either a font name defined in the font\n     * theme or an instance of {@link qx.bom.Font}.\n     */\n    font: {\n      nullable: true,\n      apply: \"_applyFont\",\n      check: \"Font\",\n      event: \"changeFont\",\n      themeable: true,\n      inheritable: true,\n      dereference: true\n    },\n\n    /**\n     * Mapping to native style property opacity.\n     *\n     * The uniform opacity setting to be applied across an entire object.\n     * Behaves like the new CSS-3 Property.\n     * Any values outside the range 0.0 (fully transparent) to 1.0\n     * (fully opaque) will be clamped to this range.\n     */\n    opacity: {\n      check: \"Number\",\n      apply: \"_applyOpacity\",\n      themeable: true,\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * Mapping to native style property cursor.\n     *\n     * The name of the cursor to show when the pointer is over the widget.\n     * This is any valid CSS2 cursor name defined by W3C.\n     *\n     * The following values are possible crossbrowser:\n     * <ul><li>default</li>\n     * <li>crosshair</li>\n     * <li>pointer</li>\n     * <li>move</li>\n     * <li>n-resize</li>\n     * <li>ne-resize</li>\n     * <li>e-resize</li>\n     * <li>se-resize</li>\n     * <li>s-resize</li>\n     * <li>sw-resize</li>\n     * <li>w-resize</li>\n     * <li>nw-resize</li>\n     * <li>nesw-resize</li>\n     * <li>nwse-resize</li>\n     * <li>text</li>\n     * <li>wait</li>\n     * <li>help </li>\n     * </ul>\n     */\n    cursor: {\n      check: \"String\",\n      apply: \"_applyCursor\",\n      themeable: true,\n      inheritable: true,\n      nullable: true,\n      init: null\n    },\n\n    /**\n     * Sets the tooltip instance to use for this widget. If only the tooltip\n     * text and icon have to be set its better to use the {@link #toolTipText}\n     * and {@link #toolTipIcon} properties since they use a shared tooltip\n     * instance.\n     *\n     * If this property is set the {@link #toolTipText} and {@link #toolTipIcon}\n     * properties are ignored.\n     */\n    toolTip: {\n      check: \"qx.ui.tooltip.ToolTip\",\n      nullable: true\n    },\n\n    /**\n     * The text of the widget's tooltip. This text can contain HTML markup.\n     * The text is displayed using a shared tooltip instance. If the tooltip\n     * must be customized beyond the text and an icon {@link #toolTipIcon}, the\n     * {@link #toolTip} property has to be used\n     */\n    toolTipText: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeToolTipText\",\n      apply: \"_applyToolTipText\"\n    },\n\n    /**\n     * The icon URI of the widget's tooltip. This icon is displayed using a shared\n     * tooltip instance. If the tooltip must be customized beyond the tooltip text\n     * {@link #toolTipText} and the icon, the {@link #toolTip} property has to be\n     * used.\n     */\n    toolTipIcon: {\n      check: \"String\",\n      nullable: true,\n      event: \"changeToolTipText\"\n    },\n\n    /**\n     * Controls if a tooltip should shown or not.\n     */\n    blockToolTip: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /**\n     * Forces to show tooltip when widget is disabled.\n     */\n    showToolTipWhenDisabled: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MANAGEMENT PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Controls the visibility. Valid values are:\n     *\n     * <ul>\n     *   <li><b>visible</b>: Render the widget</li>\n     *   <li><b>hidden</b>: Hide the widget but don't relayout the widget's parent.</li>\n     *   <li><b>excluded</b>: Hide the widget and relayout the parent as if the\n     *     widget was not a child of its parent.</li>\n     * </ul>\n     */\n    visibility: {\n      check: [\"visible\", \"hidden\", \"excluded\"],\n      init: \"visible\",\n      apply: \"_applyVisibility\",\n      event: \"changeVisibility\"\n    },\n\n    /**\n     * Whether the widget is enabled. Disabled widgets are usually grayed out\n     * and do not process user created events. While in the disabled state most\n     * user input events are blocked. Only the {@link #pointerover} and\n     * {@link #pointerout} events will be dispatched.\n     */\n    enabled: {\n      init: true,\n      check: \"Boolean\",\n      inheritable: true,\n      apply: \"_applyEnabled\",\n      event: \"changeEnabled\"\n    },\n\n    /**\n     * Whether the widget is anonymous.\n     *\n     * Anonymous widgets are ignored in the event hierarchy. This is useful\n     * for combined widgets where the internal structure do not have a custom\n     * appearance with a different styling from the element around. This is\n     * especially true for widgets like checkboxes or buttons where the text\n     * or icon are handled synchronously for state changes to the outer widget.\n     */\n    anonymous: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyAnonymous\"\n    },\n\n    /**\n     * Defines the tab index of an widget. If widgets with tab indexes are part\n     * of the current focus root these elements are sorted in first priority. Afterwards\n     * the sorting continues by rendered position, zIndex and other criteria.\n     *\n     * Please note: The value must be between 1 and 32000.\n     */\n    tabIndex: {\n      check: \"Integer\",\n      nullable: true,\n      apply: \"_applyTabIndex\"\n    },\n\n    /**\n     * Whether the widget is focusable e.g. rendering a focus border and visualize\n     * as active element.\n     *\n     * See also {@link #isTabable} which allows runtime checks for\n     * <code>isChecked</code> or other stuff to test whether the widget is\n     * reachable via the TAB key.\n     */\n    focusable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyFocusable\"\n    },\n\n    /**\n     * If this property is enabled, the widget and all of its child widgets\n     * will never get focused. The focus keeps at the currently\n     * focused widget.\n     *\n     * This only works for widgets which are not {@link #focusable}.\n     *\n     * This is mainly useful for widget authors. Please use with caution!\n     */\n    keepFocus: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyKeepFocus\"\n    },\n\n    /**\n     * If this property if enabled, the widget and all of its child widgets\n     * will never get activated. The activation keeps at the currently\n     * activated widget.\n     *\n     * This is mainly useful for widget authors. Please use with caution!\n     */\n    keepActive: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyKeepActive\"\n    },\n\n    /** Whether the widget acts as a source for drag&drop operations */\n    draggable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyDraggable\"\n    },\n\n    /** Whether the widget acts as a target for drag&drop operations */\n    droppable: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyDroppable\"\n    },\n\n    /**\n     * Whether the widget contains content which may be selected by the user.\n     *\n     * If the value set to <code>true</code> the native browser selection can\n     * be used for text selection. But it is normally useful for\n     * forms fields, longer texts/documents, editors, etc.\n     */\n    selectable: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeSelectable\",\n      apply: \"_applySelectable\"\n    },\n\n    /**\n     * Whether to show a context menu and which one\n     */\n    contextMenu: {\n      check: \"qx.ui.menu.Menu\",\n      apply: \"_applyContextMenu\",\n      nullable: true,\n      event: \"changeContextMenu\"\n    },\n\n    /**\n     * Whether the native context menu should be enabled for this widget. To\n     * globally enable the native context menu set the {@link #nativeContextMenu}\n     * property of the root widget ({@link qx.ui.root.Abstract}) to\n     * <code>true</code>.\n     */\n    nativeContextMenu: {\n      check: \"Boolean\",\n      init: false,\n      themeable: true,\n      event: \"changeNativeContextMenu\",\n      apply: \"_applyNativeContextMenu\"\n    },\n\n    /**\n     * The appearance ID. This ID is used to identify the appearance theme\n     * entry to use for this widget. This controls the styling of the element.\n     */\n    appearance: {\n      check: \"String\",\n      init: \"widget\",\n      apply: \"_applyAppearance\",\n      event: \"changeAppearance\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** Whether the widget should print out hints and debug messages */\n    DEBUG: false,\n\n    /** Whether to throw an error on focus/blur if the widget is unfocusable */\n    UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR: true,\n\n    /**\n     * Returns the widget, which contains the given DOM element.\n     *\n     * @param element {Element} The DOM element to search the widget for.\n     * @param considerAnonymousState {Boolean?false} If true, anonymous widget\n     *   will not be returned.\n     * @return {qx.ui.core.Widget} The widget containing the element.\n     */\n    getWidgetByElement(element, considerAnonymousState) {\n      while (element) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.core.Assert.assertTrue(\n            (!element.$$qxObjectHash && !element.$$qxObject) ||\n              (element.$$qxObject &&\n                element.$$qxObjectHash &&\n                element.$$qxObject.toHashCode() === element.$$qxObjectHash)\n          );\n        }\n        var widget = element.$$qxObject;\n\n        // check for anonymous widgets\n        if (widget) {\n          if (!considerAnonymousState || !widget.getAnonymous()) {\n            return widget;\n          }\n        }\n\n        // Fix for FF, which occasionally breaks (BUG#3525)\n        try {\n          element = element.parentNode;\n        } catch (e) {\n          return null;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Whether the \"parent\" widget contains the \"child\" widget.\n     *\n     * @param parent {qx.ui.core.Widget} The parent widget\n     * @param child {qx.ui.core.Widget} The child widget\n     * @return {Boolean} Whether one of the \"child\"'s parents is \"parent\"\n     */\n    contains(parent, child) {\n      while (child) {\n        child = child.getLayoutParent();\n\n        if (parent == child) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /** @type {Map} Contains all pooled separators for reuse */\n    __separatorPool: new qx.util.ObjectPool()\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __contentElement: null,\n    __initialAppearanceApplied: null,\n    __toolTipTextListenerId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      LAYOUT INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {qx.ui.layout.Abstract} The connected layout manager\n     */\n    __layoutManager: null,\n\n    // overridden\n    _getLayout() {\n      return this.__layoutManager;\n    },\n\n    /**\n     * Set a layout manager for the widget. A a layout manager can only be connected\n     * with one widget. Reset the connection with a previous widget first, if you\n     * like to use it in another widget instead.\n     *\n     * @param layout {qx.ui.layout.Abstract} The new layout or\n     *     <code>null</code> to reset the layout.\n     */\n    _setLayout(layout) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (layout) {\n          this.assertInstance(layout, qx.ui.layout.Abstract);\n        }\n      }\n\n      if (this.__layoutManager) {\n        this.__layoutManager.connectToWidget(null);\n      }\n\n      if (layout) {\n        layout.connectToWidget(this);\n      }\n\n      this.__layoutManager = layout;\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // overridden\n    setLayoutParent(parent) {\n      if (this.$$parent === parent) {\n        return;\n      }\n\n      var content = this.getContentElement();\n\n      if (this.$$parent && !this.$$parent.$$disposed) {\n        this.$$parent.getContentElement().remove(content);\n      }\n\n      this.$$parent = parent || null;\n\n      if (parent && !parent.$$disposed) {\n        this.$$parent.getContentElement().add(content);\n      }\n\n      // Update inheritable properties\n      this.$$refreshInheritables();\n\n      // Update visibility cache\n      qx.ui.core.queue.Visibility.add(this);\n    },\n\n    /** @type {Boolean} Whether insets have changed and must be updated */\n    _updateInsets: null,\n\n    // overridden\n    renderLayout(left, top, width, height) {\n      var changes = super.renderLayout(left, top, width, height);\n\n      // Directly return if superclass has detected that no\n      // changes needs to be applied\n      if (!changes) {\n        return null;\n      }\n\n      if (qx.lang.Object.isEmpty(changes) && !this._updateInsets) {\n        return null;\n      }\n\n      var content = this.getContentElement();\n      var inner = changes.size || this._updateInsets;\n      var pixel = \"px\";\n\n      var contentStyles = {};\n      // Move content to new position\n      if (changes.position) {\n        contentStyles.left = left + pixel;\n        contentStyles.top = top + pixel;\n      }\n\n      if (inner || changes.margin) {\n        contentStyles.width = width + pixel;\n        contentStyles.height = height + pixel;\n      }\n\n      if (Object.keys(contentStyles).length > 0) {\n        content.setStyles(contentStyles);\n      }\n\n      if (inner || changes.local || changes.margin) {\n        if (this.__layoutManager && this.hasLayoutChildren()) {\n          var inset = this.getInsets();\n          var innerWidth = width - inset.left - inset.right;\n          var innerHeight = height - inset.top - inset.bottom;\n\n          var decorator = this.getDecorator();\n          var decoratorPadding = { left: 0, right: 0, top: 0, bottom: 0 };\n          if (decorator) {\n            decorator =\n              qx.theme.manager.Decoration.getInstance().resolve(decorator);\n            decoratorPadding = decorator.getPadding();\n          }\n\n          var padding = {\n            top: this.getPaddingTop() + decoratorPadding.top,\n            right: this.getPaddingRight() + decoratorPadding.right,\n            bottom: this.getPaddingBottom() + decoratorPadding.bottom,\n            left: this.getPaddingLeft() + decoratorPadding.left\n          };\n\n          this.__layoutManager.renderLayout(innerWidth, innerHeight, padding);\n        } else if (this.hasLayoutChildren()) {\n          throw new Error(\n            \"At least one child in control \" +\n              this._findTopControl() +\n              \" requires a layout, but no one was defined!\"\n          );\n        }\n      }\n\n      // Fire events\n      if (changes.position && this.hasListener(\"move\")) {\n        this.fireDataEvent(\"move\", this.getBounds());\n      }\n\n      if (changes.size && this.hasListener(\"resize\")) {\n        this.fireDataEvent(\"resize\", this.getBounds());\n      }\n\n      // Cleanup flags\n      delete this._updateInsets;\n\n      return changes;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SEPARATOR SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    __separators: null,\n\n    // overridden\n    clearSeparators() {\n      var reg = this.__separators;\n      if (!reg) {\n        return;\n      }\n\n      var pool = qx.ui.core.Widget.__separatorPool;\n      var content = this.getContentElement();\n      var widget;\n\n      for (var i = 0, l = reg.length; i < l; i++) {\n        widget = reg[i];\n        pool.poolObject(widget);\n        content.remove(widget.getContentElement());\n      }\n\n      // Clear registry\n      reg.length = 0;\n    },\n\n    // overridden\n    renderSeparator(separator, bounds) {\n      // Insert\n      var widget = qx.ui.core.Widget.__separatorPool.getObject(\n        qx.ui.core.Widget\n      );\n\n      widget.set({\n        decorator: separator\n      });\n\n      var elem = widget.getContentElement();\n      this.getContentElement().add(elem);\n\n      // Move\n      var domEl = elem.getDomElement();\n      // use the DOM element because the cache of the qx.html.Element could be\n      // wrong due to changes made by the decorators which work on the DOM element too\n      if (domEl) {\n        domEl.style.top = bounds.top + \"px\";\n        domEl.style.left = bounds.left + \"px\";\n        domEl.style.width = bounds.width + \"px\";\n        domEl.style.height = bounds.height + \"px\";\n      } else {\n        elem.setStyles({\n          left: bounds.left + \"px\",\n          top: bounds.top + \"px\",\n          width: bounds.width + \"px\",\n          height: bounds.height + \"px\"\n        });\n      }\n\n      // Remember element\n      if (!this.__separators) {\n        this.__separators = [];\n      }\n      this.__separators.push(widget);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SIZE HINTS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _computeSizeHint() {\n      // Start with the user defined values\n      var width = this.getWidth();\n      var minWidth = this.getMinWidth();\n      var maxWidth = this.getMaxWidth();\n\n      var height = this.getHeight();\n      var minHeight = this.getMinHeight();\n      var maxHeight = this.getMaxHeight();\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (minWidth !== null && maxWidth !== null) {\n          this.assert(\n            minWidth <= maxWidth,\n            \"minWidth is larger than maxWidth!\"\n          );\n        }\n        if (minHeight !== null && maxHeight !== null) {\n          this.assert(\n            minHeight <= maxHeight,\n            \"minHeight is larger than maxHeight!\"\n          );\n        }\n      }\n\n      // Ask content\n      var contentHint = this._getContentHint();\n\n      var insets = this.getInsets();\n      var insetX = insets.left + insets.right;\n      var insetY = insets.top + insets.bottom;\n\n      if (width == null) {\n        width = contentHint.width + insetX;\n      }\n\n      if (height == null) {\n        height = contentHint.height + insetY;\n      }\n\n      if (minWidth == null) {\n        minWidth = insetX;\n\n        if (contentHint.minWidth != null) {\n          minWidth += contentHint.minWidth;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (minWidth > maxWidth && maxWidth != null) {\n            minWidth = maxWidth;\n          }\n        }\n      }\n\n      if (minHeight == null) {\n        minHeight = insetY;\n\n        if (contentHint.minHeight != null) {\n          minHeight += contentHint.minHeight;\n          // do not apply bigger min height than max height [BUG #5008]\n          if (minHeight > maxHeight && maxHeight != null) {\n            minHeight = maxHeight;\n          }\n        }\n      }\n\n      if (maxWidth == null) {\n        if (contentHint.maxWidth == null) {\n          maxWidth = Infinity;\n        } else {\n          maxWidth = contentHint.maxWidth + insetX;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (maxWidth < minWidth && minWidth != null) {\n            maxWidth = minWidth;\n          }\n        }\n      }\n\n      if (maxHeight == null) {\n        if (contentHint.maxHeight == null) {\n          maxHeight = Infinity;\n        } else {\n          maxHeight = contentHint.maxHeight + insetY;\n          // do not apply bigger min width than max width [BUG #5008]\n          if (maxHeight < minHeight && minHeight != null) {\n            maxHeight = minHeight;\n          }\n        }\n      }\n\n      // Build size hint and return\n      return {\n        width: width,\n        minWidth: minWidth,\n        maxWidth: maxWidth,\n        height: height,\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      };\n    },\n\n    // overridden\n    invalidateLayoutCache() {\n      super.invalidateLayoutCache();\n\n      if (this.__layoutManager) {\n        this.__layoutManager.invalidateLayoutCache();\n      }\n    },\n\n    /**\n     * Returns the recommended/natural dimensions of the widget's content.\n     *\n     * For labels and images this may be their natural size when defined without\n     * any dimensions. For containers this may be the recommended size of the\n     * underlying layout manager.\n     *\n     * Developer note: This can be overwritten by the derived classes to allow\n     * a custom handling here.\n     *\n     * @return {Map}\n     */\n    _getContentHint() {\n      var layout = this.__layoutManager;\n      if (layout) {\n        if (this.hasLayoutChildren()) {\n          var hint = layout.getSizeHint();\n\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            var msg =\n              \"The layout of the widget\" +\n              this.toString() +\n              \" returned an invalid size hint!\";\n            this.assertInteger(hint.width, \"Wrong 'left' argument. \" + msg);\n            this.assertInteger(hint.height, \"Wrong 'top' argument. \" + msg);\n          }\n\n          return hint;\n        } else {\n          return {\n            width: 0,\n            height: 0\n          };\n        }\n      } else {\n        return {\n          width: 100,\n          height: 50\n        };\n      }\n    },\n\n    // overridden\n    _getHeightForWidth(width) {\n      // Prepare insets\n      var insets = this.getInsets();\n\n      var insetX = insets.left + insets.right;\n      var insetY = insets.top + insets.bottom;\n\n      // Compute content width\n      var contentWidth = width - insetX;\n\n      // Compute height\n      var contentHeight = 0;\n      var layout = this._getLayout();\n      if (layout && layout.hasHeightForWidth()) {\n        contentHeight = layout.getHeightForWidth(contentWidth);\n      } else {\n        contentHeight = this._getContentHeightForWidth(contentWidth);\n      }\n\n      // Computed box height\n      var height = contentHeight + insetY;\n\n      return height;\n    },\n\n    /**\n     * Returns the computed height for the given width.\n     *\n     * @abstract\n     * @param width {Integer} Incoming width (as limitation)\n     * @return {Integer} Computed height while respecting the given width.\n     */\n    _getContentHeightForWidth(width) {\n      throw new Error(\"Abstract method call: _getContentHeightForWidth()!\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INSET CALCULATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the sum of the widget's padding and border width.\n     *\n     * @return {Map} Contains the keys <code>top</code>, <code>right</code>,\n     *   <code>bottom</code> and <code>left</code>. All values are integers.\n     */\n    getInsets() {\n      var top = this.getPaddingTop();\n      var right = this.getPaddingRight();\n      var bottom = this.getPaddingBottom();\n      var left = this.getPaddingLeft();\n      if (this.getDecorator()) {\n        var decorator = qx.theme.manager.Decoration.getInstance().resolve(\n          this.getDecorator()\n        );\n\n        var inset = decorator.getInsets();\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.assertNumber(\n            inset.top,\n            \"Invalid top decorator inset detected: \" + inset.top\n          );\n\n          this.assertNumber(\n            inset.right,\n            \"Invalid right decorator inset detected: \" + inset.right\n          );\n\n          this.assertNumber(\n            inset.bottom,\n            \"Invalid bottom decorator inset detected: \" + inset.bottom\n          );\n\n          this.assertNumber(\n            inset.left,\n            \"Invalid left decorator inset detected: \" + inset.left\n          );\n        }\n\n        top += inset.top;\n        right += inset.right;\n        bottom += inset.bottom;\n        left += inset.left;\n      }\n\n      return {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      COMPUTED LAYOUT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the widget's computed inner size as available\n     * through the layout process.\n     *\n     * This function is guaranteed to return a correct value\n     * during a {@link #resize} or {@link #move} event dispatch.\n     *\n     * @return {Map} The widget inner dimension in pixel (if the layout is\n     *    valid). Contains the keys <code>width</code> and <code>height</code>.\n     */\n    getInnerSize() {\n      var computed = this.getBounds();\n      if (!computed) {\n        return null;\n      }\n\n      // Return map data\n      var insets = this.getInsets();\n      return {\n        width: computed.width - insets.left - insets.right,\n        height: computed.height - insets.top - insets.bottom\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ANIMATION SUPPORT: USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fade out this widget.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeOut(duration) {\n      return this.getContentElement().fadeOut(duration);\n    },\n\n    /**\n     * Fade in the widget.\n     * @param duration {Number} Time in ms.\n     * @return {qx.bom.element.AnimationHandle} The animation handle to react for\n     *   the fade animation.\n     */\n    fadeIn(duration) {\n      return this.getContentElement().fadeIn(duration);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      VISIBILITY SUPPORT: USER API\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyAnonymous(value) {\n      if (value) {\n        this.getContentElement().setAttribute(\"qxanonymous\", \"true\");\n      } else {\n        this.getContentElement().removeAttribute(\"qxanonymous\");\n      }\n    },\n\n    /**\n     * Make this widget visible.\n     *\n     */\n    show() {\n      this.setVisibility(\"visible\");\n    },\n\n    /**\n     * Hide this widget.\n     *\n     */\n    hide() {\n      this.setVisibility(\"hidden\");\n    },\n\n    /**\n     * Hide this widget and exclude it from the underlying layout.\n     *\n     */\n    exclude() {\n      this.setVisibility(\"excluded\");\n    },\n\n    /**\n     * Whether the widget is locally visible.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is visible\n     */\n    isVisible() {\n      return this.getVisibility() === \"visible\";\n    },\n\n    /**\n     * Whether the widget is locally hidden.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is hidden\n     */\n    isHidden() {\n      return this.getVisibility() !== \"visible\";\n    },\n\n    /**\n     * Whether the widget is locally excluded.\n     *\n     * Note: This method does not respect the hierarchy.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget is excluded\n     */\n    isExcluded() {\n      return this.getVisibility() === \"excluded\";\n    },\n\n    /**\n     * Detects if the widget and all its parents are visible.\n     *\n     * WARNING: Please use this method with caution because it flushes the\n     * internal queues which might be an expensive operation.\n     *\n     * @return {Boolean} true, if the widget is currently on the screen\n     */\n    isSeeable() {\n      // Flush the queues because to detect if the widget ins visible, the\n      // queues need to be flushed (see bug #5254)\n      qx.ui.core.queue.Manager.flush();\n      // if the element is already rendered, a check for the offsetWidth is enough\n      var element = this.getContentElement().getDomElement();\n      if (element) {\n        // will also be 0 if the parents are not visible\n        return element.offsetWidth > 0;\n      }\n      // if no element is available, it can not be visible\n      return false;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CREATION OF HTML ELEMENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Create the widget's content HTML element.\n     *\n     * @return {qx.html.Element} The content HTML element\n     */\n    __createContentElement() {\n      var el = this._createContentElement();\n      el.connectObject(this);\n\n      // make sure to allow all pointer events\n      el.setStyles({ \"touch-action\": \"none\", \"-ms-touch-action\": \"none\" });\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        el.setAttribute(\"qxClass\", this.classname);\n      }\n\n      var styles = {\n        zIndex: 10,\n        boxSizing: \"border-box\"\n      };\n\n      if (!qx.ui.root.Inline || !(this instanceof qx.ui.root.Inline)) {\n        styles.position = \"absolute\";\n      }\n\n      el.setStyles(styles);\n\n      return el;\n    },\n\n    /**\n     * Creates the content element. The style properties\n     * position and zIndex are modified from the Widget\n     * core.\n     *\n     * This function may be overridden to customize a class\n     * content.\n     *\n     * @return {qx.html.Element} The widget's content element\n     */\n    _createContentElement() {\n      return new qx.html.Element(\"div\", {\n        overflowX: \"hidden\",\n        overflowY: \"hidden\"\n      });\n    },\n\n    /**\n     * Returns the element wrapper of the widget's content element.\n     * This method exposes widget internal and must be used with caution!\n     *\n     * @return {qx.html.Element} The widget's content element\n     */\n    getContentElement() {\n      return this.__contentElement;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {qx.ui.core.LayoutItem[]} List of all child widgets */\n    __widgetChildren: null,\n\n    /**\n     * Returns all children, which are layout relevant. This excludes all widgets,\n     * which have a {@link qx.ui.core.Widget#visibility} value of <code>exclude</code>.\n     *\n     * @internal\n     * @return {qx.ui.core.Widget[]} All layout relevant children.\n     */\n    getLayoutChildren() {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return this.__emptyChildren;\n      }\n\n      var layoutChildren;\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        if (child.hasUserBounds() || child.isExcluded()) {\n          if (layoutChildren == null) {\n            layoutChildren = children.concat();\n          }\n\n          qx.lang.Array.remove(layoutChildren, child);\n        }\n      }\n\n      return layoutChildren || children;\n    },\n\n    /**\n     * Marks the layout of this widget as invalid and triggers a layout update.\n     * This is a shortcut for <code>qx.ui.core.queue.Layout.add(this);</code>.\n     */\n    scheduleLayoutUpdate() {\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    /**\n     * Resets the cache for children which should be laid out.\n     */\n    invalidateLayoutChildren() {\n      var layout = this.__layoutManager;\n      if (layout) {\n        layout.invalidateChildrenCache();\n      }\n\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    /**\n     * Returns whether the layout has children, which are layout relevant. This\n     * excludes all widgets, which have a {@link qx.ui.core.Widget#visibility}\n     * value of <code>exclude</code>.\n     *\n     * @return {Boolean} Whether the layout has layout relevant children\n     */\n    hasLayoutChildren() {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return false;\n      }\n\n      var child;\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n        if (!child.hasUserBounds() && !child.isExcluded()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns the widget which contains the children and\n     * is relevant for laying them out. This is from the user point of\n     * view and may not be identical to the technical structure.\n     *\n     * @return {qx.ui.core.Widget} Widget which contains the children.\n     */\n    getChildrenContainer() {\n      return this;\n    },\n\n    /**\n     * @type {Array} Placeholder for children list in empty widgets.\n     *     Mainly to keep instance number low.\n     *\n     * @lint ignoreReferenceField(__emptyChildren)\n     */\n    __emptyChildren: [],\n\n    /**\n     * Returns the children list\n     *\n     * @return {qx.ui.core.LayoutItem[]} The children array (Arrays are\n     *   reference types, so please do not modify it in-place).\n     */\n    _getChildren() {\n      return this.__widgetChildren || this.__emptyChildren;\n    },\n\n    /**\n     * Returns the index position of the given widget if it is\n     * a child widget. Otherwise it returns <code>-1</code>.\n     *\n     * @param child {qx.ui.core.Widget} the widget to query for\n     * @return {Integer} The index position or <code>-1</code> when\n     *   the given widget is no child of this layout.\n     */\n    _indexOf(child) {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return -1;\n      }\n\n      return children.indexOf(child);\n    },\n\n    /**\n     * Whether the widget contains children.\n     *\n     * @return {Boolean} Returns <code>true</code> when the widget has children.\n     */\n    _hasChildren() {\n      var children = this.__widgetChildren;\n      return children != null && !!children[0];\n    },\n\n    /**\n     * Recursively adds all children to the given queue\n     *\n     * @param queue {Array} The queue to add widgets to\n     */\n    addChildrenToQueue(queue) {\n      var children = this.__widgetChildren;\n      if (!children) {\n        return;\n      }\n\n      var child;\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n        queue.push(child);\n\n        child.addChildrenToQueue(queue);\n      }\n    },\n\n    /**\n     * Adds a new child widget.\n     *\n     * The supported keys of the layout options map depend on the layout manager\n     * used to position the widget. The options are documented in the class\n     * documentation of each layout manager {@link qx.ui.layout}.\n     *\n     * @param child {qx.ui.core.LayoutItem} the widget to add.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _add(child, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          child,\n          qx.ui.core.LayoutItem.constructor,\n          \"'Child' must be an instance of qx.ui.core.LayoutItem!\"\n        );\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      if (this.__widgetChildren) {\n        this.__widgetChildren.push(child);\n      } else {\n        this.__widgetChildren = [child];\n      }\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a child widget at the specified index\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param index {Integer} Index, at which the widget will be inserted. If no\n     *   widget exists at the given index, the new widget gets appended to the\n     *   current list of children.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAt(child, index, options) {\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      var ref = this.__widgetChildren[index];\n\n      if (ref === child) {\n        child.setLayoutProperties(options);\n      }\n\n      if (ref) {\n        qx.lang.Array.insertBefore(this.__widgetChildren, child, ref);\n      } else {\n        this.__widgetChildren.push(child);\n      }\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a widget before another already inserted widget\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param before {qx.ui.core.LayoutItem} widget before the new widget will be inserted.\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addBefore(child, before, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInArray(\n          before,\n          this._getChildren(),\n          \"The 'before' widget is not a child of this widget!\"\n        );\n      }\n\n      if (child == before) {\n        return;\n      }\n\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      qx.lang.Array.insertBefore(this.__widgetChildren, child, before);\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Add a widget after another already inserted widget\n     *\n     * @param child {qx.ui.core.LayoutItem} widget to add\n     * @param after {qx.ui.core.LayoutItem} widget, after which the new widget will\n     *   be inserted\n     * @param options {Map?null} Optional layout data for widget.\n     */\n    _addAfter(child, after, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInArray(\n          after,\n          this._getChildren(),\n          \"The 'after' widget is not a child of this widget!\"\n        );\n      }\n\n      if (child == after) {\n        return;\n      }\n\n      if (!this.__widgetChildren) {\n        this.__widgetChildren = [];\n      }\n\n      // When moving in the same widget, remove widget first\n      if (child.getLayoutParent() == this) {\n        qx.lang.Array.remove(this.__widgetChildren, child);\n      }\n\n      qx.lang.Array.insertAfter(this.__widgetChildren, child, after);\n\n      this.__addHelper(child, options);\n    },\n\n    /**\n     * Remove the given child widget.\n     *\n     * @param child {qx.ui.core.LayoutItem} the widget to remove\n     */\n    _remove(child) {\n      if (!this.__widgetChildren) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      qx.lang.Array.remove(this.__widgetChildren, child);\n      this.__removeHelper(child);\n    },\n\n    /**\n     * Remove the widget at the specified index.\n     *\n     * @param index {Integer} Index of the widget to remove.\n     * @return {qx.ui.core.LayoutItem} The removed item.\n     */\n    _removeAt(index) {\n      if (!this.__widgetChildren) {\n        throw new Error(\"This widget has no children!\");\n      }\n\n      var child = this.__widgetChildren[index];\n\n      qx.lang.Array.removeAt(this.__widgetChildren, index);\n      this.__removeHelper(child);\n\n      return child;\n    },\n\n    /**\n     * Remove all children.\n     *\n     * @return {Array} An array containing the removed children.\n     */\n    _removeAll() {\n      if (!this.__widgetChildren) {\n        return [];\n      }\n\n      // Working on a copy to make it possible to clear the\n      // internal array before calling setLayoutParent()\n      var children = this.__widgetChildren.concat();\n      this.__widgetChildren.length = 0;\n\n      for (var i = children.length - 1; i >= 0; i--) {\n        this.__removeHelper(children[i]);\n      }\n\n      qx.ui.core.queue.Layout.add(this);\n\n      return children;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING - TEMPLATE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method gets called each time after a child widget was added and can\n     * be overridden to get notified about child adds.\n     *\n     * @signature function(child)\n     * @param child {qx.ui.core.LayoutItem} The added child.\n     */\n    _afterAddChild: null,\n\n    /**\n     * This method gets called each time after a child widget was removed and\n     * can be overridden to get notified about child removes.\n     *\n     * @signature function(child)\n     * @param child {qx.ui.core.LayoutItem} The removed child.\n     */\n    _afterRemoveChild: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING - IMPLEMENTATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Convenience function to add a child widget. It will insert the child to\n     * the parent widget and schedule a layout update.\n     *\n     * @param child {qx.ui.core.LayoutItem} The child to add.\n     * @param options {Map|null} Optional layout data for the widget.\n     */\n    __addHelper(child, options) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertInstance(\n          child,\n          qx.ui.core.LayoutItem,\n          \"Invalid widget to add: \" + child\n        );\n\n        this.assertNotIdentical(\n          child,\n          this,\n          \"Could not add widget to itself: \" + child\n        );\n\n        if (options != null) {\n          this.assertType(options, \"object\", \"Invalid layout data: \" + options);\n        }\n      }\n\n      // Remove from old parent\n      var parent = child.getLayoutParent();\n      if (parent && parent != this) {\n        parent._remove(child);\n      }\n\n      // Remember parent\n      child.setLayoutParent(this);\n\n      // Import options: This call will\n      //  - clear the layout's children cache as well and\n      //  - add its parent (this widget) to the layout queue\n      if (options) {\n        child.setLayoutProperties(options);\n      } else {\n        this.updateLayoutProperties();\n      }\n\n      // call the template method\n      if (this._afterAddChild) {\n        this._afterAddChild(child);\n      }\n    },\n\n    /**\n     * Convenience function to remove a child widget. It will remove it\n     * from the parent widget and schedule a layout update.\n     *\n     * @param child {qx.ui.core.LayoutItem} The child to remove.\n     */\n    __removeHelper(child) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assertNotUndefined(child);\n      }\n\n      if (child.getLayoutParent() !== this) {\n        throw new Error(\n          \"Remove Error: \" + child + \" is not a child of this widget!\"\n        );\n      }\n\n      // Clear parent connection\n      child.setLayoutParent(null);\n\n      // clear the layout's children cache\n      if (this.__layoutManager) {\n        this.__layoutManager.invalidateChildrenCache();\n      }\n\n      // Add to layout queue\n      qx.ui.core.queue.Layout.add(this);\n\n      // call the template method\n      if (this._afterRemoveChild) {\n        this._afterRemoveChild(child);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Enables pointer event capturing. All pointer events will dispatched on this\n     * widget until capturing is disabled using {@link #releaseCapture} or a\n     * pointer button is clicked. If the widgets becomes the capturing widget the\n     * {@link #capture} event is fired. Once it loses capture mode the\n     * {@link #losecapture} event is fired.\n     *\n     * @param capture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     */\n    capture(capture) {\n      this.getContentElement().capture(capture);\n    },\n\n    /**\n     * Disables pointer capture mode enabled by {@link #capture}.\n     */\n    releaseCapture() {\n      this.getContentElement().releaseCapture();\n    },\n\n    /**\n     * Checks if pointer event capturing is enabled for this widget.\n     *\n     * @return {Boolean} <code>true</code> if capturing is active\n     */\n    isCapturing() {\n      var el = this.getContentElement().getDomElement();\n      if (!el) {\n        return false;\n      }\n      var manager = qx.event.Registration.getManager(el);\n      var dispatcher = manager.getDispatcher(qx.event.dispatch.MouseCapture);\n      return el == dispatcher.getCaptureElement();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PADDING SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyPadding(value, old, name) {\n      this._updateInsets = true;\n      qx.ui.core.queue.Layout.add(this);\n\n      this.__updateContentPadding(name, value);\n    },\n\n    /**\n     * Helper to updated the css padding of the content element considering the\n     * padding of the decorator.\n     * @param style {String} The name of the css padding property e.g. <code>paddingTop</code>\n     * @param value {Number} The value to set.\n     */\n    __updateContentPadding(style, value) {\n      var content = this.getContentElement();\n      var decorator = this.getDecorator();\n      decorator = qx.theme.manager.Decoration.getInstance().resolve(decorator);\n      if (decorator) {\n        var direction = qx.Bootstrap.firstLow(style.replace(\"padding\", \"\"));\n        value += decorator.getPadding()[direction] || 0;\n      }\n      content.setStyle(style, value + \"px\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DECORATION SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyDecorator(value, old) {\n      var content = this.getContentElement();\n\n      if (old) {\n        old = qx.theme.manager.Decoration.getInstance().getCssClassName(old);\n        content.removeClass(old);\n      }\n\n      if (value) {\n        value = qx.theme.manager.Decoration.getInstance().addCssClass(value);\n        content.addClass(value);\n      }\n      if (value || old) {\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      OTHER PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyToolTipText(value, old) {\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        if (this.__toolTipTextListenerId) {\n          return;\n        }\n        var manager = qx.locale.Manager.getInstance();\n        this.__toolTipTextListenerId = manager.addListener(\n          \"changeLocale\",\n          function () {\n            var toolTipText = this.getToolTipText();\n            if (toolTipText && toolTipText.translate) {\n              this.setToolTipText(toolTipText.translate());\n            }\n          },\n          this\n        );\n      }\n    },\n\n    // property apply\n    _applyTextColor(value, old) {\n      // empty template\n    },\n\n    // property apply\n    _applyZIndex(value, old) {\n      this.getContentElement().setStyle(\"zIndex\", value == null ? 0 : value);\n    },\n\n    // property apply\n    _applyVisibility(value, old) {\n      var content = this.getContentElement();\n\n      if (value === \"visible\") {\n        content.show();\n      } else {\n        content.hide();\n      }\n\n      // only force a layout update if visibility change from/to \"exclude\"\n      var parent = this.$$parent;\n      if (\n        parent &&\n        (old == null ||\n          value == null ||\n          old === \"excluded\" ||\n          value === \"excluded\")\n      ) {\n        parent.invalidateLayoutChildren();\n      }\n\n      // Update visibility cache\n      qx.ui.core.queue.Visibility.add(this);\n    },\n\n    // property apply\n    _applyOpacity(value, old) {\n      this.getContentElement().setStyle(\"opacity\", value == 1 ? null : value);\n    },\n\n    // property apply\n    _applyCursor(value, old) {\n      if (value == null && !this.isSelectable()) {\n        value = \"default\";\n      }\n\n      // In Opera the cursor must be set directly.\n      // http://bugzilla.qooxdoo.org/show_bug.cgi?id=1729\n      this.getContentElement().setStyle(\n        \"cursor\",\n        value,\n        qx.core.Environment.get(\"engine.name\") == \"opera\"\n      );\n    },\n\n    // property apply\n    _applyBackgroundColor(value, old) {\n      var color = this.getBackgroundColor();\n      var content = this.getContentElement();\n\n      var resolved = qx.theme.manager.Color.getInstance().resolve(color);\n      content.setStyle(\"backgroundColor\", resolved);\n    },\n\n    // property apply\n    _applyFont(value, old) {\n      // empty template\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DYNAMIC THEME SWITCH SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _onChangeTheme() {\n      if (this.isDisposed()) {\n        return;\n      }\n\n      super._onChangeTheme();\n\n      // update the appearance\n      this.updateAppearance();\n\n      // DECORATOR //\n      var value = this.getDecorator();\n      this._applyDecorator(null, value);\n      this._applyDecorator(value);\n\n      // FONT //\n      value = this.getFont();\n      if (qx.lang.Type.isString(value)) {\n        this._applyFont(value, value);\n      }\n\n      // TEXT COLOR //\n      value = this.getTextColor();\n      if (qx.lang.Type.isString(value)) {\n        this._applyTextColor(value, value);\n      }\n\n      // BACKGROUND COLOR //\n      value = this.getBackgroundColor();\n      if (qx.lang.Type.isString(value)) {\n        this._applyBackgroundColor(value, value);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Map} The current widget states */\n    __states: null,\n\n    /** @type {Boolean} Whether the widget has state changes which are not yet queued */\n    $$stateChanges: null,\n\n    /** @type {Map} Can be overridden to forward states to the child controls. */\n    _forwardStates: null,\n\n    /**\n     * Returns whether a state is set.\n     *\n     * @param state {String} the state to check.\n     * @return {Boolean} whether the state is set.\n     */\n    hasState(state) {\n      var states = this.__states;\n      return !!states && !!states[state];\n    },\n\n    /**\n     * Sets a state.\n     *\n     * @param state {String} The state to add\n     */\n    addState(state) {\n      // Dynamically create state map\n      var states = this.__states;\n      if (!states) {\n        states = this.__states = {};\n      }\n\n      if (states[state]) {\n        return;\n      }\n\n      // Add state and queue\n      this.__states[state] = true;\n\n      // Fast path for hovered state\n      if (state === \"hovered\") {\n        this.syncAppearance();\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[state] && controls) {\n        var control;\n        for (var id in controls) {\n          control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            controls[id].addState(state);\n          }\n        }\n      }\n    },\n\n    /**\n     * Clears a state.\n     *\n     * @param state {String} the state to clear.\n     */\n    removeState(state) {\n      // Check for existing state\n      var states = this.__states;\n      if (!states || !states[state]) {\n        return;\n      }\n\n      // Clear state and queue\n      delete this.__states[state];\n\n      // Fast path for hovered state\n      if (state === \"hovered\") {\n        this.syncAppearance();\n      } else if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[state] && controls) {\n        for (var id in controls) {\n          var control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            control.removeState(state);\n          }\n        }\n      }\n    },\n\n    /**\n     * Replaces the first state with the second one.\n     *\n     * This method is ideal for state transitions e.g. normal => selected.\n     *\n     * @param old {String} Previous state\n     * @param value {String} New state\n     */\n    replaceState(old, value) {\n      var states = this.__states;\n      if (!states) {\n        states = this.__states = {};\n      }\n\n      if (!states[value]) {\n        states[value] = true;\n      }\n\n      if (states[old]) {\n        delete states[old];\n      }\n\n      if (!qx.ui.core.queue.Visibility.isVisible(this)) {\n        this.$$stateChanges = true;\n      } else {\n        qx.ui.core.queue.Appearance.add(this);\n      }\n\n      // Forward state change to child controls\n      var forward = this._forwardStates;\n      var controls = this.__childControls;\n\n      if (forward && forward[value] && controls) {\n        for (var id in controls) {\n          var control = controls[id];\n          if (control instanceof qx.ui.core.Widget) {\n            control.replaceState(old, value);\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPEARANCE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {String} The currently compiled selector to lookup the matching appearance */\n    __appearanceSelector: null,\n\n    /** @type {Boolean} Whether the selectors needs to be recomputed before updating appearance */\n    __updateSelector: null,\n\n    /**\n     * Renders the appearance using the current widget states.\n     *\n     * Used exclusively by {qx.ui.core.queue.Appearance}.\n     */\n    syncAppearance() {\n      var states = this.__states;\n      var selector = this.__appearanceSelector;\n      var manager = qx.theme.manager.Appearance.getInstance();\n\n      // Cache deep accessor\n      var styler = qx.core.Property.$$method.setThemed;\n      var unstyler = qx.core.Property.$$method.resetThemed;\n\n      // Check for requested selector update\n      if (this.__updateSelector) {\n        // Clear flag\n        delete this.__updateSelector;\n\n        // Check if the selector was created previously\n        if (selector) {\n          // Query old selector\n          var oldData = manager.styleFrom(\n            selector,\n            states,\n            null,\n            this.getAppearance()\n          );\n\n          // Clear current selector (to force recompute)\n          selector = null;\n        }\n      }\n\n      // Build selector\n      if (!selector) {\n        var obj = this;\n        var id = [];\n\n        do {\n          id.push(obj.$$subcontrol || obj.getAppearance());\n        } while ((obj = obj.$$subparent));\n\n        // Combine parent control IDs, add top level appearance, filter result\n        // to not include positioning information anymore (e.g. #3)\n        selector = id\n          .reverse()\n          .join(\"/\")\n          .replace(/#[0-9]+/g, \"\");\n        this.__appearanceSelector = selector;\n      }\n\n      // Query current selector\n      var newData = manager.styleFrom(\n        selector,\n        states,\n        null,\n        this.getAppearance()\n      );\n\n      if (newData) {\n        if (oldData) {\n          for (var prop in oldData) {\n            if (newData[prop] === undefined) {\n              this[unstyler[prop]]();\n            }\n          }\n        }\n\n        // Check property availability of new data\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          for (var prop in newData) {\n            if (!this[styler[prop]]) {\n              throw new Error(\n                this.classname +\n                  ' has no themeable property \"' +\n                  prop +\n                  '\" while styling ' +\n                  selector\n              );\n            }\n          }\n        }\n\n        // Apply new data\n        for (var prop in newData) {\n          newData[prop] === undefined\n            ? this[unstyler[prop]]()\n            : this[styler[prop]](newData[prop]);\n        }\n      } else if (oldData) {\n        // Clear old data\n        for (var prop in oldData) {\n          this[unstyler[prop]]();\n        }\n      }\n\n      this.fireDataEvent(\"syncAppearance\", this.__states);\n    },\n\n    // property apply\n    _applyAppearance(value, old) {\n      this.updateAppearance();\n    },\n\n    /**\n     * Helper method called from the visibility queue to detect outstanding changes\n     * to the appearance.\n     *\n     * @internal\n     */\n    checkAppearanceNeeds() {\n      // CASE 1: Widget has never got an appearance already because it was never\n      // visible before. Normally add it to the queue is the easiest way to update it.\n      if (!this.__initialAppearanceApplied) {\n        qx.ui.core.queue.Appearance.add(this);\n        this.__initialAppearanceApplied = true;\n      }\n\n      // CASE 2: Widget has got an appearance before, but was hidden for some time\n      // which results into maybe omitted state changes have not been applied.\n      // In this case the widget is already queued in the appearance. This is basically\n      // what all addState/removeState do, but the queue itself may not have been registered\n      // to be flushed\n      else if (this.$$stateChanges) {\n        qx.ui.core.queue.Appearance.add(this);\n        delete this.$$stateChanges;\n      }\n    },\n\n    /**\n     * Refreshes the appearance of this widget and all\n     * registered child controls.\n     */\n    updateAppearance() {\n      // Clear selector\n      this.__updateSelector = true;\n\n      // Add to appearance queue\n      qx.ui.core.queue.Appearance.add(this);\n\n      // Update child controls\n      var controls = this.__childControls;\n      if (controls) {\n        var obj;\n        for (var id in controls) {\n          obj = controls[id];\n\n          if (obj instanceof qx.ui.core.Widget) {\n            obj.updateAppearance();\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET QUEUE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method is called during the flush of the\n     * {@link qx.ui.core.queue.Widget widget queue}.\n     *\n     * @param jobs {Map} A map of jobs.\n     */\n    syncWidget(jobs) {\n      // empty implementation\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the next event target in the parent chain. May\n     * also return the widget itself if it is not anonymous.\n     *\n     * @return {qx.ui.core.Widget} A working event target of this widget.\n     *    May be <code>null</code> as well.\n     */\n    getEventTarget() {\n      var target = this;\n\n      while (target.getAnonymous()) {\n        target = target.getLayoutParent();\n        if (!target) {\n          return null;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns the next focus target in the parent chain. May\n     * also return the widget itself if it is not anonymous and focusable.\n     *\n     * @return {qx.ui.core.Widget} A working focus target of this widget.\n     *    May be <code>null</code> as well.\n     */\n    getFocusTarget() {\n      var target = this;\n\n      if (!target.getEnabled()) {\n        return null;\n      }\n\n      while (target.getAnonymous() || !target.getFocusable()) {\n        target = target.getLayoutParent();\n        if (!target || !target.getEnabled()) {\n          return null;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns the element which should be focused.\n     *\n     * @return {qx.html.Element} The html element to focus.\n     */\n    getFocusElement() {\n      return this.getContentElement();\n    },\n\n    /**\n     * Whether the widget is reachable by pressing the TAB key.\n     *\n     * Normally tests for both, the focusable property and a positive or\n     * undefined tabIndex property. The widget must have a DOM element\n     * since only visible widgets are tabable.\n     *\n     * @return {Boolean} Whether the element is tabable.\n     */\n    isTabable() {\n      return !!this.getContentElement().getDomElement() && this.isFocusable();\n    },\n\n    // property apply\n    _applyFocusable(value, old) {\n      var target = this.getFocusElement();\n\n      // Apply native tabIndex attribute\n      if (value) {\n        var tabIndex = this.getTabIndex();\n        if (tabIndex == null) {\n          tabIndex = 1;\n        }\n\n        target.setAttribute(\"tabIndex\", tabIndex);\n\n        // Omit native dotted outline border\n        target.setStyle(\"outline\", \"none\");\n      } else {\n        if (target.isNativelyFocusable()) {\n          target.setAttribute(\"tabIndex\", -1);\n        } else if (old) {\n          target.setAttribute(\"tabIndex\", null);\n        }\n      }\n    },\n\n    // property apply\n    _applyKeepFocus(value) {\n      var target = this.getFocusElement();\n      target.setAttribute(\"qxKeepFocus\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyKeepActive(value) {\n      var target = this.getContentElement();\n      target.setAttribute(\"qxKeepActive\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyTabIndex(value) {\n      if (value == null) {\n        value = 1;\n      } else if (value < 1 || value > 32000) {\n        throw new Error(\"TabIndex property must be between 1 and 32000\");\n      }\n\n      if (this.getFocusable() && value != null) {\n        this.getFocusElement().setAttribute(\"tabIndex\", value);\n      }\n    },\n\n    // property apply\n    _applySelectable(value, old) {\n      // Re-apply cursor if not in \"initSelectable\"\n      if (old !== null) {\n        this._applyCursor(this.getCursor());\n      }\n\n      // Apply qooxdoo attribute\n      this.getContentElement().setSelectable(value);\n    },\n\n    // property apply\n    _applyEnabled(value, old) {\n      if (value === false) {\n        this.addState(\"disabled\");\n\n        // hovered not configured in widget, but as this is a\n        // standardized name in qooxdoo and we never want a hover\n        // state for disabled widgets, remove this state every time\n        this.removeState(\"hovered\");\n\n        // Blur when focused\n        if (this.isFocusable()) {\n          // Remove focused state\n          this.removeState(\"focused\");\n\n          // Remove tabIndex\n          this._applyFocusable(false, true);\n        }\n\n        // Remove draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(false, true);\n        }\n\n        // Remove droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(false, true);\n        }\n      } else {\n        this.removeState(\"disabled\");\n\n        // Re-add tabIndex\n        if (this.isFocusable()) {\n          this._applyFocusable(true, false);\n        }\n\n        // Re-add draggable\n        if (this.isDraggable()) {\n          this._applyDraggable(true, false);\n        }\n\n        // Re-add droppable\n        if (this.isDroppable()) {\n          this._applyDroppable(true, false);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CONTEXT MENU\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyNativeContextMenu(value, old, name) {\n      // empty body to allow overriding\n    },\n\n    // property apply\n    _applyContextMenu(value, old) {\n      if (old) {\n        old.removeState(\"contextmenu\");\n\n        if (old.getOpener() == this) {\n          old.resetOpener();\n        }\n\n        if (!value) {\n          this.removeListener(\"contextmenu\", this._onContextMenuOpen);\n          this.removeListener(\"longtap\", this._onContextMenuOpen);\n          old.removeListener(\n            \"changeVisibility\",\n            this._onBeforeContextMenuOpen,\n            this\n          );\n        }\n      }\n\n      if (value) {\n        value.setOpener(this);\n        value.addState(\"contextmenu\");\n\n        if (!old) {\n          this.addListener(\"contextmenu\", this._onContextMenuOpen);\n          this.addListener(\"longtap\", this._onContextMenuOpen);\n          value.addListener(\n            \"changeVisibility\",\n            this._onBeforeContextMenuOpen,\n            this\n          );\n        }\n      }\n    },\n\n    /**\n     * Event listener for <code>contextmenu</code> event\n     *\n     * @param e {qx.event.type.Pointer} The event object\n     */\n    _onContextMenuOpen(e) {\n      // only allow long tap context menu on touch interactions\n      if (e.getType() == \"longtap\") {\n        if (e.getPointerType() !== \"touch\") {\n          return;\n        }\n      }\n      this.getContextMenu().openAtPointer(e);\n\n      // Do not show native menu\n      // don't open any other contextmenus\n      e.stop();\n    },\n\n    /**\n     * Event listener for <code>beforeContextmenuOpen</code> event\n     *\n     * @param e {qx.event.type.Data} The data event\n     */\n    _onBeforeContextMenuOpen(e) {\n      if (\n        e.getData() == \"visible\" &&\n        this.hasListener(\"beforeContextmenuOpen\")\n      ) {\n        this.fireDataEvent(\"beforeContextmenuOpen\", e);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USEFUL COMMON EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener which stops a bubbling event from\n     * propagates further.\n     *\n     * @param e {qx.event.type.Event} Any bubbling event\n     */\n    _onStopEvent(e) {\n      e.stopPropagation();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DRAG & DROP SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Helper to return a instance of a {@link qx.ui.core.DragDropCursor}.\n     * If you want to use your own DragDropCursor, override this method\n     * and return your custom instance.\n     * @return {qx.ui.core.DragDropCursor} A drag drop cursor implementation.\n     */\n    _getDragDropCursor() {\n      return qx.ui.core.DragDropCursor.getInstance();\n    },\n\n    // property apply\n    _applyDraggable(value, old) {\n      if (!this.isEnabled() && value === true) {\n        value = false;\n      }\n\n      // Force cursor creation\n      this._getDragDropCursor();\n\n      // Process listeners\n      if (value) {\n        this.addListener(\"dragstart\", this._onDragStart);\n        this.addListener(\"drag\", this._onDrag);\n        this.addListener(\"dragend\", this._onDragEnd);\n        this.addListener(\"dragchange\", this._onDragChange);\n      } else {\n        this.removeListener(\"dragstart\", this._onDragStart);\n        this.removeListener(\"drag\", this._onDrag);\n        this.removeListener(\"dragend\", this._onDragEnd);\n        this.removeListener(\"dragchange\", this._onDragChange);\n      }\n\n      // Sync DOM attribute\n      this.getContentElement().setAttribute(\"qxDraggable\", value ? \"on\" : null);\n    },\n\n    // property apply\n    _applyDroppable(value, old) {\n      if (!this.isEnabled() && value === true) {\n        value = false;\n      }\n\n      // Sync DOM attribute\n      this.getContentElement().setAttribute(\"qxDroppable\", value ? \"on\" : null);\n    },\n\n    /**\n     * Event listener for own <code>dragstart</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragStart(e) {\n      this._getDragDropCursor().placeToPointer(e);\n      this.getApplicationRoot().setGlobalCursor(\"default\");\n    },\n\n    /**\n     * Event listener for own <code>drag</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDrag(e) {\n      this._getDragDropCursor().placeToPointer(e);\n    },\n\n    /**\n     * Event listener for own <code>dragend</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragEnd(e) {\n      this._getDragDropCursor().moveTo(-1000, -1000);\n      this.getApplicationRoot().resetGlobalCursor();\n    },\n\n    /**\n     * Event listener for own <code>dragchange</code> event.\n     *\n     * @param e {qx.event.type.Drag} Drag event\n     */\n    _onDragChange(e) {\n      var cursor = this._getDragDropCursor();\n      var action = e.getCurrentAction();\n      action ? cursor.setAction(action) : cursor.resetAction();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      VISUALIZE FOCUS STATES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event handler which is executed when the widget receives the focus.\n     *\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\n     * apply states etc. to a focused widget.\n     *\n     * @internal\n     */\n    visualizeFocus() {\n      this.addState(\"focused\");\n    },\n\n    /**\n     * Event handler which is executed when the widget lost the focus.\n     *\n     * This method is used by the {@link qx.ui.core.FocusHandler} to\n     * remove states etc. from a previously focused widget.\n     *\n     * @internal\n     */\n    visualizeBlur() {\n      this.removeState(\"focused\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      SCROLL CHILD INTO VIEW\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The method scrolls the given item into view.\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param alignX {String?null} Alignment of the item. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param alignY {String?null} Alignment of the item. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoView(child, alignX, alignY, direct) {\n      // Scroll directly on default\n      direct = typeof direct == \"undefined\" ? true : direct;\n\n      // Always lazy scroll when either\n      // - the child\n      // - its layout parent\n      // - its siblings\n      // have layout changes scheduled.\n      //\n      // This is to make sure that the scroll position is computed\n      // after layout changes have been applied to the DOM. Note that changes\n      // scheduled for the grand parent (and up) are not tracked and need to\n      // be signaled manually.\n      var Layout = qx.ui.core.queue.Layout;\n      var parent;\n\n      // Child\n      if (direct) {\n        direct = !Layout.isScheduled(child);\n        parent = child.getLayoutParent();\n\n        // Parent\n        if (direct && parent) {\n          direct = !Layout.isScheduled(parent);\n\n          // Siblings\n          if (direct) {\n            parent.getChildren().forEach(function (sibling) {\n              direct = direct && !Layout.isScheduled(sibling);\n            });\n          }\n        }\n      }\n\n      this.scrollChildIntoViewX(child, alignX, direct);\n      this.scrollChildIntoViewY(child, alignY, direct);\n    },\n\n    /**\n     * The method scrolls the given item into view (x-axis only).\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param align {String?null} Alignment of the item. Allowed values:\n     *   <code>left</code> or <code>right</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewX(child, align, direct) {\n      this.getContentElement().scrollChildIntoViewX(\n        child.getContentElement(),\n        align,\n        direct\n      );\n    },\n\n    /**\n     * The method scrolls the given item into view (y-axis only).\n     *\n     * @param child {qx.ui.core.Widget} Child to scroll into view\n     * @param align {String?null} Alignment of the element. Allowed values:\n     *   <code>top</code> or <code>bottom</code>. Could also be null.\n     *   Without a given alignment the method tries to scroll the widget\n     *   with the minimum effort needed.\n     * @param direct {Boolean?true} Whether the execution should be made\n     *   directly when possible\n     */\n    scrollChildIntoViewY(child, align, direct) {\n      this.getContentElement().scrollChildIntoViewY(\n        child.getContentElement(),\n        align,\n        direct\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS SYSTEM USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Focus this widget.\n     *\n     */\n    focus() {\n      if (this.isFocusable()) {\n        this.getFocusElement().focus();\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\n        throw new Error(\"Widget is not focusable!\");\n      }\n    },\n\n    /**\n     * Remove focus from this widget.\n     *\n     */\n    blur() {\n      if (this.isFocusable()) {\n        this.getFocusElement().blur();\n      } else if (qx.ui.core.Widget.UNFOCUSABLE_WIDGET_FOCUS_BLUR_ERROR) {\n        throw new Error(\"Widget is not focusable!\");\n      }\n    },\n\n    /**\n     * Activate this widget e.g. for keyboard events.\n     *\n     */\n    activate() {\n      this.getContentElement().activate();\n    },\n\n    /**\n     * Deactivate this widget e.g. for keyboard events.\n     *\n     */\n    deactivate() {\n      this.getContentElement().deactivate();\n    },\n\n    /**\n     * Focus this widget when using the keyboard. This is\n     * mainly thought for the advanced qooxdoo keyboard handling\n     * and should not be used by the application developer.\n     *\n     * @internal\n     */\n    tabFocus() {\n      this.getFocusElement().focus();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILD CONTROL SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Whether the given ID is assigned to a child control.\n     *\n     * @param id {String} ID of the child control\n     * @return {Boolean} <code>true</code> when the child control is registered.\n     */\n    hasChildControl(id) {\n      if (!this.__childControls) {\n        return false;\n      }\n\n      return !!this.__childControls[id];\n    },\n\n    /** @type {Map} Map of instantiated child controls */\n    __childControls: null,\n\n    /**\n     * Returns a map of all already created child controls\n     *\n     * @return {Map} mapping of child control id to the child widget.\n     */\n    _getCreatedChildControls() {\n      return this.__childControls;\n    },\n\n    /**\n     * Returns the child control from the given ID. Returns\n     * <code>null</code> when the child control is unknown.\n     *\n     * It is designed for widget authors, who want to access child controls,\n     * which are created by the widget itself.\n     *\n     * <b>Warning</b>: This method exposes widget internals and modifying the\n     * returned sub widget may bring the widget into an inconsistent state.\n     * Accessing child controls defined in a super class or in an foreign class\n     * is not supported. Do not use it if the result can be achieved using public\n     * API or theming.\n     *\n     * @param id {String} ID of the child control\n     * @param notcreate {Boolean?false} Whether the child control\n     *    should not be created dynamically if not yet available.\n     * @return {qx.ui.core.Widget} Child control\n     */\n    getChildControl(id, notcreate) {\n      if (!this.__childControls) {\n        if (notcreate) {\n          return null;\n        }\n\n        this.__childControls = {};\n      }\n\n      var control = this.__childControls[id];\n      if (control) {\n        return control;\n      }\n\n      if (notcreate === true) {\n        return null;\n      }\n\n      return this._createChildControl(id);\n    },\n\n    /**\n     * Shows the given child control by ID\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} the child control\n     */\n    _showChildControl(id) {\n      var control = this.getChildControl(id);\n      control.show();\n      return control;\n    },\n\n    /**\n     * Excludes the given child control by ID\n     *\n     * @param id {String} ID of the child control\n     */\n    _excludeChildControl(id) {\n      var control = this.getChildControl(id, true);\n      if (control) {\n        control.exclude();\n      }\n    },\n\n    /**\n     * Whether the given child control is visible.\n     *\n     * @param id {String} ID of the child control\n     * @return {Boolean} <code>true</code> when the child control is visible.\n     */\n    _isChildControlVisible(id) {\n      var control = this.getChildControl(id, true);\n      if (control) {\n        return control.isVisible();\n      }\n\n      return false;\n    },\n\n    /**\n     * Release the child control by ID and decouple the\n     * child from the parent. This method does not dispose the child control.\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} The released control\n     */\n    _releaseChildControl(id) {\n      var control = this.getChildControl(id, false);\n      if (!control) {\n        throw new Error(\"Unsupported control: \" + id);\n      }\n\n      // remove connection to parent\n      delete control.$$subcontrol;\n      delete control.$$subparent;\n\n      // remove state forwarding\n      var states = this.__states;\n      var forward = this._forwardStates;\n\n      if (states && forward && control instanceof qx.ui.core.Widget) {\n        for (var state in states) {\n          if (forward[state]) {\n            control.removeState(state);\n          }\n        }\n      }\n\n      delete this.__childControls[id];\n\n      return control;\n    },\n\n    /**\n     * Force the creation of the given child control by ID.\n     *\n     * Do not override this method! Override {@link #_createChildControlImpl}\n     * instead if you need to support new controls.\n     *\n     * @param id {String} ID of the child control\n     * @return {qx.ui.core.Widget} The created control\n     * @throws {Error} when the control was created before\n     */\n    _createChildControl(id) {\n      if (!this.__childControls) {\n        this.__childControls = {};\n      } else if (this.__childControls[id]) {\n        throw new Error(\"Child control '\" + id + \"' already created!\");\n      }\n\n      var pos = id.indexOf(\"#\");\n      try {\n        if (pos == -1) {\n          var control = this._createChildControlImpl(id);\n        } else {\n          var control = this._createChildControlImpl(\n            id.substring(0, pos),\n            id.substring(pos + 1, id.length)\n          );\n        }\n      } catch (exc) {\n        exc.message =\n          \"Exception while creating child control '\" +\n          id +\n          \"' of widget \" +\n          this.toString() +\n          \": \" +\n          exc.message;\n        throw exc;\n      }\n\n      if (!control) {\n        throw new Error(\"Unsupported control: \" + id);\n      }\n\n      // Establish connection to parent\n      control.$$subcontrol = id;\n      control.$$subparent = this;\n\n      // Support for state forwarding\n      var states = this.__states;\n      var forward = this._forwardStates;\n\n      if (states && forward && control instanceof qx.ui.core.Widget) {\n        for (var state in states) {\n          if (forward[state]) {\n            control.addState(state);\n          }\n        }\n      }\n\n      // If the appearance is already synced after the child control\n      // we need to update the appearance now, because the selector\n      // might be not correct in certain cases.\n      if (control.$$resyncNeeded) {\n        delete control.$$resyncNeeded;\n        control.updateAppearance();\n      }\n\n      this.fireDataEvent(\"createChildControl\", control);\n\n      // Register control and return\n      return (this.__childControls[id] = control);\n    },\n\n    /**\n     * Internal method to create child controls. This method\n     * should be overwritten by classes which extends this one\n     * to support new child control types.\n     *\n     * @param id {String} ID of the child control. If a # is used, the id is\n     *   the part in front of the #.\n     * @param hash {String?undefined} If a child control name contains a #,\n     *   all text following the # will be the hash argument.\n     * @return {qx.ui.core.Widget} The created control or <code>null</code>\n     */\n    _createChildControlImpl(id, hash) {\n      return null;\n    },\n\n    /**\n     * Dispose all registered controls. This is automatically\n     * executed by the widget.\n     *\n     */\n    _disposeChildControls() {\n      var controls = this.__childControls;\n      if (!controls) {\n        return;\n      }\n\n      var Widget = qx.ui.core.Widget;\n\n      for (var id in controls) {\n        var control = controls[id];\n        if (!Widget.contains(this, control)) {\n          control.destroy();\n        } else {\n          control.dispose();\n        }\n      }\n\n      delete this.__childControls;\n    },\n\n    /**\n     * Finds and returns the top level control. This is the first\n     * widget which is not a child control of any other widget.\n     *\n     * @return {qx.ui.core.Widget} The top control\n     */\n    _findTopControl() {\n      var obj = this;\n      while (obj) {\n        if (!obj.$$subparent) {\n          return obj;\n        }\n\n        obj = obj.$$subparent;\n      }\n\n      return null;\n    },\n\n    /**\n     * Return the ID (name) if this instance was a created as a child control of another widget.\n     *\n     * See the first parameter id in {@link qx.ui.core.Widget#_createChildControlImpl}\n     *\n     * @return {String|null} ID of the current widget or null if it was not created as a subcontrol\n     */\n    getSubcontrolId() {\n      return this.$$subcontrol || null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LOWER LEVEL ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Computes the location of the content element in context of the document\n     * dimensions.\n     *\n     * Supported modes:\n     *\n     * * <code>margin</code>: Calculate from the margin box of the element\n     *   (bigger than the visual appearance: including margins of given element)\n     * * <code>box</code>: Calculates the offset box of the element (default,\n     *   uses the same size as visible)\n     * * <code>border</code>: Calculate the border box (useful to align to\n     *   border edges of two elements).\n     * * <code>scroll</code>: Calculate the scroll box (relevant for absolute\n     *   positioned content).\n     * * <code>padding</code>: Calculate the padding box (relevant for\n     *   static/relative positioned content).\n     *\n     * @param mode {String?box} A supported option. See comment above.\n     * @return {Map} Returns a map with <code>left</code>, <code>top</code>,\n     *   <code>right</code> and <code>bottom</code> which contains the distance\n     *   of the element relative to the document.\n     */\n    getContentLocation(mode) {\n      var domEl = this.getContentElement().getDomElement();\n      return domEl ? qx.bom.element.Location.get(domEl, mode) : null;\n    },\n\n    /**\n     * Directly modifies the relative left position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param value {Integer} Left position\n     */\n    setDomLeft(value) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.left = value + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /**\n     * Directly modifies the relative top position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param value {Integer} Top position\n     */\n    setDomTop(value) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.top = value + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /**\n     * Directly modifies the relative left and top position in relation\n     * to the parent element.\n     *\n     * Use with caution! This may be used for animations, drag&drop\n     * or other cases where high performance location manipulation\n     * is important. Otherwise please use {@link qx.ui.core.LayoutItem#setUserBounds} instead.\n     *\n     * @param left {Integer} Left position\n     * @param top {Integer} Top position\n     */\n    setDomPosition(left, top) {\n      var domEl = this.getContentElement().getDomElement();\n      if (domEl) {\n        domEl.style.left = left + \"px\";\n        domEl.style.top = top + \"px\";\n      } else {\n        throw new Error(\"DOM element is not yet created!\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ARIA attrs support\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the string which labels this widget. This will be read out by screenreaders. Needed if there is no\n     * readable text/label in this widget which would automatically act as aria-label.\n     * @param label {String} Labelling Text\n     */\n    setAriaLabel(label) {\n      this.getContentElement().setAttribute(\"aria-label\", label);\n    },\n\n    /**\n     * Marks that this widget gets labelled by another widget. This will be read out by screenreaders as first\n     * information.\n     * Similiar to aria-label, difference being that the labelling widget is an different widget and multiple\n     * widgets can be added.\n     * @param labelWidgets {qx.ui.core.Widget[]} Indefinite Number of labelling Widgets\n     */\n    addAriaLabelledBy(...labelWidgets) {\n      this.__addAriaXBy(labelWidgets, \"aria-labelledby\");\n    },\n\n    /**\n     * Marks that this widget gets described by another widget. This will be read out by screenreaders as last\n     * information. Multiple Widgets possible.\n     * @param describingWidgets {qx.ui.core.Widget[]} Indefinite Number of describing Widgets\n     */\n    addAriaDescribedBy(...describingWidgets) {\n      this.__addAriaXBy(describingWidgets, \"aria-describedby\");\n    },\n\n    /**\n     * Sets either aria-labelledby or aria-describedby\n     * @param widgets {qx.ui.core.Widget[]} Indefinite Number of widgets\n     * @param ariaAttr {String} aria-labelledby | aria-describedby\n     */\n    __addAriaXBy(widgets, ariaAttr) {\n      if (![\"aria-labelledby\", \"aria-describedby\"].includes(ariaAttr)) {\n        throw new Error(\"Only aria-labelledby or aria-describedby allowed!\");\n      }\n      let idArr = [];\n      for (const widget of widgets) {\n        if (!(widget instanceof qx.ui.core.Widget)) {\n          throw new Error(\n            \"Given widget \" +\n              widget +\n              \" is not an instance of qx.ui.core.Widget!\"\n          );\n        }\n        const contentEl = widget.getContentElement();\n        let widgetId = contentEl.getAttribute(\"id\");\n        if (!widgetId) {\n          widgetId = `label-${widget.toHashCode()}`;\n          contentEl.setAttribute(\"id\", widgetId);\n        }\n        if (!idArr.includes(widgetId)) {\n          idArr.push(widgetId);\n        }\n      }\n      if (idArr.length === 0) {\n        return;\n      }\n      const idStr = idArr.join(\" \");\n      const contentEl = this.getContentElement();\n      let res = contentEl.getAttribute(ariaAttr);\n      res = res ? `${res} ${idStr}` : idStr;\n      contentEl.setAttribute(ariaAttr, res);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ENHANCED DISPOSE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Removes this widget from its parent and disposes it.\n     *\n     * Please note that the widget is not disposed synchronously. The\n     * real dispose happens after the next queue flush.\n     *\n     */\n    destroy() {\n      if (this.$$disposed) {\n        return;\n      }\n\n      // We may be deferring disposing, but we can at least prevent\n      // listener handlers from being called. We don't know exactly\n      // what listeners have already been disposed at this point.\n      qx.event.Registration.removeAllListeners(this);\n\n      var parent = this.$$parent;\n      if (parent) {\n        parent._remove(this);\n      }\n\n      qx.ui.core.queue.Dispose.add(this);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CLONE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    clone() {\n      var clone = super.clone();\n\n      if (this.getChildren) {\n        var children = this.getChildren();\n        for (var i = 0, l = children.length; i < l; i++) {\n          clone.add(children[i].clone());\n        }\n      }\n\n      return clone;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    // Some dispose stuff is not needed in global shutdown, otherwise\n    // it just slows down things a bit, so do not do them.\n    if (!qx.core.ObjectRegistry.inShutDown) {\n      if (qx.core.Environment.get(\"qx.dynlocale\")) {\n        if (this.__toolTipTextListenerId) {\n          qx.locale.Manager.getInstance().removeListenerById(\n            this.__toolTipTextListenerId\n          );\n        }\n      }\n\n      // Remove widget pointer from DOM\n      var contentEl = this.getContentElement();\n      if (contentEl) {\n        contentEl.disconnectWidget(this);\n      }\n\n      // Clean up all child controls\n      this._disposeChildControls();\n\n      // Remove from ui queues\n      qx.ui.core.queue.Appearance.remove(this);\n      qx.ui.core.queue.Layout.remove(this);\n      qx.ui.core.queue.Visibility.remove(this);\n      qx.ui.core.queue.Widget.remove(this);\n    }\n\n    if (this.getContextMenu()) {\n      this.setContextMenu(null);\n    }\n\n    // pool decorators if not in global shutdown\n    if (!qx.core.ObjectRegistry.inShutDown) {\n      this.clearSeparators();\n      this.__separators = null;\n    } else {\n      this._disposeArray(\"__separators\");\n    }\n\n    // Clear children array\n    this._disposeArray(\"__widgetChildren\");\n\n    // Cleanup map of appearance states\n    this.__states = this.__childControls = null;\n\n    // Dispose layout manager and HTML elements\n    this._disposeObjects(\"__layoutManager\", \"__contentElement\");\n  }\n});\n"
  ]
}