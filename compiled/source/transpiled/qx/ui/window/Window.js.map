{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/ui/window/Window.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MRemoteChildrenHandling",
    "MRemoteLayoutHandling",
    "MResizable",
    "MMovable",
    "MContentPadding",
    "construct",
    "caption",
    "icon",
    "_setLayout",
    "layout",
    "VBox",
    "_createChildControl",
    "setIcon",
    "setCaption",
    "_updateCaptionBar",
    "addListener",
    "_onWindowPointerDown",
    "_onWindowFocusOut",
    "Init",
    "getApplication",
    "getRoot",
    "add",
    "initVisibility",
    "FocusHandler",
    "getInstance",
    "addRoot",
    "_getResizeFrame",
    "setAppearance",
    "getContentElement",
    "setAttribute",
    "addAriaLabelledBy",
    "getChildControl",
    "addAriaDescribedBy",
    "statics",
    "DEFAULT_MANAGER_CLASS",
    "window",
    "Manager",
    "events",
    "beforeClose",
    "close",
    "beforeMinimize",
    "minimize",
    "beforeMaximize",
    "maximize",
    "beforeRestore",
    "restore",
    "properties",
    "appearance",
    "refine",
    "init",
    "visibility",
    "focusable",
    "active",
    "check",
    "apply",
    "event",
    "alwaysOnTop",
    "modal",
    "nullable",
    "themeable",
    "status",
    "showClose",
    "showMaximize",
    "showMinimize",
    "allowClose",
    "allowMaximize",
    "allowMinimize",
    "showStatusbar",
    "centerOnAppear",
    "centerOnContainerResize",
    "autoDestroy",
    "members",
    "__restoredTop",
    "__restoredLeft",
    "__centeringAppearId",
    "__centeringResizeId",
    "getChildrenContainer",
    "_forwardStates",
    "maximized",
    "setLayoutParent",
    "parent",
    "oldParent",
    "assertInterface",
    "IDesktop",
    "getLayoutParent",
    "removeListenerById",
    "getCenterOnContainerResize",
    "center",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "container",
    "Composite",
    "HBox",
    "_add",
    "basic",
    "Label",
    "setValue",
    "getStatus",
    "flex",
    "Grid",
    "setRowFlex",
    "setColumnFlex",
    "_onCaptionPointerDblTap",
    "_activateMoveHandle",
    "Image",
    "getIcon",
    "row",
    "column",
    "getCaption",
    "setWidth",
    "setAllowGrowX",
    "captionBar",
    "form",
    "Button",
    "setFocusable",
    "_onMinimizeButtonTap",
    "_onRestoreButtonTap",
    "_onMaximizeButtonTap",
    "_onCloseButtonTap",
    "btn",
    "setSource",
    "_showChildControl",
    "_excludeChildControl",
    "getShowMinimize",
    "getAllowMinimize",
    "resetEnabled",
    "setEnabled",
    "getShowMaximize",
    "isMaximized",
    "getAllowMaximize",
    "getShowClose",
    "getAllowClose",
    "getAutoDestroy",
    "isVisible",
    "fireNonBubblingEvent",
    "type",
    "Event",
    "hide",
    "fireEvent",
    "dispose",
    "open",
    "show",
    "setActive",
    "focus",
    "bounds",
    "getBounds",
    "hint",
    "getSizeHint",
    "left",
    "Math",
    "round",
    "width",
    "top",
    "height",
    "moveTo",
    "warn",
    "supportsMaximize",
    "props",
    "getLayoutProperties",
    "undefined",
    "setLayoutProperties",
    "edge",
    "addState",
    "removeState",
    "getMode",
    "hasState",
    "_applyActive",
    "value",
    "old",
    "_applyModal",
    "_getContentPaddingTarget",
    "_applyShowStatusbar",
    "resizeFrame",
    "_applyCaptionBarChange",
    "_applyStatus",
    "label",
    "_applyFocusable",
    "Environment",
    "get",
    "_applyCenterOnAppear",
    "_applyCenterOnContainerResize",
    "_onWindowEventStop",
    "e",
    "stopPropagation",
    "getModal",
    "current",
    "getRelatedTarget",
    "contains",
    "getTarget",
    "reset",
    "destruct",
    "removeRoot",
    "remove",
    "Window"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * A window widget\n *\n * More information can be found in the package description {@link qx.ui.window}.\n *\n * @childControl statusbar {qx.ui.container.Composite} statusbar container which shows the statusbar text\n * @childControl statusbar-text {qx.ui.basic.Label} text of the statusbar\n * @childControl pane {qx.ui.container.Composite} window pane which holds the content\n * @childControl captionbar {qx.ui.container.Composite} Container for all widgets inside the captionbar\n * @childControl icon {qx.ui.basic.Image} icon at the left of the captionbar\n * @childControl title {qx.ui.basic.Label} caption of the window\n * @childControl minimize-button {qx.ui.form.Button} button to minimize the window\n * @childControl restore-button {qx.ui.form.Button} button to restore the window\n * @childControl maximize-button {qx.ui.form.Button} button to maximize the window\n * @childControl close-button {qx.ui.form.Button} button to close the window\n */\nqx.Class.define(\"qx.ui.window.Window\", {\n  extend: qx.ui.core.Widget,\n\n  include: [\n    qx.ui.core.MRemoteChildrenHandling,\n    qx.ui.core.MRemoteLayoutHandling,\n    qx.ui.core.MResizable,\n    qx.ui.core.MMovable,\n    qx.ui.core.MContentPadding\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param caption {String?} The caption text\n   * @param icon {String?} The URL of the caption bar icon\n   */\n  construct(caption, icon) {\n    super();\n\n    // configure internal layout\n    this._setLayout(new qx.ui.layout.VBox());\n\n    // force creation of captionbar\n    this._createChildControl(\"captionbar\");\n    this._createChildControl(\"pane\");\n\n    // apply constructor parameters\n    if (icon != null) {\n      this.setIcon(icon);\n    }\n\n    if (caption != null) {\n      this.setCaption(caption);\n    }\n\n    // Update captionbar\n    this._updateCaptionBar();\n\n    // Activation listener\n    this.addListener(\"pointerdown\", this._onWindowPointerDown, this, true);\n\n    // Focusout listener\n    this.addListener(\"focusout\", this._onWindowFocusOut, this);\n\n    // Automatically add to application root.\n    qx.core.Init.getApplication().getRoot().add(this);\n\n    // Initialize visibility\n    this.initVisibility();\n\n    // Register as root for the focus handler\n    qx.ui.core.FocusHandler.getInstance().addRoot(this);\n\n    // Change the resize frames appearance\n    this._getResizeFrame().setAppearance(\"window-resize-frame\");\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"dialog\");\n    this.addAriaLabelledBy(this.getChildControl(\"title\"));\n    this.addAriaDescribedBy(this.getChildControl(\"statusbar-text\"));\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Class} The default window manager class. */\n    DEFAULT_MANAGER_CLASS: qx.ui.window.Manager\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * Fired before the window is closed.\n     *\n     * The close action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeClose: \"qx.event.type.Event\",\n\n    /** Fired if the window is closed */\n    close: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is minimize.\n     *\n     * The minimize action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeMinimize: \"qx.event.type.Event\",\n\n    /** Fired if the window is minimized */\n    minimize: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is maximize.\n     *\n     * The maximize action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeMaximize: \"qx.event.type.Event\",\n\n    /** Fired if the window is maximized */\n    maximize: \"qx.event.type.Event\",\n\n    /**\n     * Fired before the window is restored from a minimized or maximized state.\n     *\n     * The restored action can be prevented by calling\n     * {@link qx.event.type.Event#preventDefault} on the event object\n     */\n    beforeRestore: \"qx.event.type.Event\",\n\n    /** Fired if the window is restored from a minimized or maximized state */\n    restore: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL OPTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"window\"\n    },\n\n    // overridden\n    visibility: {\n      refine: true,\n      init: \"excluded\"\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /**\n     * If the window is active, only one window in a single qx.ui.window.Manager could\n     *  have set this to true at the same time.\n     */\n    active: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyActive\",\n      event: \"changeActive\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC OPTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the window be always on top */\n    alwaysOnTop: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeAlwaysOnTop\"\n    },\n\n    /** Should the window be modal (this disables minimize and maximize buttons) */\n    modal: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeModal\",\n      apply: \"_applyModal\"\n    },\n\n    /** The text of the caption */\n    caption: {\n      apply: \"_applyCaptionBarChange\",\n      event: \"changeCaption\",\n      nullable: true\n    },\n\n    /** The icon of the caption */\n    icon: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyCaptionBarChange\",\n      event: \"changeIcon\",\n      themeable: true\n    },\n\n    /** The text of the statusbar */\n    status: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyStatus\",\n      event: \"changeStatus\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HIDE CAPTIONBAR FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the close button be shown */\n    showClose: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /** Should the maximize button be shown */\n    showMaximize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /** Should the minimize button be shown */\n    showMinimize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\",\n      themeable: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DISABLE CAPTIONBAR FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the user have the ability to close the window */\n    allowClose: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /** Should the user have the ability to maximize the window */\n    allowMaximize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /** Should the user have the ability to minimize the window */\n    allowMinimize: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyCaptionBarChange\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATUSBAR CONFIG\n    ---------------------------------------------------------------------------\n    */\n\n    /** Should the statusbar be shown */\n    showStatusbar: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyShowStatusbar\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WHEN TO AUTOMATICALY CENTER\n    ---------------------------------------------------------------------------\n    */\n\n    /** Whether this window should be automatically centered when it appears */\n    centerOnAppear: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyCenterOnAppear\"\n    },\n\n    /**\n     * Whether this window should be automatically centered when its container\n     * is resized.\n     */\n    centerOnContainerResize: {\n      init: false,\n      check: \"Boolean\",\n      apply: \"_applyCenterOnContainerResize\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CLOSE BEHAVIOR\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Should the window be automatically destroyed when it is closed.\n     *\n     * When false, closing the window behaves like hiding the window.\n     *\n     * When true, the window is removed from its container (the root), all\n     * listeners are removed, the window's widgets are removed, and the window\n     * is destroyed.\n     *\n     * NOTE: If any widgets that were added to this window require special\n     * clean-up, you should listen on the 'close' event and remove and clean\n     * up those widgets there.\n     */\n    autoDestroy: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    /** @type {Integer} Original top value before maximation had occurred */\n    __restoredTop: null,\n\n    /** @type {Integer} Original left value before maximation had occurred */\n    __restoredLeft: null,\n\n    /** @type {Integer} Listener ID for centering on appear */\n    __centeringAppearId: null,\n\n    /** @type {Integer} Listener ID for centering on resize */\n    __centeringResizeId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * The children container needed by the {@link qx.ui.core.MRemoteChildrenHandling}\n     * mixin\n     *\n     * @return {qx.ui.container.Composite} pane sub widget\n     */\n    getChildrenContainer() {\n      return this.getChildControl(\"pane\");\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      active: true,\n      maximized: true,\n      showStatusbar: true,\n      modal: true\n    },\n\n    // overridden\n    setLayoutParent(parent) {\n      var oldParent;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        parent &&\n          this.assertInterface(\n            parent,\n            qx.ui.window.IDesktop,\n            \"Windows can only be added to widgets, which implement the interface \" +\n              \"qx.ui.window.IDesktop. All root widgets implement this interface.\"\n          );\n      }\n\n      // Before changing the parent, if there's a prior one, remove our resize\n      // listener\n      oldParent = this.getLayoutParent();\n      if (oldParent && this.__centeringResizeId) {\n        oldParent.removeListenerById(this.__centeringResizeId);\n        this.__centeringResizeId = null;\n      }\n\n      // Call the superclass\n      super.setLayoutParent(parent);\n\n      // Re-add a listener for resize, if required\n      if (parent && this.getCenterOnContainerResize()) {\n        this.__centeringResizeId = parent.addListener(\n          \"resize\",\n          this.center,\n          this\n        );\n      }\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"statusbar\":\n          control = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n          this._add(control);\n          control.add(this.getChildControl(\"statusbar-text\"));\n          break;\n\n        case \"statusbar-text\":\n          control = new qx.ui.basic.Label();\n          control.setValue(this.getStatus());\n          break;\n\n        case \"pane\":\n          control = new qx.ui.container.Composite();\n          this._add(control, { flex: 1 });\n          break;\n\n        case \"captionbar\":\n          // captionbar\n          var layout = new qx.ui.layout.Grid();\n          layout.setRowFlex(0, 1);\n          layout.setColumnFlex(1, 1);\n          control = new qx.ui.container.Composite(layout);\n          this._add(control);\n\n          // captionbar events\n          control.addListener(\"dbltap\", this._onCaptionPointerDblTap, this);\n\n          // register as move handle\n          this._activateMoveHandle(control);\n          break;\n\n        case \"icon\":\n          control = new qx.ui.basic.Image(this.getIcon());\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 0\n          });\n\n          break;\n\n        case \"title\":\n          control = new qx.ui.basic.Label(this.getCaption());\n          control.setWidth(0);\n          control.setAllowGrowX(true);\n\n          var captionBar = this.getChildControl(\"captionbar\");\n          captionBar.add(control, { row: 0, column: 1 });\n          break;\n\n        case \"minimize-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onMinimizeButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 2\n          });\n\n          break;\n\n        case \"restore-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onRestoreButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 3\n          });\n\n          break;\n\n        case \"maximize-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onMaximizeButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 4\n          });\n\n          break;\n\n        case \"close-button\":\n          control = new qx.ui.form.Button();\n          control.setFocusable(false);\n          control.addListener(\"execute\", this._onCloseButtonTap, this);\n\n          this.getChildControl(\"captionbar\").add(control, {\n            row: 0,\n            column: 6\n          });\n\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CAPTIONBAR INTERNALS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Updates the status and the visibility of each element of the captionbar.\n     */\n    _updateCaptionBar() {\n      var btn;\n\n      var icon = this.getIcon();\n      if (icon) {\n        this.getChildControl(\"icon\").setSource(icon);\n        this._showChildControl(\"icon\");\n      } else {\n        this._excludeChildControl(\"icon\");\n      }\n\n      var caption = this.getCaption();\n      if (caption) {\n        this.getChildControl(\"title\").setValue(caption);\n        this._showChildControl(\"title\");\n      } else {\n        this._excludeChildControl(\"title\");\n      }\n\n      if (this.getShowMinimize()) {\n        this._showChildControl(\"minimize-button\");\n\n        btn = this.getChildControl(\"minimize-button\");\n        this.getAllowMinimize() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"minimize-button\");\n      }\n\n      if (this.getShowMaximize()) {\n        if (this.isMaximized()) {\n          this._showChildControl(\"restore-button\");\n          this._excludeChildControl(\"maximize-button\");\n        } else {\n          this._showChildControl(\"maximize-button\");\n          this._excludeChildControl(\"restore-button\");\n        }\n\n        btn = this.getChildControl(\"maximize-button\");\n        this.getAllowMaximize() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"maximize-button\");\n        this._excludeChildControl(\"restore-button\");\n      }\n\n      if (this.getShowClose()) {\n        this._showChildControl(\"close-button\");\n\n        btn = this.getChildControl(\"close-button\");\n        this.getAllowClose() ? btn.resetEnabled() : btn.setEnabled(false);\n      } else {\n        this._excludeChildControl(\"close-button\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Close the current window instance.\n     *\n     * Simply calls the {@link qx.ui.core.Widget#hide} method if the\n     * {@link qx.ui.win.Window#autoDestroy} property is false; otherwise\n     * removes and destroys the window.\n     */\n    close() {\n      if (!this.getAutoDestroy() && !this.isVisible()) {\n        return;\n      }\n\n      if (\n        this.fireNonBubblingEvent(\"beforeClose\", qx.event.type.Event, [\n          false,\n          true\n        ])\n      ) {\n        this.hide();\n        this.fireEvent(\"close\");\n      }\n\n      // If automatically destroying the window upon close was requested, do\n      // so now. (Note that we explicitly re-obtain the autoDestroy property\n      // value, allowing the user's close handler to enable/disable it before\n      // here.)\n      if (this.getAutoDestroy()) {\n        this.dispose();\n      }\n    },\n\n    /**\n     * Open the window.\n     */\n    open() {\n      this.show();\n      this.setActive(true);\n      this.focus();\n    },\n\n    /**\n     * Centers the window to the parent.\n     *\n     * This call works with the size of the parent widget and the size of\n     * the window as calculated in the last layout flush. It is best to call\n     * this method just after rendering the window in the \"resize\" event:\n     * <pre class='javascript'>\n     *   win.addListenerOnce(\"resize\", this.center, this);\n     * </pre>\n     */\n    center() {\n      var parent = this.getLayoutParent();\n      if (parent) {\n        var bounds = parent.getBounds();\n        if (bounds) {\n          var hint = this.getSizeHint();\n\n          var left = Math.round((bounds.width - hint.width) / 2);\n          var top = Math.round((bounds.height - hint.height) / 2);\n\n          if (top < 0) {\n            top = 0;\n          }\n\n          this.moveTo(left, top);\n\n          return;\n        }\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.warn(\"Centering depends on parent bounds!\");\n      }\n    },\n\n    /**\n     * Maximize the window.\n     */\n    maximize() {\n      // If the window is already maximized -> return\n      if (this.isMaximized()) {\n        return;\n      }\n\n      // First check if the parent uses a canvas layout\n      // Otherwise maximize() is not possible\n      var parent = this.getLayoutParent();\n      if (parent != null && parent.supportsMaximize()) {\n        if (\n          this.fireNonBubblingEvent(\"beforeMaximize\", qx.event.type.Event, [\n            false,\n            true\n          ])\n        ) {\n          if (!this.isVisible()) {\n            this.open();\n          }\n\n          // store current dimension and location\n          var props = this.getLayoutProperties();\n          this.__restoredLeft = props.left === undefined ? 0 : props.left;\n          this.__restoredTop = props.top === undefined ? 0 : props.top;\n\n          // Update layout properties\n          this.setLayoutProperties({\n            left: null,\n            top: null,\n            edge: 0\n          });\n\n          // Add state\n          this.addState(\"maximized\");\n\n          // Update captionbar\n          this._updateCaptionBar();\n\n          // Fire user event\n          this.fireEvent(\"maximize\");\n        }\n      }\n    },\n\n    /**\n     * Minimized the window.\n     */\n    minimize() {\n      if (!this.isVisible()) {\n        return;\n      }\n\n      if (\n        this.fireNonBubblingEvent(\"beforeMinimize\", qx.event.type.Event, [\n          false,\n          true\n        ])\n      ) {\n        // store current dimension and location\n        var props = this.getLayoutProperties();\n        this.__restoredLeft = props.left === undefined ? 0 : props.left;\n        this.__restoredTop = props.top === undefined ? 0 : props.top;\n\n        this.removeState(\"maximized\");\n        this.hide();\n        this.fireEvent(\"minimize\");\n      }\n    },\n\n    /**\n     * Restore the window to <code>\"normal\"</code>, if it is\n     * <code>\"maximized\"</code> or <code>\"minimized\"</code>.\n     */\n    restore() {\n      if (this.getMode() === \"normal\") {\n        return;\n      }\n\n      if (\n        this.fireNonBubblingEvent(\"beforeRestore\", qx.event.type.Event, [\n          false,\n          true\n        ])\n      ) {\n        if (!this.isVisible()) {\n          this.open();\n        }\n\n        // Restore old properties\n        var left = this.__restoredLeft;\n        var top = this.__restoredTop;\n\n        this.setLayoutProperties({\n          edge: null,\n          left: left,\n          top: top\n        });\n\n        // Remove maximized state\n        this.removeState(\"maximized\");\n\n        // Update captionbar\n        this._updateCaptionBar();\n\n        // Fire user event\n        this.fireEvent(\"restore\");\n      }\n    },\n\n    /**\n     * Set the window's position relative to its parent\n     *\n     * @param left {Integer} The left position\n     * @param top {Integer} The top position\n     */\n    moveTo(left, top) {\n      if (this.isMaximized()) {\n        return;\n      }\n\n      this.setLayoutProperties({\n        left: left,\n        top: top\n      });\n    },\n\n    /**\n     * Return <code>true</code> if the window is in maximized state,\n     * but note that the window in maximized state could also be invisible, this\n     * is equivalent to minimized. So use the {@link qx.ui.window.Window#getMode}\n     * to get the window mode.\n     *\n     * @return {Boolean} <code>true</code> if the window is maximized,\n     *   <code>false</code> otherwise.\n     */\n    isMaximized() {\n      return this.hasState(\"maximized\");\n    },\n\n    /**\n     * Return the window mode as <code>String</code>:\n     * <code>\"maximized\"</code>, <code>\"normal\"</code> or <code>\"minimized\"</code>.\n     *\n     * @return {String} The window mode as <code>String</code> value.\n     */\n    getMode() {\n      if (!this.isVisible()) {\n        return \"minimized\";\n      } else {\n        if (this.isMaximized()) {\n          return \"maximized\";\n        } else {\n          return \"normal\";\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyActive(value, old) {\n      if (old) {\n        this.removeState(\"active\");\n      } else {\n        this.addState(\"active\");\n      }\n    },\n\n    // property apply\n    _applyModal(value, old) {\n      if (old) {\n        this.removeState(\"modal\");\n      } else {\n        this.addState(\"modal\");\n      }\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-modal\", value);\n    },\n\n    /**\n     * Returns the element, to which the content padding should be applied.\n     *\n     * @return {qx.ui.core.Widget} The content padding target.\n     */\n    _getContentPaddingTarget() {\n      return this.getChildControl(\"pane\");\n    },\n\n    // property apply\n    _applyShowStatusbar(value, old) {\n      // store the state if the status bar is shown\n      var resizeFrame = this._getResizeFrame();\n      if (value) {\n        this.addState(\"showStatusbar\");\n        resizeFrame.addState(\"showStatusbar\");\n      } else {\n        this.removeState(\"showStatusbar\");\n        resizeFrame.removeState(\"showStatusbar\");\n      }\n\n      if (value) {\n        this._showChildControl(\"statusbar\");\n      } else {\n        this._excludeChildControl(\"statusbar\");\n      }\n    },\n\n    // property apply\n    _applyCaptionBarChange(value, old) {\n      this._updateCaptionBar();\n    },\n\n    // property apply\n    _applyStatus(value, old) {\n      var label = this.getChildControl(\"statusbar-text\", true);\n      if (label) {\n        label.setValue(value);\n      }\n    },\n\n    // overridden\n    _applyFocusable(value, old) {\n      // Workaround for bug #7581: Don't set the tabIndex\n      // to prevent native scrolling on focus in IE\n      if (qx.core.Environment.get(\"engine.name\") !== \"mshtml\") {\n        super._applyFocusable(value, old);\n      }\n    },\n\n    _applyCenterOnAppear(value, old) {\n      // Remove prior listener for centering on appear\n      if (this.__centeringAppearId !== null) {\n        this.removeListenerById(this.__centeringAppearId);\n        this.__centeringAppearId = null;\n      }\n\n      // If we are to center on appear, arrange to do so\n      if (value) {\n        this.__centeringAppearId = this.addListener(\n          \"appear\",\n          this.center,\n          this\n        );\n      }\n    },\n\n    _applyCenterOnContainerResize(value, old) {\n      var parent = this.getLayoutParent();\n\n      // Remove prior listener for centering on resize\n      if (this.__centeringResizeId !== null) {\n        parent.removeListenerById(this.__centeringResizeId);\n        this.__centeringResizeId = null;\n      }\n\n      // If we are to center on resize, arrange to do so\n      if (value) {\n        if (parent) {\n          this.__centeringResizeId = parent.addListener(\n            \"resize\",\n            this.center,\n            this\n          );\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      BASIC EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Stops every event\n     *\n     * @param e {qx.event.type.Event} any event\n     */\n    _onWindowEventStop(e) {\n      e.stopPropagation();\n    },\n\n    /**\n     * Focuses the window instance.\n     *\n     * @param e {qx.event.type.Pointer} pointer down event\n     */\n    _onWindowPointerDown(e) {\n      this.setActive(true);\n    },\n\n    /**\n     * Listens to the \"focusout\" event to deactivate the window (if the\n     * currently focused widget is not a child of the window)\n     *\n     * @param e {qx.event.type.Focus} focus event\n     */\n    _onWindowFocusOut(e) {\n      // only needed for non-modal windows\n      if (this.getModal()) {\n        return;\n      }\n\n      // get the current focused widget and check if it is a child\n      var current = e.getRelatedTarget();\n      if (current != null && !qx.ui.core.Widget.contains(this, current)) {\n        this.setActive(false);\n      }\n    },\n\n    /**\n     * Maximizes the window or restores it if it is already\n     * maximized.\n     *\n     * @param e {qx.event.type.Pointer} double tap event\n     */\n    _onCaptionPointerDblTap(e) {\n      if (\n        this.getAllowMaximize() &&\n        (e.getTarget() === this.getChildControl(\"captionbar\") ||\n          e.getTarget() === this.getChildControl(\"title\"))\n      ) {\n        this.isMaximized() ? this.restore() : this.maximize();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS FOR CAPTIONBAR BUTTONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Minimizes the window, removes all states from the minimize button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer tap event\n     */\n    _onMinimizeButtonTap(e) {\n      this.minimize();\n      this.getChildControl(\"minimize-button\").reset();\n    },\n\n    /**\n     * Restores the window, removes all states from the restore button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onRestoreButtonTap(e) {\n      this.restore();\n      this.getChildControl(\"restore-button\").reset();\n    },\n\n    /**\n     * Maximizes the window, removes all states from the maximize button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onMaximizeButtonTap(e) {\n      this.maximize();\n      this.getChildControl(\"maximize-button\").reset();\n    },\n\n    /**\n     * Closes the window, removes all states from the close button and\n     * stops the further propagation of the event (calling {@link qx.event.type.Event#stopPropagation}).\n     *\n     * @param e {qx.event.type.Pointer} pointer pointer event\n     */\n    _onCloseButtonTap(e) {\n      this.close();\n      this.getChildControl(\"close-button\").reset();\n    }\n  },\n\n  destruct() {\n    var id;\n    var parent;\n\n    // Remove ourselves from the focus handler\n    qx.ui.core.FocusHandler.getInstance().removeRoot(this);\n\n    // If we haven't been removed from our parent, clean it up too.\n    parent = this.getLayoutParent();\n    if (parent) {\n      // Remove the listener for resize, if there is one\n      id = this.__centeringResizeId;\n      id && parent.removeListenerById(id);\n\n      // Remove ourself from our parent\n      parent.remove(this);\n    }\n  }\n});\n"
  ]
}