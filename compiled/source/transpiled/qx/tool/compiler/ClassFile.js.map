{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/tool/compiler/ClassFile.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "fs",
    "require",
    "babelCore",
    "types",
    "babylon",
    "async",
    "pathModule",
    "log",
    "tool",
    "utils",
    "LogManager",
    "createLog",
    "collapseMemberExpression",
    "node",
    "done",
    "doCollapse",
    "type",
    "name",
    "result",
    "elements",
    "forEach",
    "element",
    "push",
    "isIdentifier",
    "object",
    "str",
    "property",
    "computed",
    "isCollapsibleLiteral",
    "nodeType",
    "expandMemberExpression",
    "segs",
    "split",
    "expr",
    "memberExpression",
    "identifier",
    "i",
    "length",
    "literalValueToExpression",
    "value",
    "undefined",
    "nullLiteral",
    "booleanLiteral",
    "numericLiteral",
    "stringLiteral",
    "lang",
    "Type",
    "isRegExp",
    "regExpLiteral",
    "toString",
    "isDate",
    "isArray",
    "arr",
    "item",
    "arrayExpression",
    "error",
    "properties",
    "key",
    "prop",
    "objectProperty",
    "objectExpression",
    "formatValueAsCode",
    "JSON",
    "stringify",
    "Date",
    "getTime",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "analyser",
    "className",
    "library",
    "__analyser",
    "__className",
    "__metaStack",
    "__metaDefinitions",
    "__library",
    "__sourceFilename",
    "compiler",
    "ClassFile",
    "getSourcePath",
    "__requiredClasses",
    "__environmentChecks",
    "provided",
    "required",
    "__requiredAssets",
    "__translations",
    "__markers",
    "__haveMarkersFor",
    "__scope",
    "parent",
    "vars",
    "unresolved",
    "__externals",
    "__taskQueueDrains",
    "__taskQueue",
    "queue",
    "task",
    "cb",
    "drain",
    "_onTaskQueueDrain",
    "err",
    "Console",
    "stack",
    "getIgnores",
    "s",
    "addIgnore",
    "__globalSymbols",
    "__privates",
    "__blockedPrivates",
    "__privateMangling",
    "getManglePrivates",
    "CF",
    "addSymbols",
    "getGlobalSymbols",
    "QX_GLOBALS",
    "COMMON_GLOBALS",
    "BROWSER_GLOBALS",
    "members",
    "__numClassesDefined",
    "__translateMessageIds",
    "__inDefer",
    "__inConstruct",
    "__classMeta",
    "__fatalCompileError",
    "__dbClassInfo",
    "__hasDefer",
    "__definingType",
    "__taskQueueDrain",
    "cbs",
    "_waitForTaskQueueDrain",
    "_queueTask",
    "getOutputPath",
    "load",
    "callback",
    "t",
    "readFile",
    "encoding",
    "src",
    "babelConfig",
    "getBabelConfig",
    "options",
    "clone",
    "modules",
    "extraPreset",
    "plugins",
    "resolve",
    "myPlugins",
    "_babelClassPlugins",
    "config",
    "babelrc",
    "sourceFileName",
    "filename",
    "sourceMaps",
    "presets",
    "CodeElimination",
    "Compiler",
    "JSX_OPTIONS",
    "generatorOpts",
    "compact",
    "parserOpts",
    "allowSuperOutsideMethod",
    "sourceType",
    "passPerPreset",
    "blacklist",
    "transform",
    "ex",
    "addMarker",
    "loc",
    "message",
    "_compileDbClassInfo",
    "keys",
    "join",
    "pos",
    "lastIndexOf",
    "substring",
    "outputPath",
    "Utils",
    "mkParentPath",
    "mappingUrl",
    "Array",
    "contains",
    "getApplicationTypes",
    "writeFile",
    "code",
    "map",
    "writeDbInfo",
    "dbClassInfo",
    "dependsOn",
    "assets",
    "translations",
    "markers",
    "fatalCompileError",
    "deps",
    "getRequiredClasses",
    "__usesJsx",
    "JSX",
    "classname",
    "pragma",
    "dep",
    "ignore",
    "fixAnnos",
    "section",
    "meta",
    "annotations",
    "getOuterClassMeta",
    "events",
    "statics",
    "pm",
    "apply",
    "fm",
    "applyFor",
    "superClass",
    "include",
    "mixins",
    "slice",
    "implement",
    "interfaces",
    "environment",
    "hasDefer",
    "info",
    "getSymbolType",
    "_requireClass",
    "defer",
    "symbolType",
    "deleteReference",
    "j",
    "locations",
    "start",
    "getAssets",
    "aliases",
    "aliasMap",
    "themeMeta",
    "themeMetaMap",
    "externals",
    "dest",
    "filter",
    "getKeyName",
    "keyName",
    "checkNodeJsDocDirectives",
    "jsdoc",
    "getJsDoc",
    "leadingComments",
    "checkJsDocDirectives",
    "elem",
    "body",
    "where",
    "location",
    "addExternal",
    "_requireAsset",
    "enterFunction",
    "path",
    "idNode",
    "id",
    "isClassMember",
    "_topLevel",
    "parentPath",
    "addDeclaration",
    "pushScope",
    "addDecl",
    "param",
    "left",
    "argument",
    "params",
    "exitFunction",
    "popScope",
    "FUNCTION_DECL_OR_EXPR",
    "enter",
    "exit",
    "comment",
    "tmp",
    "Parser",
    "parseComment",
    "append",
    "makeMeta",
    "sectionName",
    "functionName",
    "startsWith",
    "access",
    "es6ClassDeclarations",
    "needsQxCoreEnvironment",
    "COLLECT_CLASS_NAMES_VISITOR",
    "MemberExpression",
    "self",
    "collectedClasses",
    "CODE_ELIMINATION_VISITOR",
    "ClassBody",
    "CallExpression",
    "callee",
    "isLiteral",
    "arguments",
    "arg",
    "env",
    "getEnvironment",
    "envValue",
    "skip",
    "replaceWithSourceString",
    "subPath",
    "get",
    "option",
    "find",
    "replaceWith",
    "IfStatement",
    "test",
    "consequent",
    "alternate",
    "remove",
    "LogicalExpression",
    "right",
    "operator",
    "BinaryExpression",
    "indexOf",
    "Boolean",
    "UnaryExpression",
    "collectJson",
    "isProperties",
    "jsonPath",
    "nextJsonPath",
    "encodePrivate",
    "Function",
    "warn",
    "line",
    "column",
    "ALLOWED_KEYS",
    "normal",
    "destruct",
    "mixin",
    "theme",
    "title",
    "colors",
    "borders",
    "decorations",
    "fonts",
    "icons",
    "widgets",
    "appearances",
    "patch",
    "boot",
    "isValidExtendClause",
    "every",
    "FUNCTION_NAMES",
    "checkValidTopLevel",
    "allowedKeys",
    "isStatic",
    "handleTopLevelMethods",
    "functionNode",
    "traverse",
    "VISITOR",
    "CLASS_DEF_VISITOR",
    "ObjectMethod",
    "classDefPath",
    "ObjectProperty",
    "val",
    "concat",
    "isAbstract",
    "isSingleton",
    "pdNode",
    "propName",
    "data",
    "propertyType",
    "nullable",
    "allowNull",
    "check",
    "possibleValues",
    "init",
    "defaultValue",
    "eventNode",
    "eventName",
    "aliasNode",
    "aliasName",
    "aliasValue",
    "TYPE",
    "NewExpression",
    "usage",
    "isAddCreatedAt",
    "fn",
    "callExpression",
    "replace",
    "ExpressionStatement",
    "EmptyStatement",
    "JSXElement",
    "Program",
    "copyInfo",
    "hasLoadDeps",
    "assign",
    "variableDeclaration",
    "variableDeclarator",
    "inject",
    "parse",
    "program",
    "block",
    "blockStatement",
    "rootFn",
    "expressionStatement",
    "functionExpression",
    "splice",
    "Literal",
    "Identifier",
    "CHECK_FOR_UNDEFINED",
    "FunctionExpression",
    "FunctionStatement",
    "ArrowFunctionExpression",
    "VariableDeclarator",
    "FunctionDeclaration",
    "CatchClause",
    "AssignmentPattern",
    "RestElement",
    "ArrayPattern",
    "SpreadElement",
    "ClassDeclaration",
    "ClassMethod",
    "LabeledStatement",
    "BreakStatement",
    "DO_NOT_WARN_TYPES",
    "AssignmentExpression",
    "BooleanExpression",
    "WhileStatement",
    "ReturnStatement",
    "ConditionalExpression",
    "ForInStatement",
    "ArrayExpression",
    "SwitchStatement",
    "SwitchCase",
    "ThrowStatement",
    "UpdateExpression",
    "SequenceExpression",
    "ContinueStatement",
    "ForStatement",
    "TemplateLiteral",
    "AwaitExpression",
    "DoWhileStatement",
    "ForOfStatement",
    "TaggedTemplateExpression",
    "ClassExpression",
    "OptionalCallExpression",
    "JSXExpressionContainer",
    "root",
    "parentType",
    "addReference",
    "getStringArg",
    "index",
    "addTranslation",
    "entry",
    "lineNo",
    "cur",
    "msgid",
    "isMemberExpression",
    "thisAlias",
    "originalAlias",
    "alias",
    "aliasIsThis",
    "scope",
    "match",
    "classDef",
    "__pushMeta",
    "typeProp",
    "__popMeta",
    "prototype",
    "hasOwnProperty",
    "call",
    "ENVIRONMENT_CONSTANTS",
    "symbol",
    "addEnvCheck",
    "thisArgument",
    "thisExpression",
    "unshift",
    "callExpr",
    "methodName",
    "exprSplice",
    "exprUnshift",
    "arg0",
    "arg1",
    "msgid_plural",
    "arg2",
    "hasDeclaration",
    "container",
    "RESERVED_WORDS",
    "Property",
    "functionId",
    "VariableDeclaration",
    "declarations",
    "decl",
    "visitor",
    "packageName",
    "Error",
    "pop",
    "old",
    "isLoadScope",
    "valueName",
    "re",
    "RegExp",
    "isIgnored",
    "DO_NOT_ENCODE",
    "__proto__",
    "__iterator__",
    "__dirname",
    "__filename",
    "coded",
    "db",
    "getDatabase",
    "manglePrefixes",
    "nextPrefix",
    "classPrefixes",
    "prefixes",
    "prefix",
    "stub",
    "trim",
    "endsWith",
    "removeIgnore",
    "requiredOpts",
    "msgId",
    "fragment",
    "marker",
    "end",
    "args",
    "fromArguments",
    "opts",
    "requireOpts",
    "DEFER_SAFE_SYMBOLS",
    "some",
    "__findProperty",
    "props",
    "getUnresolvedSymbols",
    "getClassName",
    "word",
    "getRootDir",
    "sep",
    "getSourceFileExtension",
    "getOutputDir",
    "getNamespace",
    "m",
    "pragmaFrag",
    "NODE_GLOBALS",
    "RHINO_GLOBALS"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\n/* eslint-disable padded-blocks */\n\nvar fs = require(\"fs\");\nvar babelCore = require(\"@babel/core\");\n\nvar types = require(\"@babel/types\");\nvar babylon = require(\"@babel/parser\");\nvar async = require(\"async\");\nvar pathModule = require(\"upath\");\n\nvar log = qx.tool.utils.LogManager.createLog(\"analyser\");\n\n/**\n * Helper method that collapses the MemberExpression into a string\n * @param node\n * @returns {string}\n */\nfunction collapseMemberExpression(node) {\n  var done = false;\n  function doCollapse(node) {\n    if (node.type == \"ThisExpression\") {\n      return \"this\";\n    }\n    if (node.type == \"Super\") {\n      return \"super\";\n    }\n    if (node.type == \"Identifier\") {\n      return node.name;\n    }\n    if (node.type == \"ArrayExpression\") {\n      var result = [];\n      node.elements.forEach(element => result.push(doCollapse(element)));\n      return result;\n    }\n    if (node.type != \"MemberExpression\") {\n      return \"(\" + node.type + \")\";\n    }\n    if (types.isIdentifier(node.object)) {\n      let str = node.object.name;\n      if (node.property.name) {\n        str += \".\" + node.property.name;\n      } else {\n        done = true;\n      }\n      return str;\n    }\n    var str;\n    if (node.object.type == \"ArrayExpression\") {\n      str = \"[]\";\n    } else {\n      str = doCollapse(node.object);\n    }\n    if (done) {\n      return str;\n    }\n    // `computed` is set if the expression is a subscript, eg `abc[def]`\n    if (node.computed) {\n      done = true;\n    } else if (node.property.name) {\n      str += \".\" + node.property.name;\n    } else {\n      done = true;\n    }\n    return str;\n  }\n\n  return doCollapse(node);\n}\n\nfunction isCollapsibleLiteral(node) {\n  let nodeType = node.type;\n  return (\n    nodeType === \"Literal\" ||\n    nodeType === \"StringLiteral\" ||\n    nodeType === \"NumericLiteral\" ||\n    nodeType === \"BooleanLiteral\" ||\n    nodeType === \"BigIntLiteral\"\n  );\n}\n\n/**\n * Helper method that expands a dotted string into MemberExpression\n * @param str\n * @returns {*}\n */\nfunction expandMemberExpression(str) {\n  var segs = str.split(\".\");\n  var expr = types.memberExpression(\n    types.identifier(segs[0]),\n    types.identifier(segs[1])\n  );\n\n  for (var i = 2; i < segs.length; i++) {\n    expr = types.memberExpression(expr, types.identifier(segs[i]));\n  }\n  return expr;\n}\n\nfunction literalValueToExpression(value) {\n  if (value === null || value === undefined) {\n    return types.nullLiteral();\n  }\n  if (typeof value == \"boolean\") {\n    return types.booleanLiteral(value);\n  }\n  if (typeof value == \"number\") {\n    return types.numericLiteral(value);\n  }\n  if (typeof value == \"string\") {\n    return types.stringLiteral(value);\n  }\n  if (qx.lang.Type.isRegExp(value)) {\n    return types.regExpLiteral(value.toString());\n  }\n  if (qx.lang.Type.isDate(value)) {\n    return types.stringLiteral(value.toString());\n  }\n\n  if (qx.lang.Type.isArray(value)) {\n    var arr = [];\n    value.forEach(function (item) {\n      arr.push(literalValueToExpression(item));\n    });\n    return types.arrayExpression(arr);\n  }\n\n  if (typeof value != \"object\") {\n    log.error(\"Cannot serialise value \" + value + \" into AST\");\n    return types.nullLiteral();\n  }\n\n  var properties = [];\n  for (var key in value) {\n    var expr = literalValueToExpression(value[key]);\n    var prop = types.objectProperty(types.stringLiteral(key), expr);\n    properties.push(prop);\n  }\n  return types.objectExpression(properties);\n}\n\nfunction formatValueAsCode(value) {\n  if (value === undefined) {\n    return \"undefined\";\n  }\n  if (value === null) {\n    return \"null\";\n  }\n  if (typeof value === \"string\") {\n    return JSON.stringify(value);\n  }\n  if (typeof value === \"object\" && value instanceof Date) {\n    return \"new Date(\" + value.getTime() + \")\";\n  }\n  return value.toString();\n}\n\n/**\n * A class file is parsed and anaysed into an instance of ClassFile; it is\n * connected to the Analyser that found the class so that dependencies can be\n * identified.\n */\nqx.Class.define(\"qx.tool.compiler.ClassFile\", {\n  extend: qx.core.Object,\n\n  /**\n   * Constructor\n   *\n   * @param analyser {Analyser} the Analyser that found the file\n   * @param className {String} the full name of the class\n   * @param library {Library} the Library the class belongs to (note that the class name is\n   *  not always enough to identify the library, eg private source files such as qxWeb.js)\n   */\n  construct(analyser, className, library) {\n    super();\n\n    this.__analyser = analyser;\n    this.__className = className;\n    this.__metaStack = [];\n    this.__metaDefinitions = {};\n    this.__library = library;\n    this.__sourceFilename = qx.tool.compiler.ClassFile.getSourcePath(\n      library,\n      className\n    );\n\n    this.__requiredClasses = {};\n    this.__environmentChecks = {\n      provided: {},\n      required: {}\n    };\n\n    this.__requiredAssets = [];\n    this.__translations = [];\n    this.__markers = [];\n    this.__haveMarkersFor = {};\n\n    this.__scope = {\n      parent: null,\n      vars: {},\n      unresolved: {}\n    };\n\n    this.__externals = [];\n\n    this.__taskQueueDrains = [];\n    this.__taskQueue = async.queue(function (task, cb) {\n      task(cb);\n    });\n    this.__taskQueue.drain = this._onTaskQueueDrain;\n    this.__taskQueue.error = err => {\n      qx.tool.compiler.Console.error(err.stack || err);\n    };\n\n    analyser.getIgnores().forEach(s => this.addIgnore(s));\n    this.__globalSymbols = {};\n    this.__privates = {};\n    this.__blockedPrivates = {};\n    this.__privateMangling = analyser.getManglePrivates();\n\n    const CF = qx.tool.compiler.ClassFile;\n    const addSymbols = arr =>\n      arr.forEach(s => (this.__globalSymbols[s] = true));\n    if (analyser.getGlobalSymbols().length) {\n      addSymbols(analyser.getGlobalSymbols());\n    } else {\n      addSymbols(CF.QX_GLOBALS);\n      addSymbols(CF.COMMON_GLOBALS);\n      addSymbols(CF.BROWSER_GLOBALS);\n    }\n  },\n\n  members: {\n    __analyser: null,\n    __className: null,\n    __numClassesDefined: 0,\n    __library: null,\n    __requiredClasses: null,\n    __environmentChecks: null,\n    __requiredAssets: null,\n    __translateMessageIds: null,\n    __scope: null,\n    __inDefer: false,\n    __inConstruct: false,\n    __taskQueue: null,\n    __taskQueueDrains: null,\n    __markers: null,\n    __haveMarkersFor: null,\n    __classMeta: null,\n    __metaStack: null,\n    __metaDefinitions: null,\n    __fatalCompileError: false,\n    __translations: null,\n    __dbClassInfo: null,\n    __hasDefer: null,\n    __definingType: null,\n    __sourceFilename: null,\n    __taskQueueDrain: null,\n    __globalSymbols: null,\n    __privates: null,\n    __blockedPrivates: null,\n    __externals: null,\n\n    _onTaskQueueDrain() {\n      var cbs = this.__taskQueueDrain;\n      this.__taskQueueDrain = [];\n      cbs.forEach(function (cb) {\n        cb();\n      });\n    },\n\n    _waitForTaskQueueDrain(cb) {\n      if (this.__taskQueue.length() == 0) {\n        cb();\n      } else {\n        this.__taskQueueDrains.push(cb);\n      }\n    },\n\n    _queueTask(cb) {\n      this.__taskQueue.push(cb);\n    },\n\n    /**\n     * Returns the absolute path to the class file\n     * @returns {string}\n     */\n    getSourcePath() {\n      return this.__sourceFilename;\n    },\n\n    /**\n     * Returns the path to the rewritten class file\n     * @returns {string}\n     */\n    getOutputPath() {\n      return qx.tool.compiler.ClassFile.getOutputPath(\n        this.__analyser,\n        this.__className\n      );\n    },\n\n    /**\n     * Loads the source, transpiles and analyses the code, storing the result in outputPath\n     *\n     * @param callback\n     *          {Function} callback for when the load is completed\n     */\n    load(callback) {\n      var t = this;\n      var className = this.__className;\n      t.__fatalCompileError = false;\n      t.__numClassesDefined = 0;\n\n      fs.readFile(\n        this.getSourcePath(),\n        { encoding: \"utf-8\" },\n        function (err, src) {\n          if (err) {\n            callback(err);\n            return;\n          }\n          var result;\n          try {\n            let babelConfig = t.__analyser.getBabelConfig() || {};\n            let options = qx.lang.Object.clone(babelConfig.options || {}, true);\n            options.modules = false;\n            let extraPreset = [\n              {\n                plugins: []\n              }\n            ];\n\n            if (babelConfig.plugins) {\n              for (let key in babelConfig.plugins) {\n                if (babelConfig.plugins[key] === true) {\n                  extraPreset[0].plugins.push(require.resolve(key));\n                } else if (babelConfig.plugins[key]) {\n                  extraPreset[0].plugins.push([\n                    require.resolve(key),\n                    babelConfig.plugins[key]\n                  ]);\n                }\n              }\n            }\n            let myPlugins = t._babelClassPlugins();\n            var config = {\n              babelrc: false,\n              sourceFileName: t.getSourcePath(),\n              filename: t.getSourcePath(),\n              sourceMaps: true,\n              presets: [\n                [\n                  {\n                    plugins: [myPlugins.CodeElimination]\n                  }\n                ],\n\n                [\n                  {\n                    plugins: [myPlugins.Compiler]\n                  }\n                ],\n\n                [require.resolve(\"@babel/preset-env\"), options],\n                [require.resolve(\"@babel/preset-typescript\")],\n                [\n                  require.resolve(\"@babel/preset-react\"),\n                  qx.tool.compiler.ClassFile.JSX_OPTIONS\n                ]\n              ],\n              generatorOpts: {\n                compact: false\n              },\n\n              parserOpts: {\n                allowSuperOutsideMethod: true,\n                sourceType: \"script\"\n              },\n\n              passPerPreset: true\n            };\n\n            if (extraPreset[0].plugins.length) {\n              config.presets.push(extraPreset);\n            }\n            if (this.__privateMangling == \"unreadable\") {\n              config.blacklist = [\"spec.functionName\"];\n            }\n            result = babelCore.transform(src, config);\n          } catch (ex) {\n            qx.tool.compiler.Console.log(ex);\n            t.addMarker(\"compiler.syntaxError\", ex.loc, ex.message);\n            t.__fatalCompileError = true;\n            t._compileDbClassInfo();\n            callback();\n            return;\n          }\n\n          if (!t.__numClassesDefined) {\n            t.addMarker(\"compiler.missingClassDef\");\n            t.__fatalCompileError = true;\n            t._compileDbClassInfo();\n            callback();\n            return;\n          }\n\n          if (!t.__metaDefinitions[className]) {\n            t.addMarker(\n              \"compiler.wrongClassName\",\n              null,\n              className,\n              Object.keys(t.__metaDefinitions).join(\", \")\n            );\n\n            t._compileDbClassInfo();\n          }\n\n          var pos = className.lastIndexOf(\".\");\n          var name = pos > -1 ? className.substring(pos + 1) : className;\n          var outputPath = t.getOutputPath();\n          qx.tool.utils.Utils.mkParentPath(outputPath, function (err) {\n            if (err) {\n              callback(err);\n              return;\n            }\n            let mappingUrl = name + \".js.map\";\n            if (\n              qx.lang.Array.contains(\n                t.__analyser.getApplicationTypes(),\n                \"browser\"\n              )\n            ) {\n              mappingUrl += \"?dt=\" + new Date().getTime();\n            }\n            fs.writeFile(\n              outputPath,\n              result.code + \"\\n\\n//# sourceMappingURL=\" + mappingUrl,\n              { encoding: \"utf-8\" },\n              function (err) {\n                if (err) {\n                  callback(err);\n                  return;\n                }\n                fs.writeFile(\n                  outputPath + \".map\",\n                  JSON.stringify(result.map, null, 2),\n                  { encoding: \"utf-8\" },\n                  function (err) {\n                    if (err) {\n                      callback(err);\n                      return;\n                    }\n                    t._waitForTaskQueueDrain(function () {\n                      callback();\n                    });\n                  }\n                );\n              }\n            );\n          });\n        }\n      );\n    },\n\n    /**\n     * Writes the data for the database; updates the record, which may have been previously\n     * used (so needs to be zero'd out)\n     * @param dbClassInfo {Map}\n     */\n    writeDbInfo(dbClassInfo) {\n      delete dbClassInfo.unresolved;\n      delete dbClassInfo.dependsOn;\n      delete dbClassInfo.assets;\n      delete dbClassInfo.translations;\n      delete dbClassInfo.markers;\n      delete dbClassInfo.fatalCompileError;\n      for (var key in this.__dbClassInfo) {\n        dbClassInfo[key] = this.__dbClassInfo[key];\n      }\n    },\n\n    /**\n     * Compiles the DbInfo POJO to be stored in the database about this class\n     * */\n    _compileDbClassInfo() {\n      var t = this;\n      var dbClassInfo = (this.__dbClassInfo = {});\n\n      // Collect the dependencies on other classes\n      var deps = this.getRequiredClasses();\n      if (t.__usesJsx) {\n        let JSX = qx.tool.compiler.ClassFile.JSX_OPTIONS;\n        let classname = JSX.pragma;\n        let pos = classname.lastIndexOf(\".\");\n        classname = classname.substring(0, pos);\n        if (!deps[classname]) {\n          deps[classname] = {};\n        }\n      }\n      for (var name in deps) {\n        var dep = deps[name];\n        if (!dep.ignore) {\n          if (!dbClassInfo.dependsOn) {\n            dbClassInfo.dependsOn = {};\n          }\n          dbClassInfo.dependsOn[name] = dep;\n        }\n      }\n\n      function fixAnnos(section) {\n        if (!section) {\n          return;\n        }\n        Object.keys(section).forEach(name => {\n          if (name[0] == \"@\") {\n            var value = section[name];\n            delete section[name];\n            name = name.substring(1);\n            var meta = section[name];\n            if (meta) {\n              if (!meta.annotations) {\n                meta.annotations = [];\n              }\n              meta.annotations.push(value);\n            }\n          }\n        });\n      }\n\n      var meta = this.getOuterClassMeta();\n      if (meta) {\n        fixAnnos(meta.events);\n        fixAnnos(meta.members);\n        fixAnnos(meta.statics);\n\n        if (meta.properties && meta.members) {\n          Object.keys(meta.properties).forEach(name => {\n            let pm = meta.properties[name];\n            if (pm.apply) {\n              let fm = meta.members[pm.apply];\n              if (fm) {\n                if (!fm.applyFor) {\n                  fm.applyFor = [];\n                }\n                fm.applyFor.push(name);\n              }\n            }\n          });\n        }\n\n        // Class heirararchy\n        dbClassInfo.extends = meta.superClass;\n        dbClassInfo.include = meta.mixins.slice(0);\n        dbClassInfo.implement = meta.interfaces.slice(0);\n      }\n\n      // Environment Checks\n      if (\n        Object.keys(this.__environmentChecks.provided).length ||\n        Object.keys(this.__environmentChecks.required).length\n      ) {\n        dbClassInfo.environment = { provided: [], required: {} };\n        for (let key in this.__environmentChecks.provided) {\n          dbClassInfo.environment.provided.push(key);\n        }\n        for (let key in this.__environmentChecks.required) {\n          dbClassInfo.environment.required[key] =\n            this.__environmentChecks.required[key];\n        }\n      }\n\n      // Save whether the class has a defer method\n      dbClassInfo.hasDefer = this.hasDefer();\n\n      // Unresolved symbols\n      dbClassInfo.unresolved = [];\n      for (let name in this.__scope.unresolved) {\n        let item = this.__scope.unresolved[name];\n        // item is undefined if it has already been removed from the list\n        if (item === undefined) {\n          continue;\n        }\n        // One of multiple classes defined in this file\n        if (this.__metaDefinitions[name]) {\n          continue;\n        }\n        var info = t.__analyser.getSymbolType(name);\n        if (info && info.className) {\n          t._requireClass(info.className, {\n            load: item.load,\n            defer: item.defer\n          });\n        } else if (info && info.symbolType == \"package\") {\n          t.deleteReference(name);\n        } else {\n          dbClassInfo.unresolved.push(item);\n          for (var j = 0; j < item.locations.length; j++) {\n            t.addMarker(\n              \"symbol.unresolved#\" + name,\n              item.locations[j].start,\n              name\n            );\n          }\n        }\n      }\n      if (!dbClassInfo.unresolved.length) {\n        delete dbClassInfo.unresolved;\n      }\n\n      // Assets\n      var assets = this.getAssets();\n      if (assets.length) {\n        dbClassInfo.assets = assets;\n      }\n      if (meta) {\n        if (meta.aliases) {\n          dbClassInfo.aliases = {};\n          for (let name in meta.aliases.aliasMap) {\n            dbClassInfo.aliases[name] = meta.aliases.aliasMap[name];\n          }\n        }\n        if (meta.themeMeta) {\n          dbClassInfo.themeMeta = {};\n          for (let name in meta.themeMeta.themeMetaMap) {\n            dbClassInfo.themeMeta[name] = meta.themeMeta.themeMetaMap[name];\n          }\n        }\n      }\n      if (this.__externals.length) {\n        dbClassInfo.externals = this.__externals;\n      }\n\n      // Translation\n      if (this.__translations.length) {\n        dbClassInfo.translations = this.__translations.slice(0);\n      }\n\n      // Markers\n      if (this.__markers.length) {\n        dbClassInfo.markers = qx.lang.Array.clone(this.__markers);\n      }\n\n      // Errors\n      if (this.__fatalCompileError) {\n        dbClassInfo.fatalCompileError = true;\n      }\n\n      return dbClassInfo;\n    },\n\n    /**\n     * Returns the loaded meta data\n     */\n    getOuterClassMeta() {\n      let src = this.__metaDefinitions[this.__className] || null;\n      if (!src) {\n        return src;\n      }\n      let dest = {};\n      Object.keys(src)\n        .filter(key => key[0] != \"_\")\n        .forEach(key => (dest[key] = src[key]));\n      return dest;\n    },\n\n    /**\n     * Babel plugin\n     */\n    _babelClassPlugins() {\n      var t = this;\n\n      function getKeyName(key) {\n        var keyName = key.type == \"StringLiteral\" ? key.value : key.name;\n        return keyName;\n      }\n\n      function checkNodeJsDocDirectives(node) {\n        var jsdoc = getJsDoc(node.leadingComments);\n        if (jsdoc) {\n          checkJsDocDirectives(jsdoc, node.loc);\n        }\n        return jsdoc;\n      }\n\n      function checkJsDocDirectives(jsdoc, loc) {\n        if (!jsdoc) {\n          return jsdoc;\n        }\n        if (jsdoc[\"@use\"]) {\n          jsdoc[\"@use\"].forEach(function (elem) {\n            t._requireClass(elem.body, {\n              where: \"use\",\n              load: false,\n              location: loc\n            });\n          });\n        }\n        if (jsdoc[\"@require\"]) {\n          jsdoc[\"@require\"].forEach(function (elem) {\n            t._requireClass(elem.body, {\n              where: \"require\",\n              load: false,\n              location: loc\n            });\n          });\n        }\n        if (jsdoc[\"@optional\"]) {\n          jsdoc[\"@optional\"].forEach(function (elem) {\n            t.addIgnore(elem.body);\n          });\n        }\n        if (jsdoc[\"@ignore\"]) {\n          jsdoc[\"@ignore\"].forEach(function (elem) {\n            t.addIgnore(elem.body);\n          });\n        }\n        if (jsdoc[\"@external\"]) {\n          jsdoc[\"@external\"].forEach(function (elem) {\n            t.addExternal(elem.body);\n            t._requireAsset(elem.body);\n          });\n        }\n        if (jsdoc[\"@asset\"]) {\n          jsdoc[\"@asset\"].forEach(function (elem) {\n            t._requireAsset(elem.body);\n          });\n        }\n        return jsdoc;\n      }\n\n      function enterFunction(path, node, idNode) {\n        node = node || path.node;\n        idNode = idNode || node.id || null;\n\n        let isClassMember =\n          t.__classMeta &&\n          t.__classMeta._topLevel &&\n          t.__classMeta._topLevel.keyName == \"members\" &&\n          path.parentPath.parentPath.parentPath == t.__classMeta._topLevel.path;\n        if (idNode) {\n          t.addDeclaration(idNode.name);\n        }\n        t.pushScope(idNode ? idNode.name : null, node, isClassMember);\n\n        function addDecl(param) {\n          if (param.type == \"AssignmentPattern\") {\n            addDecl(param.left);\n          } else if (param.type == \"RestElement\") {\n            t.addDeclaration(param.argument.name);\n          } else if (param.type == \"Identifier\") {\n            t.addDeclaration(param.name);\n          } else if (param.type == \"ArrayPattern\") {\n            param.elements.forEach(elem => addDecl(elem));\n          } else if (param.type == \"ObjectPattern\") {\n            param.properties.forEach(prop => addDecl(prop.value));\n          } else {\n            t.addMarker(\"testForFunctionParameterType\", node.loc, param.type);\n          }\n        }\n        node.params.forEach(param => {\n          addDecl(param);\n        });\n        checkNodeJsDocDirectives(node);\n      }\n\n      function exitFunction(path, node) {\n        node = node || path.node;\n        t.popScope(node);\n      }\n\n      var FUNCTION_DECL_OR_EXPR = {\n        enter: path => enterFunction(path),\n        exit: path => exitFunction(path)\n      };\n\n      function getJsDoc(comment) {\n        if (!comment) {\n          return null;\n        }\n        if (!qx.lang.Type.isArray(comment)) {\n          comment = [comment];\n        }\n        var result = {};\n        comment.forEach(comment => {\n          var tmp = qx.tool.compiler.jsdoc.Parser.parseComment(comment.value);\n          for (var key in tmp) {\n            var value = tmp[key];\n            if (!result[key]) {\n              result[key] = value;\n            } else {\n              qx.lang.Array.append(result[key], value);\n            }\n          }\n        });\n\n        return result;\n      }\n\n      function makeMeta(sectionName, functionName, node) {\n        var meta;\n        if (functionName) {\n          var section = t.__classMeta[sectionName];\n          if (section === undefined) {\n            section = t.__classMeta[sectionName] = {};\n          }\n          meta = section[functionName];\n          if (meta === undefined) {\n            meta = section[functionName] = {};\n          }\n        } else {\n          meta = t.__classMeta[sectionName];\n          if (meta === undefined) {\n            meta = t.__classMeta[sectionName] = {};\n          }\n        }\n        meta.location = node.loc;\n\n        if (node.leadingComments) {\n          let jsdoc = checkNodeJsDocDirectives(node);\n          if (jsdoc) {\n            meta.jsdoc = jsdoc;\n          }\n        }\n\n        if (sectionName === \"members\" || sectionName === \"statics\") {\n          if (\n            node.type == \"ObjectMethod\" ||\n            node.value.type === \"FunctionExpression\"\n          ) {\n            meta.type = \"function\";\n          } else {\n            meta.type = \"variable\";\n          }\n          if (functionName.startsWith(\"__\")) {\n            meta.access = \"private\";\n          } else if (functionName.startsWith(\"_\")) {\n            meta.access = \"protected\";\n          } else {\n            meta.access = \"public\";\n          }\n        }\n        return meta;\n      }\n\n      var es6ClassDeclarations = 0;\n      var needsQxCoreEnvironment = false;\n\n      var COLLECT_CLASS_NAMES_VISITOR = {\n        MemberExpression(path) {\n          var self = this;\n          var str = collapseMemberExpression(path.node);\n          t._requireClass(str, { location: path.node.loc });\n          var info = t.__analyser.getSymbolType(str);\n          if (info && info.symbolType == \"class\") {\n            self.collectedClasses.push(str);\n          }\n        }\n      };\n\n      const CODE_ELIMINATION_VISITOR = {\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        CallExpression(path) {\n          const name = collapseMemberExpression(path.node.callee);\n\n          if (\n            (name === \"qx.core.Environment.select\" ||\n              name === \"qx.core.Environment.get\") &&\n            types.isLiteral(path.node.arguments[0])\n          ) {\n            const arg = path.node.arguments[0];\n            const env = t.__analyser.getEnvironment();\n            const envValue = env[arg.value];\n\n            if (envValue !== undefined) {\n              if (name === \"qx.core.Environment.get\") {\n                path.skip();\n                path.replaceWithSourceString(formatValueAsCode(envValue));\n                return;\n              } else if (name === \"qx.core.Environment.select\") {\n                const subPath = path.get(\"arguments.1\");\n                let option = subPath.node.properties.find(\n                  prop => prop.key.value === envValue.toString()\n                );\n\n                if (!option) {\n                  // try to find default value\n                  option = subPath.node.properties.find(\n                    prop => prop.key.value === \"default\"\n                  );\n                }\n\n                if (option) {\n                  // path.skip();\n                  path.replaceWith(option.value);\n                  return;\n                }\n              }\n            }\n            needsQxCoreEnvironment = path.node.loc;\n          }\n        },\n\n        IfStatement: {\n          exit(path) {\n            let node = path.node;\n\n            // If it's a literal value, we can eliminate code because we can resolve it now.  This\n            //  is really important for anything wrapped in `if (qx.core.Environment.get(\"qx.debug\")) ...`\n            //  because the `qx.core.Environment.get` is replaced with a literal value and we need to\n            //  use this to remove the unwanted code.\n            if (types.isLiteral(node.test)) {\n              if (node.test.value) {\n                path.replaceWith(node.consequent);\n              } else if (node.alternate) {\n                path.replaceWith(node.alternate);\n              } else {\n                path.remove();\n              }\n            }\n          }\n        },\n\n        LogicalExpression: {\n          exit(path) {\n            let node = path.node;\n            if (types.isLiteral(node.left) && types.isLiteral(node.right)) {\n              let result =\n                (node.operator == \"&&\" &&\n                  node.left.value &&\n                  node.right.value) ||\n                (node.operator == \"||\" &&\n                  (node.left.value || node.right.value));\n              path.replaceWith(literalValueToExpression(result));\n            }\n          }\n        },\n\n        BinaryExpression: {\n          exit(path) {\n            let node = path.node;\n            if (\n              isCollapsibleLiteral(node.left) &&\n              isCollapsibleLiteral(node.right)\n            ) {\n              if (\"+-*/\".indexOf(node.operator) > -1) {\n                let result;\n                switch (node.operator) {\n                  case \"+\":\n                    result = node.left.value + node.right.value;\n                    break;\n                  case \"-\":\n                    result = node.left.value - node.right.value;\n                    break;\n                  case \"/\":\n                    result = node.left.value / node.right.value;\n                    break;\n                  case \"*\":\n                    result = node.left.value * node.right.value;\n                    break;\n                }\n\n                path.skip();\n                path.replaceWithSourceString(formatValueAsCode(result));\n              } else {\n                let result;\n                switch (node.operator) {\n                  case \"==\":\n                    result = node.left.value == node.right.value;\n                    break;\n                  case \"===\":\n                    result = node.left.value === node.right.value;\n                    break;\n                  case \"!=\":\n                    result = node.left.value != node.right.value;\n                    break;\n                  case \"!==\":\n                    result = node.left.value !== node.right.value;\n                    break;\n                }\n\n                if (result !== undefined) {\n                  path.replaceWith(types.booleanLiteral(Boolean(result)));\n                }\n              }\n            }\n          }\n        },\n\n        UnaryExpression: {\n          exit(path) {\n            if (\n              path.node.operator === \"!\" &&\n              types.isLiteral(path.node.argument)\n            ) {\n              path.replaceWith(types.booleanLiteral(!path.node.argument.value));\n            }\n          }\n        }\n      };\n\n      function collectJson(node, isProperties, jsonPath) {\n        var result;\n\n        if (node.type == \"ObjectExpression\") {\n          result = {};\n          let nextJsonPath = jsonPath ? jsonPath + \".\" : \"\";\n          node.properties.forEach(function (prop) {\n            var key = prop.key.name;\n            if (prop.type == \"ObjectMethod\") {\n              result[key] = \"[[ ObjectMethod Function ]]\";\n            } else {\n              var value = collectJson(\n                prop.value,\n                isProperties,\n                nextJsonPath + key\n              );\n\n              result[key] = value;\n            }\n          });\n        } else if (\n          node.type == \"Literal\" ||\n          node.type == \"StringLiteral\" ||\n          node.type == \"BooleanLiteral\" ||\n          node.type == \"NumericLiteral\" ||\n          node.type == \"NullLiteral\"\n        ) {\n          if (typeof node.value == \"string\") {\n            let isIdentifier = false;\n            if (\n              isProperties &&\n              (jsonPath === \"apply\" ||\n                jsonPath === \"transform\" ||\n                jsonPath === \"isEqual\")\n            ) {\n              isIdentifier = true;\n            }\n            node.value = t.encodePrivate(node.value, isIdentifier, node.loc);\n          }\n          result = node.value;\n        } else if (node.type == \"ArrayExpression\") {\n          result = [];\n          node.elements.forEach(function (elem) {\n            result.push(collectJson(elem, isProperties));\n          });\n        } else if (node.type == \"Identifier\") {\n          node.name = t.encodePrivate(node.name, true, node.loc);\n          result = node.name;\n        } else if (\n          node.type == \"CallExpression\" ||\n          node.type == \"FunctionExpression\" ||\n          node.type == \"ArrowFunctionExpression\"\n        ) {\n          result = new Function(\"[[ Function ]]\");\n        } else if (node.type == \"MemberExpression\") {\n          result = collapseMemberExpression(node);\n        } else if (node.type == \"UnaryExpression\") {\n          if (node.operator == \"-\") {\n            let tmp = collectJson(node.argument, isProperties);\n            if (typeof tmp == \"number\") {\n              return tmp * -1;\n            }\n          } else if (node.operator == \"!\") {\n            let tmp = collectJson(node.argument, isProperties);\n            if (typeof tmp == \"boolean\") {\n              return !tmp;\n            }\n          }\n          result = \"[[ UnaryExpression ]]\";\n        } else if (\n          node.type == \"NewExpression\" ||\n          node.type == \"BinaryExpression\"\n        ) {\n          result = \"[[ \" + node.type + \" ]]\";\n        } else {\n          t.warn(\n            \"Cannot interpret AST \" +\n              node.type +\n              \" at \" +\n              t.__className +\n              (node.loc\n                ? \" [\" + node.loc.start.line + \",\" + node.loc.start.column + \"]\"\n                : \"\")\n          );\n\n          result = null;\n        }\n        return result;\n      }\n\n      const ALLOWED_KEYS = {\n        class: {\n          static: {\n            \"@\": \"object\",\n            type: \"string\", // String\n            statics: \"object\", // Map\n            environment: \"object\", // Map\n            defer: \"function\" // Function\n          },\n          normal: {\n            \"@\": \"object\",\n            \"@construct\": \"object\",\n            \"@destruct\": \"object\",\n            type: \"string\", // String\n            extend: \"function\", // Function\n            implement: \"object\", // Interface[]\n            include: \"object\", // Mixin[]\n            construct: \"function\", // Function\n            statics: \"object\", // Map\n            properties: \"object\", // Map\n            members: \"object\", // Map\n            environment: \"object\", // Map\n            events: \"object\", // Map\n            defer: \"function\", // Function\n            destruct: \"function\" // Function\n          }\n        },\n\n        interface: {\n          extend: \"object\", // Interface | Interface[]\n          statics: \"object\", // Map\n          members: \"object\", // Map\n          properties: \"object\", // Map\n          events: \"object\" // Map\n        },\n        mixin: {\n          include: \"object\", // Mixin | Mixin[]\n          statics: \"object\", // Map\n          members: \"object\", // Map\n          properties: \"object\", // Map\n          events: \"object\", // Map\n          destruct: \"function\", // Function\n          construct: \"function\" // Function\n        },\n        theme: {\n          title: \"string\", // String\n          aliases: \"object\", // Map\n          type: \"string\", // String\n          extend: \"object\", // Theme\n          colors: \"object\", // Map\n          borders: \"object\", // Map\n          decorations: \"object\", // Map\n          fonts: \"object\", // Map\n          icons: \"object\", // Map\n          widgets: \"object\", // Map\n          appearances: \"object\", // Map\n          meta: \"object\", // Map\n          include: \"object\", // Array\n          patch: \"object\", // Array\n          boot: \"function\" // Function\n        }\n      };\n\n      function isValidExtendClause(prop) {\n        if (\n          prop.value.type == \"MemberExpression\" ||\n          prop.value.type == \"Identifier\" ||\n          prop.value.type == \"NullLiteral\"\n        ) {\n          return true;\n        }\n        if (t.__classMeta.type === \"class\") {\n          return false;\n        }\n        if (prop.value.type == \"ArrayExpression\") {\n          return prop.value.elements.every(\n            elem => elem.type == \"MemberExpression\" || elem.type == \"Identifier\"\n          );\n        }\n        return false;\n      }\n\n      const FUNCTION_NAMES = {\n        construct: \"$$constructor\",\n        destruct: \"$$destructor\",\n        defer: null\n      };\n\n      function checkValidTopLevel(path) {\n        var prop = path.node;\n        var keyName = getKeyName(prop.key);\n        let allowedKeys = ALLOWED_KEYS[t.__classMeta.type];\n        if (t.__classMeta.type === \"class\") {\n          allowedKeys =\n            allowedKeys[t.__classMeta.isStatic ? \"static\" : \"normal\"];\n        }\n        if (allowedKeys[keyName] === undefined) {\n          t.addMarker(\n            \"compiler.invalidClassDefinitionEntry\",\n            prop.loc,\n            t.__classMeta.type,\n            keyName\n          );\n        }\n      }\n      function handleTopLevelMethods(path, keyName, functionNode) {\n        if (keyName == \"defer\") {\n          t.__hasDefer = true;\n          t.__inDefer = true;\n        }\n        t.__classMeta.functionName = FUNCTION_NAMES[keyName] || keyName;\n        if (FUNCTION_NAMES[keyName] !== undefined) {\n          makeMeta(keyName, null, functionNode);\n        }\n        enterFunction(path, functionNode);\n        path.traverse(VISITOR);\n        exitFunction(path, functionNode);\n        path.skip();\n        t.__classMeta.functionName = null;\n      }\n\n      var CLASS_DEF_VISITOR = {\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        ObjectMethod(path) {\n          if (path.parentPath.parentPath != this.classDefPath) {\n            path.skip();\n            path.traverse(VISITOR);\n            return;\n          }\n          var keyName = getKeyName(path.node.key);\n          checkValidTopLevel(path);\n          handleTopLevelMethods(path, keyName, path.node);\n        },\n\n        ObjectProperty(path) {\n          if (path.parentPath.parentPath != this.classDefPath) {\n            path.skip();\n            path.traverse(VISITOR);\n            return;\n          }\n          var prop = path.node;\n          var keyName = getKeyName(prop.key);\n          checkValidTopLevel(path);\n\n          if (FUNCTION_NAMES[keyName] !== undefined) {\n            let val = path.node.value;\n            val.leadingComments = (path.node.leadingComments || []).concat(\n              val.leadingComments || []\n            );\n\n            handleTopLevelMethods(path, keyName, val);\n            return;\n          }\n\n          if (keyName == \"extend\") {\n            if (!isValidExtendClause(prop)) {\n              t.addMarker(\"compiler.invalidExtendClause\", prop.value.loc);\n              t.__fatalCompileError = true;\n            } else {\n              t.__classMeta.superClass = collapseMemberExpression(prop.value);\n              t._requireClass(t.__classMeta.superClass, {\n                location: path.node.loc\n              });\n            }\n          } else if (keyName == \"type\") {\n            var type = prop.value.value;\n            t.__classMeta.isAbstract = type === \"abstract\";\n            t.__classMeta.isStatic = type === \"static\";\n            t.__classMeta.isSingleton = type === \"singleton\";\n          } else if (keyName == \"implement\") {\n            path.skip();\n            path.traverse(COLLECT_CLASS_NAMES_VISITOR, {\n              collectedClasses: t.__classMeta.interfaces\n            });\n          } else if (keyName == \"include\") {\n            path.skip();\n            path.traverse(COLLECT_CLASS_NAMES_VISITOR, {\n              collectedClasses: t.__classMeta.mixins\n            });\n          } else if (\n            keyName == \"members\" ||\n            keyName == \"statics\" ||\n            keyName == \"@\"\n          ) {\n            t.__classMeta._topLevel = {\n              path,\n              keyName\n            };\n\n            path.skip();\n            path.traverse(VISITOR);\n            t.__classMeta._topLevel = null;\n          } else if (keyName == \"properties\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidProperties\", prop.loc || null);\n            } else {\n              prop.value.properties.forEach(function (pdNode) {\n                var propName = getKeyName(pdNode.key);\n                var meta = makeMeta(\"properties\", propName, pdNode);\n                var data = collectJson(pdNode.value, true);\n                meta.name = propName;\n                meta.propertyType = \"new\";\n                [\n                  \"refine\",\n                  \"themeable\",\n                  \"event\",\n                  \"inheritable\",\n                  \"apply\",\n                  \"async\",\n                  \"group\",\n                  \"nullable\",\n                  \"init\",\n                  \"transform\"\n                ].forEach(name => (meta[name] = data[name]));\n                if (data.nullable !== undefined) {\n                  meta.allowNull = data.nullable;\n                }\n                if (data.check !== undefined) {\n                  if (qx.lang.Type.isArray(data.check)) {\n                    meta.possibleValues = data.check;\n                  } else {\n                    meta.check = data.check;\n                  }\n                }\n                if (data.init !== undefined) {\n                  meta.defaultValue = data.init;\n                }\n              });\n            }\n            path.traverse(VISITOR);\n          } else if (keyName == \"events\") {\n            path.skip();\n            if (prop.value.properties) {\n              prop.value.properties.forEach(function (eventNode) {\n                var eventName = getKeyName(eventNode.key);\n                var meta = makeMeta(\"events\", eventName, eventNode);\n                meta.name = eventName;\n                meta.type = collectJson(eventNode.value);\n              });\n            }\n            path.traverse(VISITOR);\n          } else if (keyName == \"aliases\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidAliases\", prop.loc || null);\n            } else {\n              var meta = makeMeta(\"aliases\", null, prop);\n              meta.aliasMap = {};\n              prop.value.properties.forEach(function (aliasNode) {\n                var aliasName = getKeyName(aliasNode.key);\n                var aliasValue = getKeyName(aliasNode.value);\n                meta.aliasMap[aliasName] = aliasValue;\n              });\n            }\n          } else if (keyName == \"meta\") {\n            path.skip();\n            if (!prop.value.properties) {\n              t.addMarker(\"class.invalidThemeMeta\", prop.loc || null);\n            } else {\n              let meta = makeMeta(\"themeMeta\", null, prop);\n              meta.themeMetaMap = {};\n              prop.value.properties.forEach(function (node) {\n                var key = getKeyName(node.key);\n                var value = collapseMemberExpression(node.value);\n                meta.themeMetaMap[key] = value;\n              });\n            }\n            path.traverse(VISITOR);\n          }\n        }\n      };\n\n      const TYPE = {\n        \"qx.Class.define\": \"class\",\n        \"qx.Mixin.define\": \"mixin\",\n        \"qx.Theme.define\": \"theme\",\n        \"qx.Interface.define\": \"interface\",\n        \"qx.Bootstrap.define\": \"class\"\n      };\n\n      var VISITOR = {\n        NewExpression: {\n          enter(path) {\n            var str = collapseMemberExpression(path.node.callee);\n            t._requireClass(str, { usage: \"dynamic\", location: path.node.loc });\n          },\n          exit(path) {\n            if (t.__analyser.isAddCreatedAt()) {\n              var fn = types.memberExpression(\n                types.identifier(\"qx\"),\n                types.identifier(\"$$createdAt\")\n              );\n\n              var tmp = types.callExpression(fn, [\n                path.node,\n                types.stringLiteral(t.__className.replace(/\\./g, \"/\") + \".js\"),\n                types.numericLiteral(\n                  path.node.loc ? path.node.loc.start.line : 0\n                ),\n\n                types.numericLiteral(\n                  path.node.loc ? path.node.loc.start.column : 0\n                )\n              ]);\n\n              path.replaceWith(tmp);\n              path.skip();\n            }\n          }\n        },\n\n        ExpressionStatement: {\n          enter: path => {\n            checkNodeJsDocDirectives(path.node);\n          },\n          exit: path => {\n            checkNodeJsDocDirectives(path.node);\n          }\n        },\n\n        EmptyStatement: path => {\n          checkNodeJsDocDirectives(path.node);\n        },\n\n        JSXElement(path) {\n          t.__usesJsx = true;\n        },\n\n        Program: {\n          exit(path) {\n            let dbClassInfo = t._compileDbClassInfo();\n            let copyInfo = {};\n            let hasLoadDeps = false;\n            if (dbClassInfo.dependsOn) {\n              copyInfo.dependsOn = {};\n              Object.keys(dbClassInfo.dependsOn).forEach(key => {\n                let tmp = (copyInfo.dependsOn[key] = Object.assign(\n                  {},\n                  dbClassInfo.dependsOn[key]\n                ));\n\n                if (tmp.load) {\n                  delete tmp.load;\n                  tmp.require = true;\n                  hasLoadDeps = true;\n                }\n              });\n            }\n            if (dbClassInfo.environment) {\n              copyInfo.environment = dbClassInfo.environment;\n              let required = dbClassInfo.environment.required;\n              if (required) {\n                for (let key in required) {\n                  if (required[key].load) {\n                    hasLoadDeps = true;\n                    break;\n                  }\n                }\n              }\n            }\n            let tmp = types.variableDeclaration(\"var\", [\n              types.variableDeclarator(\n                types.identifier(\"$$dbClassInfo\"),\n                literalValueToExpression(copyInfo)\n              )\n            ]);\n\n            let inject = [tmp];\n            if (hasLoadDeps) {\n              tmp = babylon.parse(\n                \"qx.Bootstrap.executePendingDefers($$dbClassInfo);\"\n              ).program.body;\n              inject.push(tmp[0]);\n            }\n            path.node.body.forEach(node => inject.push(node));\n            tmp = babylon.parse(\n              t.__className + \".$$dbClassInfo = $$dbClassInfo;\"\n            ).program.body;\n            inject.push(tmp[0]);\n            let block = types.blockStatement(inject);\n            let rootFn = types.expressionStatement(\n              types.callExpression(\n                types.functionExpression(null, [], block),\n                []\n              )\n            );\n\n            path.node.body.splice(0, path.node.body.length, rootFn);\n          }\n        },\n\n        // Babel seems to be suppressing ClassDeclarations...\n        ClassBody: {\n          enter(path) {\n            es6ClassDeclarations++;\n          },\n          exit(path) {\n            es6ClassDeclarations--;\n          }\n        },\n\n        Literal(path) {\n          if (typeof path.node.value == \"string\") {\n            path.node.value = t.encodePrivate(path.node.value, false, path.loc);\n          }\n        },\n\n        Identifier(path) {\n          path.node.name = t.encodePrivate(path.node.name, true, path.loc);\n\n          // These are AST node types which do not cause undefined references for the identifier,\n          // eg ObjectProperty could be `{ abc: 1 }`, and `abc` is not undefined, it is an identifier\n          const CHECK_FOR_UNDEFINED = {\n            ObjectProperty: 1,\n            ObjectMethod: 1,\n            FunctionExpression: 1,\n            FunctionStatement: 1,\n            ArrowFunctionExpression: 1,\n            VariableDeclarator: 1,\n            FunctionDeclaration: 1,\n            CatchClause: 1,\n            AssignmentPattern: 1,\n            RestElement: 1,\n            ArrayPattern: 1,\n            SpreadElement: 1,\n            ClassDeclaration: 1,\n            ClassMethod: 1,\n            LabeledStatement: 1,\n            BreakStatement: 1\n          };\n\n          // These are AST node types we expect to find at the root of the identifier, and which will\n          //  not trigger a warning.  The idea is that all of the types in CHECK_FOR_UNDEFINED are types\n          //  that cause references to variables, everything else is in DO_NOT_WARN_TYPES.  But, if anything\n          //  has been missed and is not in either of these lists, throw a warning so that it can be checked\n          const DO_NOT_WARN_TYPES = {\n            AssignmentExpression: 1,\n            BooleanExpression: 1,\n            CallExpression: 1,\n            BinaryExpression: 1,\n            UnaryExpression: 1,\n            WhileStatement: 1,\n            IfStatement: 1,\n            NewExpression: 1,\n            ReturnStatement: 1,\n            ConditionalExpression: 1,\n            LogicalExpression: 1,\n            ForInStatement: 1,\n            ArrayExpression: 1,\n            SwitchStatement: 1,\n            SwitchCase: 1,\n            ThrowStatement: 1,\n            ExpressionStatement: 1,\n            UpdateExpression: 1,\n            SequenceExpression: 1,\n            ContinueStatement: 1,\n            ForStatement: 1,\n            TemplateLiteral: 1,\n            AwaitExpression: 1,\n            DoWhileStatement: 1,\n            ForOfStatement: 1,\n            TaggedTemplateExpression: 1,\n            ClassExpression: 1,\n            OptionalCallExpression: 1,\n            JSXExpressionContainer: 1\n          };\n\n          let root = path;\n          while (root) {\n            let parentType = root.parentPath.node.type;\n            if (\n              parentType == \"MemberExpression\" ||\n              parentType == \"OptionalMemberExpression\"\n            ) {\n              root = root.parentPath;\n              continue;\n            }\n            if (CHECK_FOR_UNDEFINED[parentType]) {\n              return;\n            }\n            if (!DO_NOT_WARN_TYPES[parentType]) {\n              t.addMarker(\"testForUnresolved\", path.node.loc, parentType);\n            }\n            break;\n          }\n\n          let name = collapseMemberExpression(root.node);\n          if (name.startsWith(\"(\")) {\n            return;\n          }\n          let members = name.split(\".\");\n          t.addReference(members, root.node.loc);\n        },\n\n        CallExpression: {\n          enter(path) {\n            function getStringArg(index) {\n              if (index >= path.node.arguments.length) {\n                return null;\n              }\n              let arg = path.node.arguments[index];\n              if (arg.type == \"StringLiteral\") {\n                return arg.value;\n              }\n              return null;\n            }\n\n            function addTranslation(entry) {\n              let lineNo = path.node.loc ? path.node.loc.start.line : 0;\n              let cur = t.__translations[entry.msgid];\n              if (cur) {\n                if (!qx.lang.Type.isArray(cur.lineNo)) {\n                  cur.lineNo = [cur.lineNo];\n                }\n                cur.lineNo.push(lineNo);\n              } else {\n                entry.lineNo = lineNo;\n                t.__translations.push(entry);\n              }\n            }\n\n            if (\n              types.isMemberExpression(path.node.callee) ||\n              (es6ClassDeclarations == 0 &&\n                (path.node.callee.object?.type == \"Super\" ||\n                  path.node.callee.type == \"Super\"))\n            ) {\n              let name = collapseMemberExpression(path.node.callee);\n              let thisAlias = null;\n\n              // Try and translate aliases for \"this\"; this is a really simplistic implementation\n              //  because static code path analysis is way out of scope for the compiler, so we're\n              //  only trying to handle code like:\n              //    ```\n              //    var that = this, args = arguments;\n              //    (function() { that.base(args); })();\n              //    ```\n              if (path.node.callee.object?.type == \"Identifier\") {\n                let originalAlias = path.node.callee.object.name;\n                let alias = originalAlias;\n                let aliasIsThis = false;\n                for (let scope = t.__scope; scope; scope = scope.parent) {\n                  while (!aliasIsThis) {\n                    let tmp = scope.vars[alias];\n                    if (tmp === \"this\") {\n                      aliasIsThis = true;\n                      break;\n                    }\n                    if (typeof tmp == \"string\") {\n                      alias = tmp;\n                    } else {\n                      break;\n                    }\n                  }\n                  if (aliasIsThis || scope.isClassMember) {\n                    break;\n                  }\n                }\n                if (aliasIsThis) {\n                  name = \"this\" + name.substring(originalAlias.length);\n                  thisAlias = originalAlias;\n                }\n              }\n\n              // Class definition?  EG `qx.Class.define(...`\n              if (TYPE[name]) {\n                t.__definingType = name.match(/\\.([a-zA-Z]+)\\./)[1];\n                let node = path.node;\n                let className = node.arguments[0].value;\n                let classDef = node.arguments[1];\n\n                // We can only parse objects (eg qx.data.marshal.Json.__toClass creates objects on the fly that we cannot scan)\n                if (classDef.type != \"ObjectExpression\") {\n                  return;\n                }\n\n                // Create new meta\n                t.__pushMeta(className);\n                if (needsQxCoreEnvironment) {\n                  t._requireClass(\"qx.core.Environment\", {\n                    location: needsQxCoreEnvironment,\n                    defer: true\n                  });\n                }\n\n                let meta = makeMeta(\"clazz\", null, path.parent);\n                t.__classMeta.type = TYPE[name];\n                if (\n                  t.__definingType == \"Class\" ||\n                  t.__definingType == \"Bootstrap\"\n                ) {\n                  let typeProp = classDef.properties.find(\n                    prop =>\n                      prop.key.type == \"Identifier\" && prop.key.value == \"type\"\n                  );\n\n                  if (typeProp) {\n                    (t.__classMeta.isStatic == typeProp.value.type) ==\n                      \"Literal\" && typeProp.value.value === \"static\";\n                  }\n                }\n                checkJsDocDirectives(meta.jsdoc, path.node.loc);\n\n                t._requireClass(name, {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n                path.traverse(CLASS_DEF_VISITOR, { classDefPath: path });\n                t.__popMeta(className);\n              } else if (name == \"qx.core.Environment.add\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.add: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.__environmentChecks.provided[arg.value] = true;\n                    if (\n                      !arg.value.startsWith(t.__className) &&\n                      !Object.prototype.hasOwnProperty.call(\n                        qx.tool.compiler.ClassFile.ENVIRONMENT_CONSTANTS,\n                        arg.value\n                      )\n                    ) {\n                      let symbol = t.__library.getSymbolType(arg.value);\n                      if (!symbol || symbol.symbolType != \"environment\") {\n                        t.addMarker(\n                          \"environment.unreachable\",\n                          path.node.loc,\n                          arg.value\n                        );\n                      }\n                    }\n                  }\n                }\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n              } else if (name == \"qx.core.Environment.get\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.get: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.addEnvCheck(arg.value, path.node.loc);\n                  }\n                }\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n                path.traverse(VISITOR);\n              } else if (name == \"qx.core.Environment.select\") {\n                let arg = path.node.arguments[0];\n                if (types.isLiteral(arg)) {\n                  if (typeof arg.value != \"string\") {\n                    log.error(\n                      \"Invalid argument to qx.core.Environment.select: \" +\n                        arg.value\n                    );\n                  } else {\n                    t.addEnvCheck(arg.value, path.node.loc);\n                  }\n                }\n\n                t._requireClass(\"qx.core.Environment\", {\n                  usage: \"dynamic\",\n                  location: path.node.loc\n                });\n\n                path.skip();\n                path.traverse(VISITOR);\n              } else if (\n                name == \"this.base\" ||\n                (es6ClassDeclarations == 0 &&\n                  (name == \"super\" || name.startsWith(\"super.\")))\n              ) {\n                let expr;\n\n                // For mixins, there is never a valid time to call this.base() in the constructor; but it is\n                //  OK in methods - but we have to refer to superclass.methodName directly.  For ordinary\n                //  classes, we need to use constructor.methodName.base.\n                if (t.__definingType == \"Mixin\") {\n                  expr = types.callExpression(\n                    expandMemberExpression(\"qx.Mixin.baseClassMethod\"),\n                    [\n                      expandMemberExpression(\"this.constructor\"),\n                      types.identifier(t.__classMeta.className),\n                      types.stringLiteral(t.__classMeta.functionName)\n                    ]\n                  );\n                  expr = types.memberExpression(expr, types.identifier(\"call\"));\n                } else if (t.__classMeta.functionName == \"$$constructor\") {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass + \".constructor.call\"\n                  );\n                } else if (t.__classMeta.className) {\n                  expr = expandMemberExpression(\n                    t.__classMeta.className +\n                    \".superclass\" +\n                    \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                } else {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass +\n                      \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                }\n                let thisArgument = thisAlias\n                  ? types.identifier(thisAlias)\n                  : types.thisExpression();\n                if (name.startsWith(\"super\")) {\n                  path.node.arguments.unshift(thisArgument);\n                } else {\n                  path.node.arguments[0] = thisArgument;\n                }\n                let callExpr = types.callExpression(expr, path.node.arguments);\n                path.replaceWith(callExpr);\n              } else if (\n                name == \"this.base.apply\" ||\n                name == \"this.base.call\"\n              ) {\n                let methodName = name == \"this.base.apply\" ? \"apply\" : \"call\";\n\n                let expr;\n                if (t.__definingType == \"Mixin\") {\n                  expr = expandMemberExpression(\n                    \"this.constructor.superclass.prototype.\" +\n                      t.__classMeta.functionName +\n                      \".call\"\n                  );\n                } else if (t.__classMeta.functionName == \"$$constructor\") {\n                  expr = expandMemberExpression(\n                    t.__classMeta.superClass + \".constructor.\" + methodName\n                  );\n                } else {\n                  expr = expandMemberExpression(\n                    t.__className +\n                      \".prototype.\" +\n                      t.__classMeta.functionName +\n                      \".base.\" +\n                      methodName\n                  );\n                }\n\n                // Original call to this.base.apply would have included arguments in the first element of the array\n                //  here we remove that because it's not needed, specifically changing\n                //    `this.base.apply(this, args)` to\n                //    `this.base.apply(this, args.slice().shift())`\n                let exprSplice = types.callExpression(\n                  types.memberExpression(\n                    path.node.arguments[1],\n                    types.identifier(\"slice\")\n                  ),\n\n                  []\n                );\n\n                let exprUnshift = types.callExpression(\n                  types.memberExpression(exprSplice, types.identifier(\"shift\")),\n                  []\n                );\n\n                let callExpr = types.callExpression(expr, [\n                  path.node.arguments[0],\n                  exprUnshift\n                ]);\n\n                path.replaceWith(callExpr);\n              } else if (name == \"this.self\") {\n                let expr = expandMemberExpression(t.__classMeta.className);\n                path.replaceWith(expr);\n              } else if (\n                name == \"this.tr\" ||\n                name == \"this.marktr\" ||\n                name == \"qx.locale.Manager.tr\" ||\n                name == \"qx.locale.Manager.marktr\"\n              ) {\n                let arg0 = getStringArg(0);\n                if (!arg0) {\n                  t.addMarker(\n                    \"translate.invalidMessageId\",\n                    path.node.loc,\n                    arg0\n                  );\n                } else {\n                  addTranslation({ msgid: arg0 });\n                }\n              } else if (\n                name == \"this.trn\" ||\n                name == \"qx.locale.Manager.trn\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                if (!arg0 || !arg1) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds\",\n                    path.node.loc,\n                    arg0,\n                    arg1\n                  );\n                } else {\n                  addTranslation({ msgid: arg0, msgid_plural: arg1 });\n                }\n              } else if (\n                name == \"this.trc\" ||\n                name == \"qx.locale.Manager.trc\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                if (!arg0 || !arg1) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds\",\n                    path.node.loc,\n                    arg0,\n                    arg1\n                  );\n                } else {\n                  addTranslation({ msgid: arg1, comment: arg0 });\n                }\n              } else if (\n                name == \"this.trnc\" ||\n                name == \"qx.locale.Manager.trnc\"\n              ) {\n                let arg0 = getStringArg(0);\n                let arg1 = getStringArg(1);\n                let arg2 = getStringArg(2);\n                if (!arg0 || !arg1 || !arg2) {\n                  t.addMarker(\n                    \"translate.invalidMessageIds3\",\n                    path.node.loc,\n                    arg0,\n                    arg1,\n                    arg2\n                  );\n                } else {\n                  addTranslation({\n                    msgid: arg1,\n                    msgid_plural: arg2,\n                    comment: arg0\n                  });\n                }\n              } else {\n                let pos = name.lastIndexOf(\".\");\n                // name can be \".concat\" when used with \"[].concat\"\n                if (pos > 0) {\n                  let str = name.substring(0, pos);\n                  if (!t.hasDeclaration(str)) {\n                    t._requireClass(str, {\n                      usage: \"dynamic\",\n                      location: path.node.loc\n                    });\n                  }\n                }\n              }\n            }\n          }\n        },\n\n        MemberExpression: {\n          exit(path) {\n            // regular expression or string property (eg \"aa\".charCodeAt())\n            if (path.node.object.type == \"Literal\") {\n              return;\n            }\n\n            // Handle `[ 123 ].blah()` by visiting\n            if (path.node.object.type == \"ArrayExpression\") {\n              return;\n            }\n\n            // Handle `[ 123 ].blah()` by visiting\n            if (\n              path.node.object.type == \"MemberExpression\" &&\n              path.node.object.object.type == \"ArrayExpression\"\n            ) {\n              return;\n            }\n\n            let name = collapseMemberExpression(path.node);\n            if (name.startsWith(\"(\")) {\n              return;\n            }\n            let members = name.split(\".\");\n\n            // Ignore 'this' references\n            if (members[0] === \"this\") {\n              return;\n            }\n\n            // Global variable or a local variable?\n            if (t.__globalSymbols[members[0]] || t.hasDeclaration(members[0])) {\n              return;\n            }\n\n            let info = t._requireClass(name, { location: path.node.loc });\n            if (!info || !info.className) {\n              // The code `abc.def.ghi()` will produce a member expression for both `abc.def` (two Identifier's)\n              //  and another for `abc.def` and `.ghi` (MemberExpression + Identifier).  Our logic for detecting\n              //  references and unresolved symbols expects the full `abc.def.ghi` so by excluding MemberExpression's\n              //  where the container is also a MemberExpression means that we skip the incomplete `abc.def`\n              if (path.container.type == \"MemberExpression\") {\n                return;\n              }\n              t.addReference(members, path.node.loc);\n            }\n          }\n        },\n\n        ObjectProperty: {\n          exit(path) {\n            if (this.__privateMangling == \"readable\") {\n              if (\n                path.node.value.type == \"FunctionExpression\" &&\n                path.node.value.id === null\n              ) {\n                let functionName =\n                  typeof path.node.key.value == \"string\"\n                    ? path.node.key.value\n                    : path.node.key.name;\n                if (!qx.tool.compiler.ClassFile.RESERVED_WORDS[functionName]) {\n                  path.node.value.id = types.identifier(functionName);\n                }\n              }\n            }\n          }\n        },\n\n        Property(path) {\n          if (\n            t.__classMeta &&\n            t.__classMeta._topLevel &&\n            t.__classMeta._topLevel.path == path.parentPath.parentPath\n          ) {\n            t.__classMeta.functionName = getKeyName(path.node.key);\n            makeMeta(\n              t.__classMeta._topLevel.keyName,\n              t.__classMeta.functionName,\n              path.node\n            );\n\n            path.skip();\n            let functionId = null;\n            if (this.__privateMangling == \"readable\") {\n              if (\n                path.node.value.type == \"FunctionExpression\" &&\n                path.node.value.id === null\n              ) {\n                let functionName =\n                  typeof path.node.key.value == \"string\"\n                    ? path.node.key.value\n                    : path.node.key.name;\n                if (!qx.tool.compiler.ClassFile.RESERVED_WORDS[functionName]) {\n                  functionId = types.identifier(functionName);\n                }\n              }\n            }\n            path.traverse(VISITOR);\n            if (functionId) {\n              path.node.value.id = functionId;\n            }\n            t.__classMeta.functionName = null;\n          }\n        },\n\n        ObjectMethod(path) {\n          // Methods within a top level object (ie \"members\" or \"statics\"), record the method name and meta data\n          if (\n            t.__classMeta &&\n            t.__classMeta._topLevel &&\n            t.__classMeta._topLevel.path == path.parentPath.parentPath\n          ) {\n            t.__classMeta.functionName = getKeyName(path.node.key);\n            makeMeta(\n              t.__classMeta._topLevel.keyName,\n              t.__classMeta.functionName,\n              path.node\n            );\n\n            path.skip();\n            enterFunction(path);\n            path.traverse(VISITOR);\n            exitFunction(path);\n            t.__classMeta.functionName = null;\n\n            // Otherwise traverse method as normal\n          } else {\n            path.skip();\n            enterFunction(path);\n            path.traverse(VISITOR);\n            exitFunction(path);\n          }\n        },\n\n        FunctionDeclaration: FUNCTION_DECL_OR_EXPR,\n        FunctionExpression: FUNCTION_DECL_OR_EXPR,\n        ArrowFunctionExpression: FUNCTION_DECL_OR_EXPR,\n\n        VariableDeclaration: {\n          exit(path) {\n            checkNodeJsDocDirectives(path.node);\n            path.node.declarations.forEach(decl => {\n              // Simple `var x` form\n              if (decl.id.type == \"Identifier\") {\n                let value = null;\n                //decl.id.name = t.encodePrivate(decl.id.name, true, decl.loc);\n                if (decl.init) {\n                  if (decl.init.type == \"Identifier\") {\n                    value = decl.init.name;\n                  } else if (decl.init.type == \"ThisExpression\") {\n                    value = \"this\";\n                  }\n                }\n                t.addDeclaration(decl.id.name, value);\n\n                // Object destructuring `var {a,b} = {...}`\n              } else if (decl.id.type == \"ObjectPattern\") {\n                decl.id.properties.forEach(prop => {\n                  if (prop.value.type == \"AssignmentPattern\") {\n                    t.addDeclaration(prop.value.left.name);\n                  } else {\n                    t.addDeclaration(prop.value.name);\n                  }\n                });\n\n                // Array destructuring `var [a,b] = [...]`\n              } else if (decl.id.type == \"ArrayPattern\") {\n                decl.id.elements.forEach(prop => {\n                  if (prop) {\n                    if (prop.type == \"AssignmentPattern\") {\n                      t.addDeclaration(prop.left.name);\n                    } else if (prop.type == \"RestElement\") {\n                      t.addDeclaration(prop.argument.name);\n                    } else {\n                      t.addDeclaration(prop.name);\n                    }\n                  }\n                });\n              }\n            });\n          }\n        },\n\n        ClassDeclaration(path) {\n          t.addDeclaration(path.node.id.name);\n        },\n\n        // Note that AST Explorer calls this MethodDefinition, not ClassMethod\n        ClassMethod: {\n          enter(path) {\n            enterFunction(path, path.node.value, path.node.key);\n          },\n          exit(path) {\n            exitFunction(path, path.node.value, path.node.key);\n          }\n        },\n\n        CatchClause: {\n          enter(path) {\n            t.pushScope(null, path.node);\n            t.addDeclaration(path.node.param.name);\n          },\n          exit(path) {\n            t.popScope(path.node);\n          }\n        }\n      };\n\n      return {\n        CodeElimination: { visitor: CODE_ELIMINATION_VISITOR },\n        Compiler: { visitor: VISITOR }\n      };\n    },\n\n    /**\n     * Pushes new meta data onto the stack - each meta represents a class being defined,\n     * we operate a stack so that we can handle inner classes\n     *\n     * @param className {String} name of the class being defined\n     */\n    __pushMeta(className) {\n      var pos = (className || \"\").lastIndexOf(\".\");\n      var meta = {\n        className: className,\n        packageName: pos > -1 ? className.substring(0, pos) : null,\n        name: pos > -1 ? className.substring(pos + 1) : className,\n        superClass: null,\n        interfaces: [],\n        mixins: [],\n        functionName: null\n      };\n\n      this.__metaStack.push(meta);\n      this.__classMeta = meta;\n      this.__metaDefinitions[className] = meta;\n      this.__numClassesDefined++;\n    },\n\n    /**\n     * Pops the current meta off the stack, optionally checking that the classname is correct\n     */\n    __popMeta(className) {\n      if (!this.__metaStack.length) {\n        throw new Error(\"No __metaStack entries to pop\");\n      }\n      let meta = this.__metaStack[this.__metaStack.length - 1];\n      if (className && meta.className != className) {\n        throw new Error(\n          \"Wrong __metaStack entries to pop, expected \" +\n            className +\n            \" found \" +\n            meta.className\n        );\n      }\n      this.__metaStack.pop();\n      meta = this.__metaStack[this.__metaStack.length - 1] || null;\n      this.__classMeta = meta;\n    },\n\n    /**\n     * Pushes a new scope on the stack\n     */\n    pushScope(functionName, node, isClassMember) {\n      this.__scope = {\n        functionName: functionName,\n        parent: this.__scope,\n        loc: node.loc,\n        vars: {},\n        unresolved: {},\n        isClassMember: Boolean(isClassMember)\n      };\n    },\n\n    /**\n     * Pops a scope from the stack\n     */\n    popScope(node) {\n      var old = this.__scope;\n      var scope = (this.__scope = this.__scope.parent);\n      var unresolved = scope.unresolved;\n\n      for (var name in old.unresolved) {\n        if (scope.vars[name]) {\n          continue;\n        }\n        var entry = unresolved[name];\n        if (!entry) {\n          entry = unresolved[name] = {\n            name: name,\n            locations: []\n          };\n        }\n        entry.locations.push.apply(\n          entry.locations,\n          old.unresolved[name].locations\n        );\n      }\n    },\n\n    /**\n     * Tests whether the current scope is load-time scope\n     *\n     * @returns {Boolean}\n     */\n    isLoadScope() {\n      return !this.__scope.parent;\n    },\n\n    /**\n     * Tests whether this class has a defer method\n     *\n     * @returns {Boolean}\n     */\n    hasDefer() {\n      return this.__hasDefer;\n    },\n\n    /**\n     * Adds a variable declaration to the current scope; if the symbol was\n     * previously \"unresolved\" it is removed from the unresolved list\n     *\n     * @param name {String} the name of the variabvle being declared\n     * @param valueName {String} the value to assign to the variable\n     */\n    addDeclaration(name, valueName) {\n      if (this.__scope.vars[name] === undefined) {\n        this.__scope.vars[name] = valueName || true;\n        var unresolved = this.__scope.unresolved;\n        delete unresolved[name];\n        var re = new RegExp(name + \"\\\\.\");\n        for (var tmp in unresolved) {\n          if (re.test(tmp)) {\n            delete unresolved[tmp];\n          }\n        }\n      }\n    },\n\n    /**\n     * Tests whether there is a variable declaration accessible to the current\n     * scope, ie including parent scope\n     *\n     * @param name\n     * @returns {Boolean}\n     */\n    hasDeclaration(name) {\n      var pos = name.indexOf(\".\");\n      if (pos > -1) {\n        name = name.substring(0, pos);\n      }\n      for (var tmp = this.__scope; tmp; tmp = tmp.parent) {\n        if (tmp.vars[name] !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Adds a reference to a symbol; unknown symbols are marked as unresolved\n     * @param name\n     * @param loc\n     */\n    addReference(name, loc) {\n      if (!qx.lang.Type.isArray(name)) {\n        name = name.split(\".\");\n      }\n      var scope = this.__scope;\n      if (scope.vars[name[0]] !== undefined) {\n        return;\n      }\n\n      // Global variable or a local variable?\n      if (\n        name[0] === \"this\" ||\n        name[0] === \"[]\" ||\n        this.__globalSymbols[name[0]] ||\n        this.hasDeclaration(name[0])\n      ) {\n        return;\n      }\n\n      let str = \"\";\n      for (var i = 0; i < name.length; i++) {\n        if (i) {\n          str += \".\";\n        }\n        str += name[i];\n        if (this.__globalSymbols[str] || this.isIgnored(str)) {\n          return;\n        }\n      }\n      name = str;\n      if (\n        name == this.__className ||\n        name.startsWith(this.__className + \".\") ||\n        name.startsWith(\"(\")\n      ) {\n        return;\n      }\n\n      if (!scope.unresolved[name]) {\n        scope.unresolved[name] = {\n          name: name,\n          locations: loc ? [loc] : [],\n          load: this.isLoadScope(),\n          defer: this.__inDefer\n        };\n      } else if (loc) {\n        scope.unresolved[name].locations.push(loc);\n      }\n    },\n\n    /**\n     * Repeatably encodes a private symbol name, caching the result; ignores non-private symbols\n     *\n     * @param name {String} symbol name\n     * @param isIdentifier {boolean} whether this is usage as an identifier (and not in a string literal)\n     * @param location {Location} the location of the symbol\n     * @return {String} the encoded name if private, the original name if not private\n     */\n    encodePrivate(name, isIdentifier, location) {\n      const DO_NOT_ENCODE = {\n        __proto__: 1,\n        __iterator__: 1,\n        __dirname: 1,\n        __filename: 1\n      };\n\n      if (\n        DO_NOT_ENCODE[name] ||\n        this.__privateMangling == \"off\" ||\n        !name.startsWith(\"__\") ||\n        !name.match(/^[0-9a-z_$]+$/i)\n      ) {\n        return name;\n      }\n\n      if (name.indexOf(\"__P_\") > -1) {\n        return name;\n      }\n\n      let coded = this.__privates[name];\n      if (!coded) {\n        // Strings have to be handled differently - we need to mangle them, but only if we\n        //  know for sure that they are private members; to do this, we need to see a symbol\n        //  (identifier) first, to know that the string needs to be mangled\n        if (!isIdentifier) {\n          this.__blockedPrivates[name] = true;\n          return name;\n        }\n        if (this.__blockedPrivates[name]) {\n          this.addMarker(\"class.blockedMangle\", location, name);\n          return name;\n        }\n        let db = this.__analyser.getDatabase();\n        if (!db.manglePrefixes) {\n          db.manglePrefixes = {\n            nextPrefix: 1,\n            classPrefixes: {}\n          };\n        }\n        let prefixes = db.manglePrefixes;\n        let prefix = prefixes.classPrefixes[this.__className];\n        if (!prefix) {\n          prefix = \"__P_\" + ++prefixes.nextPrefix + \"_\";\n          prefixes.classPrefixes[this.__className] = prefix;\n        }\n\n        if (this.__privateMangling == \"readable\") {\n          coded = this.__privates[name] =\n            name + prefix + Object.keys(this.__privates).length;\n        } else {\n          coded = this.__privates[name] =\n            prefix + Object.keys(this.__privates).length;\n        }\n      }\n      return coded;\n    },\n\n    /**\n     * Removes a reference from scope; this should only really be used after scanning is complete\n     * @param name\n     */\n    deleteReference(name) {\n      delete this.__scope.unresolved[name];\n      var stub = name + \".\";\n      for (var id in this.__scope.unresolved) {\n        if (id.startsWith(stub)) {\n          delete this.__scope.unresolved[id];\n        }\n      }\n    },\n\n    /**\n     * Adds an external resource which needs to be loaded early\n     *\n     * @param name {String} name of the symbol\n     */\n    addExternal(name) {\n      if (this.__externals.indexOf(name) < 0) {\n        this.__externals.push(name);\n      }\n    },\n\n    /**\n     * Adds an ignored symbol\n     * @param name {String} name of the symbol\n     */\n    addIgnore(name) {\n      var scope = this.__scope;\n      if (!scope.ignore) {\n        scope.ignore = {};\n      }\n      var segs = name.split(\",\");\n      segs.forEach(name => {\n        name = name.trim();\n        if (name.length) {\n          if (name.endsWith(\".*\")) {\n            scope.ignore[name] = name.substring(0, name.length - 2);\n          } else if (name.endsWith(\"*\")) {\n            scope.ignore[name] = name.substring(0, name.length - 1);\n          } else {\n            scope.ignore[name] = true;\n          }\n        }\n      });\n    },\n\n    /**\n     * Tests whether a symbol has already been marked as ignore\n     * @param name {String} symbol name\n     * @return {Boolean} true if ignored\n     */\n    isIgnored(name) {\n      for (var tmp = this.__scope; tmp; tmp = tmp.parent) {\n        if (tmp.ignore) {\n          if (tmp.ignore[name]) {\n            return true;\n          }\n          for (var key in tmp.ignore) {\n            if (tmp.ignore[key] !== true) {\n              if (name.startsWith(tmp.ignore[key])) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Removes an ignored symbol\n     * @param name {String} name of the symbol\n     */\n    removeIgnore(name) {\n      var scope = this.__scope;\n      if (!scope) {\n        return;\n      }\n      var segs = name.split(\",\");\n      segs.forEach(name => delete scope.ignore[name]);\n    },\n\n    /**\n     * Adds an environment check made by the class\n     *\n     * @param name\n     * @param location {Object?} see _requireClass\n     */\n    addEnvCheck(name, location) {\n      var t = this;\n      var requiredOpts = {\n        load: t.isLoadScope(),\n        defer: t.__inDefer,\n        construct:\n          t.__classMeta && t.__classMeta.functionName == \"$$constructor\",\n        location: location\n      };\n\n      var dest = t.__environmentChecks.required[name];\n      if (!dest) {\n        dest = t.__environmentChecks.required[name] = {};\n      }\n      if (requiredOpts.load) {\n        dest.load = true;\n      }\n      if (requiredOpts.defer) {\n        dest.defer = true;\n      }\n      if (requiredOpts.construct) {\n        dest.construct = true;\n      }\n      t._requireClass(\"qx.core.Environment\", { location: location });\n      let info = t.__analyser.getSymbolType(name);\n      if (\n        !Object.prototype.hasOwnProperty.call(\n          qx.tool.compiler.ClassFile.ENVIRONMENT_CONSTANTS,\n          name\n        )\n      ) {\n        // Generally speaking, we try to have as few load dependencies as possible, and this\n        // means that in a class' `.defer()` we will still allow for runtime loading.  However,\n        // we pull environment checks up as this is a common use case; the problem this is trying\n        // to solve is instances where the feature detection class is loaded after the class which\n        // implements the polyfill, and the polyfill's defer method is then installing a polyfill\n        // when it does not need to (and should not do so).  For example, `qx.bom.client.EcmaScript`\n        // *must* load and have its defer called before the `qx.lang.normalize.Object` class has\n        // it's defer called.\n        let load = dest.load;\n        if (info && info.symbolType == \"environment\") {\n          load = true;\n        }\n        t._requireClass(name, { load: load, location: location });\n        if (info && info.symbolType == \"environment\") {\n          dest.className = info.className;\n        }\n      }\n    },\n\n    /**\n     * Adds a marker (eg warning or error)\n     *\n     * @param msgId {String} the marker message ID (@see qx.tool.compiler.Marker)\n     * @param pos {Object||null} position map; may contain a Map containing\n     *  {line,column?}, or a Map {start:{line,column}, end: {line,column}}.\n     */\n    addMarker(msgId, pos) {\n      msgId = \"qx.tool.compiler.\" + msgId;\n\n      let key = msgId;\n      let fragment = msgId.indexOf(\"#\");\n      if (fragment > -1) {\n        msgId = msgId.substring(0, fragment);\n      } else {\n        // Give each marker a unique key based on msgId and the line; use this to suppress\n        //  multiple markers\n        key += \"#\";\n        if (pos) {\n          if (pos.line) {\n            key += pos.line;\n          } else if (pos.start && pos.start.line) {\n            key += pos.start.line;\n          }\n        }\n      }\n\n      if (this.__haveMarkersFor[key]) {\n        return;\n      }\n      this.__haveMarkersFor[key] = true;\n\n      let marker = {\n        msgId: msgId\n      };\n\n      // Extract position\n      if (pos) {\n        if (pos.line) {\n          pos = { start: pos };\n        }\n        if (pos.start) {\n          let tmp = { line: pos.start.line };\n          if (pos.start.column) {\n            tmp.column = pos.start.column;\n          }\n          marker.pos = { start: tmp };\n          if (pos.end && pos.end.line) {\n            let tmp = { line: pos.end.line };\n            if (pos.end.column) {\n              tmp.column = pos.end.column;\n            }\n            marker.pos.end = tmp;\n          }\n        }\n      }\n      let args = qx.lang.Array.fromArguments(arguments, 2);\n      if (args.length) {\n        marker.args = args;\n      }\n      this.__markers.push(marker);\n    },\n\n    /**\n     * Adds a required class\n     *\n     * @param name {String} the name of the class\n     * @param opts {Map?} which is:\n     *  where {\"ignore\"|\"require\"|\"use\"|null} where it's mentioned\n     *  load {Boolean?} whether it is a load-time dependency or not\n     *  defer {Boolean?} whether the dependency is in defer or not\n     *  location {Map?} location of the token that caused the reference\n     * @return {Map?} info about the symbol type of the named class, @see {Analyser.getSymbolType}\n     */\n    _requireClass(name, opts) {\n      if (qx.lang.Type.isArray(name)) {\n        name.forEach(name => this._requireClass(name));\n        return null;\n      }\n      let t = this;\n      if (name == this.__className) {\n        return null;\n      }\n      if (!name) {\n        throw new Error(\"No classname\");\n      }\n      if (this.isIgnored(name)) {\n        return null;\n      }\n\n      let requireOpts = {\n        load: t.isLoadScope(),\n        defer: t.__inDefer,\n        construct:\n          t.__classMeta && t.__classMeta.functionName == \"$$constructor\"\n      };\n\n      if (opts) {\n        for (let key in opts) {\n          requireOpts[key] = opts[key];\n        }\n      }\n\n      let info = t.__analyser.getSymbolType(name);\n      let symbolType = info ? info.symbolType : null;\n      let className = info ? info.className : null;\n      if (symbolType != \"package\" && className && className != t.__className) {\n        // Re-check the class name as ignored if this is a member\n        if (symbolType == \"member\" && t.isIgnored(className)) {\n          return null;\n        }\n        let data = t.__requiredClasses[className];\n        if (!data) {\n          data = t.__requiredClasses[className] = {};\n        }\n\n        if (requireOpts.where !== undefined) {\n          if (requireOpts.where == \"ignore\") {\n            data.ignore = true;\n          } else if (requireOpts.where == \"require\") {\n            data.require = true;\n          }\n        }\n        if (requireOpts.load) {\n          data.load = true;\n          if (requireOpts.usage === \"dynamic\") {\n            if (data.usage !== \"static\") {\n              data.usage = \"dynamic\";\n            }\n            data.load = true;\n          } else if (!data.load) {\n            data.load = true;\n            data.usage = \"static\";\n          }\n        }\n        if (requireOpts.defer) {\n          if (requireOpts.load) {\n            data.defer = \"load\";\n          } else if (data.defer !== \"load\") {\n            data.defer = \"runtime\";\n          }\n\n          if (!name.startsWith(t.__className)) {\n            if (\n              !qx.tool.compiler.ClassFile.DEFER_SAFE_SYMBOLS.some(function (\n                symbol\n              ) {\n                return name.startsWith(symbol);\n              })\n            ) {\n              // Temporarily disabled until Qooxdoo framework catches up\n              // t.addMarker(\"defer.unsafe\", (opts && opts.location)||null, name);\n            }\n          }\n        }\n        if (requireOpts.construct) {\n          data.construct = true;\n        }\n        t.deleteReference(className);\n      }\n      return info;\n    },\n\n    /**\n     * Adds a required asset\n     * @param path\n     */\n    _requireAsset(path) {\n      if (path.indexOf(\"/\") < 0 && path.indexOf(\".\") > -1) {\n        path = path.replace(/\\./g, \"/\");\n      }\n      if (!qx.lang.Array.contains(this.__requiredAssets, path)) {\n        this.__requiredAssets.push(path);\n      }\n    },\n\n    /**\n     * Returns the assets required by the class\n     * @returns\n     */\n    getAssets() {\n      return this.__requiredAssets;\n    },\n\n    /**\n     * Finds an object property in a node tree (not a Qooxdoo property, an\n     * object property)\n     *\n     * @param props\n     * @param name\n     * @returns\n     */\n    __findProperty(props, name) {\n      for (let i = 0; i < props.length; i++) {\n        let prop = props[i];\n        if (prop.type == \"Property\") {\n          if (prop.key.type == \"Identifier\" && prop.key.name == name) {\n            return prop;\n          }\n          if (prop.key.type == \"StringLiteral\" && prop.key.value == name) {\n            return prop;\n          }\n        }\n      }\n      return null;\n    },\n\n    /**\n     * Returns the list of required classes (dependencies)\n     *\n     * @returns\n     */\n    getRequiredClasses() {\n      return this.__requiredClasses;\n    },\n\n    /**\n     * Returns a list of unresolved symbols\n     *\n     * @returns\n     */\n    getUnresolvedSymbols() {\n      return this.__scope.unresolved;\n    },\n\n    /**\n     * Returns the name of the class being compiled\n     * @returns {null}\n     */\n    getClassName() {\n      return this.__className;\n    }\n  },\n\n  defer(statics) {\n    statics.RESERVED_WORDS = {};\n    let str =\n      \"abstract  arguments await  boolean break byte  case  catch char  class  const continue debugger  default delete  do \" +\n      \"double  else  enum eval export extends  false final finally float for function goto  if  implements  import \" +\n      \"in  instanceof  int interface let  long  native  new null  package private protected public  return  short static \" +\n      \"super  switch  synchronized  this throw throws  transient true try typeof  var void volatile  while with  yield\";\n    str.split(/\\s+/).forEach(word => (statics.RESERVED_WORDS[word] = true));\n  },\n\n  statics: {\n    /**\n     * Returns the absolute path to the class file\n     *\n     * @param library  {qx.tool.compiler.app.Library}\n     * @param className {String}\n     * @returns {String}\n     */\n    getSourcePath(library, className) {\n      return pathModule.join(\n        library.getRootDir(),\n        library.getSourcePath(),\n        className.replace(/\\./g, pathModule.sep) +\n          library.getSourceFileExtension(className)\n      );\n    },\n\n    /**\n     * Returns the path to the rewritten class file\n     *\n     * @param analyser {qx.tool.compiler.Analyser}\n     * @param className {String}\n     * @returns {String}\n     */\n    getOutputPath(analyser, className) {\n      var filename = pathModule.join(\n        analyser.getOutputDir(),\n        \"transpiled\",\n        className.replace(/\\./g, pathModule.sep) + \".js\"\n      );\n\n      return filename;\n    },\n\n    /**\n     * Returns the root namespace from the classname, or null if it cannot be determined\n     * @param className\n     * @returns {*|null}\n     */\n    getNamespace(className) {\n      var m = className.match(/^([^.]+)\\./);\n      return (m && m[1]) || null;\n    },\n\n    /**\n     * These options are passed to Babel for JSX compilation; they can be changed by the CLI etc\n     * as needed.\n     *\n     * Note that at the moment they use a class that does not exist!  `qx.html.Jsx` is coming soon\n     * to a PR near you, but in the mean time you could use the compile.json `jsx` setting to\n     * change these to something else, eg `{ pragma: \"jsx.dom\", pragmaFrag: \"jsx.Fragment }` and\n     * use https://github.com/alecsgone/jsx-render in your application's code.\n     */\n    JSX_OPTIONS: {\n      pragma: \"qx.html.Jsx.createElement\",\n      pragmaFrag: \"qx.html.Jsx.FRAGMENT\"\n    },\n\n    /**\n     * Classes which are safe to access from defer methods (in addition to the class being defined)\n     */\n    DEFER_SAFE_SYMBOLS: [\n      \"qx.core.Environment\",\n      \"qx.Bootstrap\",\n      \"qx.core.Aspect\"\n    ],\n\n    /**\n     * List of global symbols to be ignored\n     */\n    QX_GLOBALS: [\n      \"qx.$$domReady\",\n      \"qx.$$environment\",\n      \"qx.$$libraries\",\n      \"qx.$$loader\",\n      \"qx.$$locales\",\n      \"qx.$$namespaceRoot\",\n      \"qx.$$resources\",\n      \"qx.$$packageData\",\n      \"qx.$$start\",\n      \"qx.$$translations\"\n    ],\n\n    COMMON_GLOBALS: [\n      \"Array\",\n      \"ArrayBuffer\",\n      \"Boolean\",\n      \"Date\",\n      \"DataView\",\n      \"EvalError\",\n      \"Error\",\n      \"Float32Array\",\n      \"Float64Array\",\n      \"Function\",\n      \"GeneratorFunction\",\n      \"Generator\",\n      \"Infinity\",\n      \"Int8Array\",\n      \"Int16Array\",\n      \"Int32Array\",\n      \"JSON\",\n      \"Map\",\n      \"Math\",\n      \"NaN\",\n      \"Number\",\n      \"Object\",\n      \"Proxy\",\n      \"Promise\",\n      \"RangeError\",\n      \"ReferenceError\",\n      \"Reflect\",\n      \"RegExp\",\n      \"Set\",\n      \"String\",\n      \"Symbol\",\n      \"SyntaxError\",\n      \"TypedArray\",\n      \"TypeError\",\n      \"Uint8Array\",\n      \"Uint8ClampedArray\",\n      \"Uint16Array\",\n      \"Uint32Array\",\n      \"URIError\",\n      \"WeakMap\",\n      \"WeakSet\",\n      \"arguments\",\n      \"atob\",\n      \"btoa\",\n      \"console\",\n      \"clearInterval\",\n      \"clearTimeout\",\n      \"decodeURI\",\n      \"decodeURIComponent\",\n      \"document\",\n      \"encodeURI\",\n      \"encodeURIComponent\",\n      \"escape\",\n      \"error\",\n      \"eval\",\n      \"isNaN\",\n      \"isFinite\",\n      \"navigator\",\n      \"parseInt\",\n      \"parseFloat\",\n      \"setInterval\",\n      \"setTimeout\",\n      \"undefined\",\n      \"unescape\",\n      \"window\"\n    ],\n\n    BROWSER_GLOBALS: [\n      \"ActiveXObject\",\n      \"Blob\",\n      \"CustomEvent\",\n      \"DOMParser\",\n      \"DOMException\",\n      \"Event\",\n      \"FileReader\",\n      \"FormData\",\n      \"Image\",\n      \"MutationObserver\",\n      \"XPathResult\",\n      \"XMLHttpRequest\",\n      \"XMLSerializer\",\n      \"XPathEvaluator\",\n      \"alert\",\n      \"document\",\n      \"history\",\n      \"location\",\n      \"navigator\",\n      \"performance\",\n      \"getComputedStyle\",\n      \"localStorage\"\n    ],\n\n    NODE_GLOBALS: [\n      \"Module\",\n      \"require\",\n      \"module\",\n      \"process\",\n      \"setImmediate\",\n      \"__dirname\",\n      \"__filename\"\n    ],\n\n    RHINO_GLOBALS: [\"Packages\", \"java\"],\n\n    RESERVED_WORDS: null,\n\n    /**\n     * These are the constants which are answered by Qooxdoo qx.core.Environment; we use out own copy here and\n     * not the one available in qx.core.Environment._defaults because we need to use the version which is appropriate\n     * for the version of Qooxdoo being compiled, not the one that this CLI is compiled with\n     */\n    ENVIRONMENT_CONSTANTS: {\n      // an always-true key (e.g. for use in qx.core.Environment.filter() calls)\n      true: true,\n      // old settings retTrue\n      \"qx.allowUrlSettings\": false,\n      \"qx.allowUrlVariants\": false,\n      \"qx.debug.property.level\": 0,\n      // old variants\n      // make sure to reflect all changes to qx.debug here in the bootstrap class!\n      \"qx.debug\": true,\n      \"qx.debug.ui.queue\": true,\n      \"qx.debug.touchpad.detection\": false,\n      \"qx.aspects\": false,\n      \"qx.dynlocale\": true,\n      \"qx.dyntheme\": true,\n      \"qx.blankpage\": \"qx/static/blank.html\",\n      \"qx.debug.databinding\": false,\n      \"qx.debug.dispose\": false,\n      // generator optimization vectors\n      \"qx.optimization.basecalls\": false,\n      \"qx.optimization.comments\": false,\n      \"qx.optimization.privates\": false,\n      \"qx.optimization.strings\": false,\n      \"qx.optimization.variables\": false,\n      \"qx.optimization.variants\": false,\n      // qooxdoo modules\n      \"module.databinding\": true,\n      \"module.logger\": true,\n      \"module.property\": true,\n      \"module.events\": true,\n      \"qx.nativeScrollBars\": false,\n      \"qx.automaticMemoryManagement\": true,\n      \"qx.promise\": true,\n      \"qx.promise.warnings\": true,\n      \"qx.promise.longStackTraces\": true\n    }\n  }\n});\n"
  ]
}