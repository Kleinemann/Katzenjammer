{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/tool/utils/json/Parser.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "literals",
    "tool",
    "utils",
    "json",
    "Tokenizer",
    "tokenTypes",
    "STRING",
    "NUMBER",
    "TRUE",
    "FALSE",
    "NULL",
    "objectStates",
    "_START_",
    "OPEN_OBJECT",
    "PROPERTY",
    "COMMA",
    "propertyStates",
    "KEY",
    "COLON",
    "arrayStates",
    "OPEN_ARRAY",
    "VALUE",
    "defaultSettings",
    "verbose",
    "source",
    "location",
    "startLine",
    "startColumn",
    "startOffset",
    "endLine",
    "endColumn",
    "endOffset",
    "start",
    "line",
    "column",
    "offset",
    "end",
    "comment",
    "value",
    "name",
    "token",
    "comments",
    "undefined",
    "valueComments",
    "forEach",
    "push",
    "loc",
    "parseObject",
    "input",
    "tokenizer",
    "settings",
    "Parser",
    "startToken",
    "object",
    "type",
    "children",
    "state",
    "hasMore",
    "LEFT_BRACE",
    "tokenIndex",
    "next",
    "RIGHT_BRACE",
    "endToken",
    "property",
    "parseProperty",
    "length",
    "error",
    "unexpectedToken",
    "substring",
    "unexpectedEnd",
    "key",
    "colonToken",
    "parseValue",
    "parseArray",
    "array",
    "LEFT_BRACKET",
    "RIGHT_BRACKET",
    "parseLiteral",
    "isLiteral",
    "indexOf",
    "replace",
    "literal",
    "rawValue",
    "arguments",
    "parseToAst",
    "Object",
    "assign",
    "tokenize",
    "result",
    "parse",
    "message",
    "showCodeFragment",
    "linePosition",
    "columnPosition",
    "lines",
    "split",
    "marker",
    "Array",
    "join",
    "ParseError",
    "fullMessage",
    "rawMessage",
    "SyntaxError"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EAA6C;AAC3CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,CACRP,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAA7B,CAAwCC,MADhC,EAERb,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAA7B,CAAwCE,MAFhC,EAGRd,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAA7B,CAAwCG,IAHhC,EAIRf,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAA7B,CAAwCI,KAJhC,EAKRhB,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAA7B,CAAwCK,IALhC,CADH;AASPC,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE,CADG;AAEZC,QAAAA,WAAW,EAAE,CAFD;AAGZC,QAAAA,QAAQ,EAAE,CAHE;AAIZC,QAAAA,KAAK,EAAE;AAJK,OATP;AAgBPC,MAAAA,cAAc,EAAE;AACdJ,QAAAA,OAAO,EAAE,CADK;AAEdK,QAAAA,GAAG,EAAE,CAFS;AAGdC,QAAAA,KAAK,EAAE;AAHO,OAhBT;AAsBPC,MAAAA,WAAW,EAAE;AACXP,QAAAA,OAAO,EAAE,CADE;AAEXQ,QAAAA,UAAU,EAAE,CAFD;AAGXC,QAAAA,KAAK,EAAE,CAHI;AAIXN,QAAAA,KAAK,EAAE;AAJI,OAtBN;AA6BPO,MAAAA,eAAe,EAAE;AACfC,QAAAA,OAAO,EAAE,IADM;AAEfC,QAAAA,MAAM,EAAE;AAFO,OA7BV;AAkCPC,MAAAA,QAlCO,oBAmCLC,SAnCK,EAoCLC,WApCK,EAqCLC,WArCK,EAsCLC,OAtCK,EAuCLC,SAvCK,EAwCLC,SAxCK,EAyCLP,MAzCK,EA0CL;AACA,eAAO;AACLQ,UAAAA,KAAK,EAAE;AACLC,YAAAA,IAAI,EAAEP,SADD;AAELQ,YAAAA,MAAM,EAAEP,WAFH;AAGLQ,YAAAA,MAAM,EAAEP;AAHH,WADF;AAOLQ,UAAAA,GAAG,EAAE;AACHH,YAAAA,IAAI,EAAEJ,OADH;AAEHK,YAAAA,MAAM,EAAEJ,SAFL;AAGHK,YAAAA,MAAM,EAAEJ;AAHL,WAPA;AAaLP,UAAAA,MAAM,EAAEA,MAAM,IAAI;AAbb,SAAP;AAeD,OA1DM;AA4DPa,MAAAA,OA5DO,mBA4DCC,KA5DD,EA4DQC,IA5DR,EA4DcC,KA5Dd,EA4DqB;AAC1B,YAAIA,KAAK,CAACC,QAAN,KAAmBC,SAAvB,EAAkC;AAChC,cAAIC,aAAa,GAAGL,KAAK,CAACC,IAAD,CAAzB;;AACA,cAAII,aAAa,KAAKD,SAAtB,EAAiC;AAC/BC,YAAAA,aAAa,GAAGL,KAAK,CAACC,IAAD,CAAL,GAAc,EAA9B;AACD;;AACDC,UAAAA,KAAK,CAACC,QAAN,CAAeG,OAAf,CAAuB,UAAUP,OAAV,EAAmB;AACxCM,YAAAA,aAAa,CAACE,IAAd,CAAmB;AACjBC,cAAAA,GAAG,EAAET,OAAO,CAACS,GADI;AAEjBtB,cAAAA,MAAM,EAAEa,OAAO,CAACC;AAFC,aAAnB;AAID,WALD;AAMD;AACF,OAzEM;AA2EPS,MAAAA,WA3EO,uBA2EKC,KA3EL,EA2EYC,SA3EZ,EA2EuBC,QA3EvB,EA2EiC;AACtC,YAAQvC,YAAR,GAAyBlB,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAA5C,CAAQxC,YAAR;AACA,YAAMN,UAAU,GAAGZ,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAAhD,CAFsC,CAItC;;AACA,YAAI+C,UAAJ;AACA,YAAIC,MAAM,GAAG;AACXC,UAAAA,IAAI,EAAE,QADK;AAEXC,UAAAA,QAAQ,EAAE;AAFC,SAAb;AAKA,YAAIC,KAAK,GAAG7C,YAAY,CAACC,OAAzB;;AAEA,eAAOqC,SAAS,CAACQ,OAAV,EAAP,EAA4B;AAC1B,cAAMjB,KAAK,GAAGS,SAAS,CAACT,KAAV,EAAd;;AAEA,kBAAQgB,KAAR;AACE,iBAAK7C,YAAY,CAACC,OAAlB;AAA2B;AACzB,oBAAI4B,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACqD,UAA9B,EAA0C;AACxCN,kBAAAA,UAAU,GAAGZ,KAAb;AACAgB,kBAAAA,KAAK,GAAG7C,YAAY,CAACE,WAArB;;AACA,sBAAIqC,QAAQ,CAAC3B,OAAb,EAAsB;AACpB8B,oBAAAA,MAAM,CAACD,UAAP,GAAoBH,SAAS,CAACU,UAA9B;AACAlE,oBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACEgB,MADF,EAEE,iBAFF,EAGEb,KAHF;AAKD;;AACDS,kBAAAA,SAAS,CAACW,IAAV;AACD,iBAZD,MAYO;AACL,yBAAO,IAAP;AACD;;AACD;AACD;;AAED,iBAAKjD,YAAY,CAACE,WAAlB;AAA+B;AAC7B,oBAAI2B,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACwD,WAA9B,EAA2C;AACzC,sBAAIX,QAAQ,CAAC3B,OAAb,EAAsB;AACpB8B,oBAAAA,MAAM,CAACP,GAAP,GAAarD,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0B1B,QAA1B,CACX2B,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBC,IADV,EAEXmB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBE,MAFV,EAGXkB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBG,MAHV,EAIXK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcH,IAJH,EAKXO,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcF,MALH,EAMXM,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MANH,EAOXe,QAAQ,CAAC1B,MAPE,CAAb;AAUA6B,oBAAAA,MAAM,CAACS,QAAP,GAAkBb,SAAS,CAACU,UAA5B;AACAlE,oBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACEgB,MADF,EAEE,kBAFF,EAGEb,KAHF;AAKD;;AACDS,kBAAAA,SAAS,CAACW,IAAV;AACA,yBAAO;AACLtB,oBAAAA,KAAK,EAAEe;AADF,mBAAP;AAGD;;AACD,oBAAMU,QAAQ,GAAGtE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Ba,aAA1B,CACfhB,KADe,EAEfC,SAFe,EAGfC,QAHe,CAAjB;AAMAG,gBAAAA,MAAM,CAACE,QAAP,CAAgBV,IAAhB,CAAqBkB,QAAQ,CAACzB,KAA9B;AACAkB,gBAAAA,KAAK,GAAG7C,YAAY,CAACG,QAArB;AAEA;AACD;;AAED,iBAAKH,YAAY,CAACG,QAAlB;AAA4B;AAC1B,oBAAI0B,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACwD,WAA9B,EAA2C;AACzC,sBAAIX,QAAQ,CAAC3B,OAAb,EAAsB;AACpB8B,oBAAAA,MAAM,CAACP,GAAP,GAAarD,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0B1B,QAA1B,CACX2B,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBC,IADV,EAEXmB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBE,MAFV,EAGXkB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBG,MAHV,EAIXK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcH,IAJH,EAKXO,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcF,MALH,EAMXM,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MANH,EAOXe,QAAQ,CAAC1B,MAPE,CAAb;AAUA6B,oBAAAA,MAAM,CAACS,QAAP,GAAkBb,SAAS,CAACU,UAA5B;AACAlE,oBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACEgB,MADF,EAEE,kBAFF,EAGEb,KAHF;AAKD;;AACDS,kBAAAA,SAAS,CAACW,IAAV;AACA,yBAAO;AACLtB,oBAAAA,KAAK,EAAEe;AADF,mBAAP;AAGD,iBAvBD,MAuBO,IAAIb,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACU,KAA9B,EAAqC;AAC1CtB,kBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACEgB,MAAM,CAACE,QAAP,CAAgBF,MAAM,CAACE,QAAP,CAAgBU,MAAhB,GAAyB,CAAzC,CADF,EAEE,kBAFF,EAGEzB,KAHF;AAMAgB,kBAAAA,KAAK,GAAG7C,YAAY,CAACI,KAArB;AACAkC,kBAAAA,SAAS,CAACW,IAAV;AACD,iBATM,MASA;AACLnE,kBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BgB,eAA1B,CACEnB,KAAK,CAACoB,SAAN,CAAgB5B,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBG,MAAhC,EAAwCK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MAAtD,CADF,EAEEK,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IAFlB,EAGEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MAHlB,CADF,EAOEc,KAPF,EAQER,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IARlB,EASEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MATlB;AAWD;;AACD;AACD;;AAED,iBAAKvB,YAAY,CAACI,KAAlB;AAAyB;AACvB,oBAAMgD,SAAQ,GAAGtE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Ba,aAA1B,CACfhB,KADe,EAEfC,SAFe,EAGfC,QAHe,CAAjB;;AAMA,oBAAIa,SAAJ,EAAc;AACZV,kBAAAA,MAAM,CAACE,QAAP,CAAgBV,IAAhB,CAAqBkB,SAAQ,CAACzB,KAA9B;AACAkB,kBAAAA,KAAK,GAAG7C,YAAY,CAACG,QAArB;AACD,iBAHD,MAGO;AACLrB,kBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BgB,eAA1B,CACEnB,KAAK,CAACoB,SAAN,CAAgB5B,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBG,MAAhC,EAAwCK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MAAtD,CADF,EAEEK,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IAFlB,EAGEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MAHlB,CADF,EAOEc,KAPF,EAQER,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IARlB,EASEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MATlB;AAWD;;AACD;AACD;AAlIH;AAoID;;AAEDzC,QAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BkB,aAA1B,EADF;AAIA,eAAO,IAAP;AACD,OAtOM;AAwOPL,MAAAA,aAxOO,yBAwOOhB,KAxOP,EAwOcC,SAxOd,EAwOyBC,QAxOzB,EAwOmC;AACxC,oCAAyCzD,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAA5D;AAAA,YAAQxC,YAAR,yBAAQA,YAAR;AAAA,YAAsBK,cAAtB,yBAAsBA,cAAtB;AACA,YAAMX,UAAU,GAAGZ,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAAhD,CAFwC,CAIxC;;AACA,YAAI+C,UAAJ;AACA,YAAIW,QAAQ,GAAG;AACbT,UAAAA,IAAI,EAAE,UADO;AAEbgB,UAAAA,GAAG,EAAE,IAFQ;AAGbhC,UAAAA,KAAK,EAAE;AAHM,SAAf;AAMA,YAAIkB,KAAK,GAAG7C,YAAY,CAACC,OAAzB;;AAEA,eAAOqC,SAAS,CAACQ,OAAV,EAAP,EAA4B;AAC1B,cAAMjB,KAAK,GAAGS,SAAS,CAACT,KAAV,EAAd;;AAEA,kBAAQgB,KAAR;AACE,iBAAKxC,cAAc,CAACJ,OAApB;AAA6B;AAC3B,oBAAI4B,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACC,MAA9B,EAAsC;AACpC,sBAAMgE,GAAG,GAAG;AACVhB,oBAAAA,IAAI,EAAE,YADI;AAEVhB,oBAAAA,KAAK,EAAEE,KAAK,CAACF;AAFH,mBAAZ;;AAKA,sBAAIY,QAAQ,CAAC3B,OAAb,EAAsB;AACpB+C,oBAAAA,GAAG,CAACxB,GAAJ,GAAUN,KAAK,CAACM,GAAhB;AACAiB,oBAAAA,QAAQ,CAACX,UAAT,GACEkB,GAAG,CAAClB,UAAJ,GACAkB,GAAG,CAACR,QAAJ,GACEb,SAAS,CAACU,UAHd;AAIAlE,oBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACEiC,GADF,EAEE,iBAFF,EAGE9B,KAHF;AAKD;;AACDY,kBAAAA,UAAU,GAAGZ,KAAb;AACAuB,kBAAAA,QAAQ,CAACO,GAAT,GAAeA,GAAf;AACAd,kBAAAA,KAAK,GAAGxC,cAAc,CAACC,GAAvB;AACAgC,kBAAAA,SAAS,CAACW,IAAV;AACD,iBAtBD,MAsBO;AACL,yBAAO,IAAP;AACD;;AACD;AACD;;AAED,iBAAK5C,cAAc,CAACC,GAApB;AAAyB;AACvB,oBAAIuB,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACa,KAA9B,EAAqC;AACnC,sBAAIgC,QAAQ,CAAC3B,OAAb,EAAsB;AACpB9B,oBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACE0B,QAAQ,CAACO,GADX,EAEE,kBAFF,EAGE9B,KAHF;AAMAuB,oBAAAA,QAAQ,CAACQ,UAAT,GAAsB/B,KAAtB;AACD;;AACDgB,kBAAAA,KAAK,GAAGxC,cAAc,CAACE,KAAvB;AACA+B,kBAAAA,SAAS,CAACW,IAAV;AACD,iBAZD,MAYO;AACLnE,kBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BgB,eAA1B,CACEnB,KAAK,CAACoB,SAAN,CAAgB5B,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBG,MAAhC,EAAwCK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MAAtD,CADF,EAEEK,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IAFlB,EAGEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MAHlB,CADF,EAOEc,KAPF,EAQER,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IARlB,EASEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MATlB;AAWD;;AACD;AACD;;AAED,iBAAKlB,cAAc,CAACE,KAApB;AAA2B;AACzB,oBAAMoB,KAAK,GAAG7C,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BqB,UAA1B,CACZxB,KADY,EAEZC,SAFY,EAGZC,QAHY,CAAd;AAMAa,gBAAAA,QAAQ,CAACzB,KAAT,GAAiBA,KAAK,CAACA,KAAvB;;AACA,oBAAIY,QAAQ,CAAC3B,OAAb,EAAsB;AACpBwC,kBAAAA,QAAQ,CAACD,QAAT,GAAoBxB,KAAK,CAACA,KAAN,CAAYwB,QAAhC;AACAC,kBAAAA,QAAQ,CAACjB,GAAT,GAAerD,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0B1B,QAA1B,CACb2B,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBC,IADR,EAEbmB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBE,MAFR,EAGbkB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBG,MAHR,EAIbG,KAAK,CAACA,KAAN,CAAYQ,GAAZ,CAAgBV,GAAhB,CAAoBH,IAJP,EAKbK,KAAK,CAACA,KAAN,CAAYQ,GAAZ,CAAgBV,GAAhB,CAAoBF,MALP,EAMbI,KAAK,CAACA,KAAN,CAAYQ,GAAZ,CAAgBV,GAAhB,CAAoBD,MANP,EAObe,QAAQ,CAAC1B,MAPI,CAAf;AASD;;AACD,uBAAO;AACLc,kBAAAA,KAAK,EAAEyB;AADF,iBAAP;AAGD;AAlFH;AAoFD;;AAED,eAAO,IAAP;AACD,OAhVM;AAkVPU,MAAAA,UAlVO,sBAkVIzB,KAlVJ,EAkVWC,SAlVX,EAkVsBC,QAlVtB,EAkVgC;AACrC,YAAQ/B,WAAR,GAAwB1B,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAA3C,CAAQhC,WAAR;AACA,YAAMd,UAAU,GAAGZ,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAAhD,CAFqC,CAIrC;;AACA,YAAI+C,UAAJ;AACA,YAAIsB,KAAK,GAAG;AACVpB,UAAAA,IAAI,EAAE,OADI;AAEVC,UAAAA,QAAQ,EAAE;AAFA,SAAZ;AAKA,YAAIC,KAAK,GAAGrC,WAAW,CAACP,OAAxB;AACA,YAAI4B,KAAJ;;AAEA,eAAOS,SAAS,CAACQ,OAAV,EAAP,EAA4B;AAC1BjB,UAAAA,KAAK,GAAGS,SAAS,CAACT,KAAV,EAAR;;AAEA,kBAAQgB,KAAR;AACE,iBAAKrC,WAAW,CAACP,OAAjB;AAA0B;AACxB,oBAAI4B,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACsE,YAA9B,EAA4C;AAC1CvB,kBAAAA,UAAU,GAAGZ,KAAb;;AACA,sBAAIU,QAAQ,CAAC3B,OAAb,EAAsB;AACpBmD,oBAAAA,KAAK,CAACtB,UAAN,GAAmBH,SAAS,CAACU,UAA7B;AACAlE,oBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACEqC,KADF,EAEE,iBAFF,EAGElC,KAHF;AAKD;;AACDgB,kBAAAA,KAAK,GAAGrC,WAAW,CAACC,UAApB;AACA6B,kBAAAA,SAAS,CAACW,IAAV;AACD,iBAZD,MAYO;AACL,yBAAO,IAAP;AACD;;AACD;AACD;;AAED,iBAAKzC,WAAW,CAACC,UAAjB;AAA6B;AAC3B,oBAAIoB,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACuE,aAA9B,EAA6C;AAC3C,sBAAI1B,QAAQ,CAAC3B,OAAb,EAAsB;AACpBmD,oBAAAA,KAAK,CAAC5B,GAAN,GAAYrD,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0B1B,QAA1B,CACV2B,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBC,IADX,EAEVmB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBE,MAFX,EAGVkB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBG,MAHX,EAIVK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcH,IAJJ,EAKVO,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcF,MALJ,EAMVM,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MANJ,EAOVe,QAAQ,CAAC1B,MAPC,CAAZ;AAUAkD,oBAAAA,KAAK,CAACZ,QAAN,GAAiBb,SAAS,CAACU,UAA3B;AACAlE,oBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACEqC,KADF,EAEE,kBAFF,EAGElC,KAHF;AAKD;;AACDS,kBAAAA,SAAS,CAACW,IAAV;AACA,yBAAO;AACLtB,oBAAAA,KAAK,EAAEoC;AADF,mBAAP;AAGD;;AACD,oBAAIpC,KAAK,GAAG7C,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BqB,UAA1B,CACVxB,KADU,EAEVC,SAFU,EAGVC,QAHU,CAAZ;AAMAwB,gBAAAA,KAAK,CAACnB,QAAN,CAAeV,IAAf,CAAoBP,KAAK,CAACA,KAA1B;AACAkB,gBAAAA,KAAK,GAAGrC,WAAW,CAACE,KAApB;AAEA;AACD;;AAED,iBAAKF,WAAW,CAACE,KAAjB;AAAwB;AACtB,oBAAImB,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACuE,aAA9B,EAA6C;AAC3C,sBAAI1B,QAAQ,CAAC3B,OAAb,EAAsB;AACpBmD,oBAAAA,KAAK,CAAC5B,GAAN,GAAYrD,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0B1B,QAA1B,CACV2B,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBC,IADX,EAEVmB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBE,MAFX,EAGVkB,UAAU,CAACN,GAAX,CAAed,KAAf,CAAqBG,MAHX,EAIVK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcH,IAJJ,EAKVO,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcF,MALJ,EAMVM,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MANJ,EAOVe,QAAQ,CAAC1B,MAPC,CAAZ;AAUAkD,oBAAAA,KAAK,CAACZ,QAAN,GAAiBb,SAAS,CAACU,UAA3B;AACAlE,oBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CACEqC,KADF,EAEE,kBAFF,EAGElC,KAHF;AAKD;;AACDS,kBAAAA,SAAS,CAACW,IAAV;AACA,yBAAO;AACLtB,oBAAAA,KAAK,EAAEoC;AADF,mBAAP;AAGD,iBAvBD,MAuBO,IAAIlC,KAAK,CAACc,IAAN,KAAejD,UAAU,CAACU,KAA9B,EAAqC;AAC1CyC,kBAAAA,KAAK,GAAGrC,WAAW,CAACJ,KAApB;AACAkC,kBAAAA,SAAS,CAACW,IAAV;AACD,iBAHM,MAGA;AACLnE,kBAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BgB,eAA1B,CACEnB,KAAK,CAACoB,SAAN,CAAgB5B,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBG,MAAhC,EAAwCK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MAAtD,CADF,EAEEK,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IAFlB,EAGEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MAHlB,CADF,EAOEc,KAPF,EAQER,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IARlB,EASEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MATlB;AAWD;;AACD;AACD;;AAED,iBAAKf,WAAW,CAACJ,KAAjB;AAAwB;AACtB,oBAAIuB,MAAK,GAAG7C,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BqB,UAA1B,CACVxB,KADU,EAEVC,SAFU,EAGVC,QAHU,CAAZ;;AAMAwB,gBAAAA,KAAK,CAACnB,QAAN,CAAeV,IAAf,CAAoBP,MAAK,CAACA,KAA1B;AACAkB,gBAAAA,KAAK,GAAGrC,WAAW,CAACE,KAApB;AACA;AACD;AA9GH;AAgHD;;AAED5B,QAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BkB,aAA1B,EADF;AAIA,eAAO,IAAP;AACD,OA1dM;AA4dPQ,MAAAA,YA5dO,wBA4dM7B,KA5dN,EA4daC,SA5db,EA4dwBC,QA5dxB,EA4dkC;AACvC;AACA,YAAMV,KAAK,GAAGS,SAAS,CAACT,KAAV,EAAd;AAEA,YAAMsC,SAAS,GACbrF,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BnD,QAA1B,CAAmC+E,OAAnC,CAA2CvC,KAAK,CAACc,IAAjD,MAA2D,CAAC,CAD9D;;AAGA,YAAIwB,SAAJ,EAAe;AACb,cAAIxC,KAAK,GAAGE,KAAK,CAACF,KAAlB;;AACA,cAAIE,KAAK,CAACc,IAAN,IAAc7D,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAnB,CAA6BC,UAA7B,CAAwCC,MAA1D,EAAkE;AAChEgC,YAAAA,KAAK,GAAGA,KAAK,CAAC0C,OAAN,CAAc,QAAd,EAAwB,IAAxB,CAAR;AACD;;AACD,cAAMC,OAAO,GAAG;AACd3B,YAAAA,IAAI,EAAE,SADQ;AAEdhB,YAAAA,KAAK,EAAEA,KAFO;AAGd4C,YAAAA,QAAQ,EAAElC,KAAK,CAACoB,SAAN,CACR5B,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBG,MADR,EAERK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MAFN;AAHI,WAAhB;;AASA,cAAIe,QAAQ,CAAC3B,OAAb,EAAsB;AACpB0D,YAAAA,OAAO,CAACnC,GAAR,GAAcN,KAAK,CAACM,GAApB;AACAmC,YAAAA,OAAO,CAAC7B,UAAR,GAAqB6B,OAAO,CAACnB,QAAR,GAAmBb,SAAS,CAACU,UAAlD;AACAlE,YAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Bd,OAA1B,CAAkC4C,OAAlC,EAA2C,iBAA3C,EAA8DzC,KAA9D;AACD;;AACDS,UAAAA,SAAS,CAACW,IAAV;AACA,iBAAO;AACLtB,YAAAA,KAAK,EAAE2C;AADF,WAAP;AAGD;;AAED,eAAO,IAAP;AACD,OA7fM;AA+fPT,MAAAA,UA/fO,sBA+fIxB,KA/fJ,EA+fWC,SA/fX,EA+fsBC,QA/ftB,EA+fgC;AAAA;;AACrC;AACA,YAAMV,KAAK,GAAGS,SAAS,CAACT,KAAV,EAAd;;AAEA,YAAMF,KAAK,GACT,0BAAA7C,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,EAA0B0B,YAA1B,+BAA0CM,SAA1C,KACA,0BAAA1F,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,EAA0BJ,WAA1B,+BAAyCoC,SAAzC,CADA,IAEA,0BAAA1F,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,EAA0BsB,UAA1B,+BAAwCU,SAAxC,CAHF;;AAKA,YAAI7C,KAAJ,EAAW;AACT,iBAAOA,KAAP;AACD;;AACD7C,QAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BgB,eAA1B,CACEnB,KAAK,CAACoB,SAAN,CAAgB5B,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBG,MAAhC,EAAwCK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MAAtD,CADF,EAEEK,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IAFlB,EAGEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MAHlB,CADF,EAOEc,KAPF,EAQER,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IARlB,EASEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MATlB;AAYA,eAAO,IAAP;AACD,OAxhBM;AA0hBPkD,MAAAA,UA1hBO,sBA0hBIpC,KA1hBJ,EA0hBWE,QA1hBX,EA0hBqB;AAC1BA,QAAAA,QAAQ,GAAGmC,MAAM,CAACC,MAAP,CACT,EADS,EAET7F,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0B7B,eAFjB,EAGT4B,QAHS,CAAX;AAMA,YAAMD,SAAS,GAAG,IAAIxD,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBC,SAAvB,CAAiC4C,KAAjC,EAAwCE,QAAxC,CAAlB;AACAD,QAAAA,SAAS,CAACsC,QAAV;;AAEA,YAAI,CAACtC,SAAS,CAACQ,OAAV,EAAL,EAA0B;AACxBhE,UAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BkB,aAA1B,EADF;AAGD;;AAED,YAAM/B,KAAK,GAAG7C,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BqB,UAA1B,CACZxB,KADY,EAEZC,SAFY,EAGZC,QAHY,CAAd;;AAMA,YAAI,CAACD,SAAS,CAACQ,OAAV,EAAL,EAA0B;AACxB,cAAI+B,MAAM,GAAGlD,KAAK,CAACA,KAAnB;;AACA,cAAIY,QAAQ,CAAC3B,OAAb,EAAsB;AACpBiE,YAAAA,MAAM,CAACvC,SAAP,GAAmBA,SAAnB;AACD;;AACD,iBAAOuC,MAAP;AACD;;AACD,YAAMhD,KAAK,GAAGS,SAAS,CAACW,IAAV,EAAd;AACAnE,QAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0Be,KAA1B,CACEzE,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BgB,eAA1B,CACEnB,KAAK,CAACoB,SAAN,CAAgB5B,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBG,MAAhC,EAAwCK,KAAK,CAACM,GAAN,CAAUV,GAAV,CAAcD,MAAtD,CADF,EAEEK,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IAFlB,EAGEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MAHlB,CADF,EAOEc,KAPF,EAQER,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBC,IARlB,EASEO,KAAK,CAACM,GAAN,CAAUd,KAAV,CAAgBE,MATlB;AAYA,eAAO,IAAP;AACD,OArkBM;AAukBPuD,MAAAA,KAvkBO,iBAukBDzC,KAvkBC,EAukBME,QAvkBN,EAukBgB;AACrB,eAAOzD,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BiC,UAA1B,CAAqCpC,KAArC,EAA4CE,QAA5C,CAAP;AACD,OAzkBM;AA2kBPmB,MAAAA,aA3kBO,2BA2kBS;AACd,eAAO,8BAAP;AACD,OA7kBM;AA+kBPF,MAAAA,eA/kBO,2BA+kBS3B,KA/kBT,EA+kBgBP,IA/kBhB,EA+kBsBC,MA/kBtB,EA+kB8B;AACnC,2CAA4BM,KAA5B,kBAAyCP,IAAzC,cAAiDC,MAAjD;AACD,OAjlBM;AAmlBPgC,MAAAA,KAnlBO,iBAmlBDwB,OAnlBC,EAmlBQlE,MAnlBR,EAmlBgBS,IAnlBhB,EAmlBsBC,MAnlBtB,EAmlB8B;AACnC,iBAASyD,gBAAT,CAA0BnE,MAA1B,EAAkCoE,YAAlC,EAAgDC,cAAhD,EAAgE;AAC9D,cAAMC,KAAK,GAAGtE,MAAM,CAACuE,KAAP,CAAa,aAAb,CAAd;AACA,cAAM9D,IAAI,GAAG6D,KAAK,CAACF,YAAY,GAAG,CAAhB,CAAlB;AACA,cAAMI,MAAM,GAAG,IAAIC,KAAJ,CAAUJ,cAAV,EAA0BK,IAA1B,CAA+B,GAA/B,IAAsC,GAArD;AAEA,iBAAOjE,IAAI,GAAG,IAAP,GAAc+D,MAArB;AACD;;AAPkC,YAS7BG,UAT6B;AAAA;;AAAA;;AAAA;;AAUjC,8BAAYT,OAAZ,EAAqBlE,MAArB,EAA6BoE,YAA7B,EAA2CC,cAA3C,EAA2D;AAAA;;AAAA;;AACzD,gBAAMO,WAAW,GAAGR,YAAY,GAC5BF,OAAO,GACP,IADA,GAEAC,gBAAgB,CAACnE,MAAD,EAASoE,YAAT,EAAuBC,cAAvB,CAHY,GAI5BH,OAJJ;AAKA,sCAAMU,WAAN;AACA,kBAAKC,UAAL,GAAkBX,OAAlB;AAPyD;AAQ1D;;AAlBgC;AAAA,yCASVY,WATU;;AAqBnC,cAAM,IAAIH,UAAJ,CAAeT,OAAf,EAAwBlE,MAAxB,EAAgCS,IAAhC,EAAsCC,MAAtC,CAAN;AACD;AAzmBM;AADkC,GAA7C;AA5BAzC,EAAAA,EAAE,CAACQ,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmBgD,MAAnB,CAA0BvD,aAA1B,GAA0CA,aAA1C",
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2019 Zenesis Limited, http://www.zenesis.com\n *      Vlad Trushin <monospectr@mail.ru> (https://github.com/vtrushin)\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *      * Vlad Trushin (monospectr@mail.ru, @vtrushin)\n *\n * *********************************************************************** */\n\n/**\n * Parser, based on json-to-ast by Vlad trushin\n */\n\nqx.Class.define(\"qx.tool.utils.json.Parser\", {\n  statics: {\n    literals: [\n      qx.tool.utils.json.Tokenizer.tokenTypes.STRING,\n      qx.tool.utils.json.Tokenizer.tokenTypes.NUMBER,\n      qx.tool.utils.json.Tokenizer.tokenTypes.TRUE,\n      qx.tool.utils.json.Tokenizer.tokenTypes.FALSE,\n      qx.tool.utils.json.Tokenizer.tokenTypes.NULL\n    ],\n\n    objectStates: {\n      _START_: 0,\n      OPEN_OBJECT: 1,\n      PROPERTY: 2,\n      COMMA: 3\n    },\n\n    propertyStates: {\n      _START_: 0,\n      KEY: 1,\n      COLON: 2\n    },\n\n    arrayStates: {\n      _START_: 0,\n      OPEN_ARRAY: 1,\n      VALUE: 2,\n      COMMA: 3\n    },\n\n    defaultSettings: {\n      verbose: true,\n      source: null\n    },\n\n    location(\n      startLine,\n      startColumn,\n      startOffset,\n      endLine,\n      endColumn,\n      endOffset,\n      source\n    ) {\n      return {\n        start: {\n          line: startLine,\n          column: startColumn,\n          offset: startOffset\n        },\n\n        end: {\n          line: endLine,\n          column: endColumn,\n          offset: endOffset\n        },\n\n        source: source || null\n      };\n    },\n\n    comment(value, name, token) {\n      if (token.comments !== undefined) {\n        var valueComments = value[name];\n        if (valueComments === undefined) {\n          valueComments = value[name] = [];\n        }\n        token.comments.forEach(function (comment) {\n          valueComments.push({\n            loc: comment.loc,\n            source: comment.value\n          });\n        });\n      }\n    },\n\n    parseObject(input, tokenizer, settings) {\n      const { objectStates } = qx.tool.utils.json.Parser;\n      const tokenTypes = qx.tool.utils.json.Tokenizer.tokenTypes;\n\n      // object: LEFT_BRACE (property (COMMA property)*)? RIGHT_BRACE\n      let startToken;\n      let object = {\n        type: \"object\",\n        children: []\n      };\n\n      let state = objectStates._START_;\n\n      while (tokenizer.hasMore()) {\n        const token = tokenizer.token();\n\n        switch (state) {\n          case objectStates._START_: {\n            if (token.type === tokenTypes.LEFT_BRACE) {\n              startToken = token;\n              state = objectStates.OPEN_OBJECT;\n              if (settings.verbose) {\n                object.startToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  object,\n                  \"leadingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n            } else {\n              return null;\n            }\n            break;\n          }\n\n          case objectStates.OPEN_OBJECT: {\n            if (token.type === tokenTypes.RIGHT_BRACE) {\n              if (settings.verbose) {\n                object.loc = qx.tool.utils.json.Parser.location(\n                  startToken.loc.start.line,\n                  startToken.loc.start.column,\n                  startToken.loc.start.offset,\n                  token.loc.end.line,\n                  token.loc.end.column,\n                  token.loc.end.offset,\n                  settings.source\n                );\n\n                object.endToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  object,\n                  \"trailingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n              return {\n                value: object\n              };\n            }\n            const property = qx.tool.utils.json.Parser.parseProperty(\n              input,\n              tokenizer,\n              settings\n            );\n\n            object.children.push(property.value);\n            state = objectStates.PROPERTY;\n\n            break;\n          }\n\n          case objectStates.PROPERTY: {\n            if (token.type === tokenTypes.RIGHT_BRACE) {\n              if (settings.verbose) {\n                object.loc = qx.tool.utils.json.Parser.location(\n                  startToken.loc.start.line,\n                  startToken.loc.start.column,\n                  startToken.loc.start.offset,\n                  token.loc.end.line,\n                  token.loc.end.column,\n                  token.loc.end.offset,\n                  settings.source\n                );\n\n                object.endToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  object,\n                  \"trailingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n              return {\n                value: object\n              };\n            } else if (token.type === tokenTypes.COMMA) {\n              qx.tool.utils.json.Parser.comment(\n                object.children[object.children.length - 1],\n                \"trailingComments\",\n                token\n              );\n\n              state = objectStates.COMMA;\n              tokenizer.next();\n            } else {\n              qx.tool.utils.json.Parser.error(\n                qx.tool.utils.json.Parser.unexpectedToken(\n                  input.substring(token.loc.start.offset, token.loc.end.offset),\n                  token.loc.start.line,\n                  token.loc.start.column\n                ),\n\n                input,\n                token.loc.start.line,\n                token.loc.start.column\n              );\n            }\n            break;\n          }\n\n          case objectStates.COMMA: {\n            const property = qx.tool.utils.json.Parser.parseProperty(\n              input,\n              tokenizer,\n              settings\n            );\n\n            if (property) {\n              object.children.push(property.value);\n              state = objectStates.PROPERTY;\n            } else {\n              qx.tool.utils.json.Parser.error(\n                qx.tool.utils.json.Parser.unexpectedToken(\n                  input.substring(token.loc.start.offset, token.loc.end.offset),\n                  token.loc.start.line,\n                  token.loc.start.column\n                ),\n\n                input,\n                token.loc.start.line,\n                token.loc.start.column\n              );\n            }\n            break;\n          }\n        }\n      }\n\n      qx.tool.utils.json.Parser.error(\n        qx.tool.utils.json.Parser.unexpectedEnd()\n      );\n\n      return null;\n    },\n\n    parseProperty(input, tokenizer, settings) {\n      const { objectStates, propertyStates } = qx.tool.utils.json.Parser;\n      const tokenTypes = qx.tool.utils.json.Tokenizer.tokenTypes;\n\n      // property: STRING COLON value\n      let startToken;\n      let property = {\n        type: \"property\",\n        key: null,\n        value: null\n      };\n\n      let state = objectStates._START_;\n\n      while (tokenizer.hasMore()) {\n        const token = tokenizer.token();\n\n        switch (state) {\n          case propertyStates._START_: {\n            if (token.type === tokenTypes.STRING) {\n              const key = {\n                type: \"identifier\",\n                value: token.value\n              };\n\n              if (settings.verbose) {\n                key.loc = token.loc;\n                property.startToken =\n                  key.startToken =\n                  key.endToken =\n                    tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  key,\n                  \"leadingComments\",\n                  token\n                );\n              }\n              startToken = token;\n              property.key = key;\n              state = propertyStates.KEY;\n              tokenizer.next();\n            } else {\n              return null;\n            }\n            break;\n          }\n\n          case propertyStates.KEY: {\n            if (token.type === tokenTypes.COLON) {\n              if (settings.verbose) {\n                qx.tool.utils.json.Parser.comment(\n                  property.key,\n                  \"trailingComments\",\n                  token\n                );\n\n                property.colonToken = token;\n              }\n              state = propertyStates.COLON;\n              tokenizer.next();\n            } else {\n              qx.tool.utils.json.Parser.error(\n                qx.tool.utils.json.Parser.unexpectedToken(\n                  input.substring(token.loc.start.offset, token.loc.end.offset),\n                  token.loc.start.line,\n                  token.loc.start.column\n                ),\n\n                input,\n                token.loc.start.line,\n                token.loc.start.column\n              );\n            }\n            break;\n          }\n\n          case propertyStates.COLON: {\n            const value = qx.tool.utils.json.Parser.parseValue(\n              input,\n              tokenizer,\n              settings\n            );\n\n            property.value = value.value;\n            if (settings.verbose) {\n              property.endToken = value.value.endToken;\n              property.loc = qx.tool.utils.json.Parser.location(\n                startToken.loc.start.line,\n                startToken.loc.start.column,\n                startToken.loc.start.offset,\n                value.value.loc.end.line,\n                value.value.loc.end.column,\n                value.value.loc.end.offset,\n                settings.source\n              );\n            }\n            return {\n              value: property\n            };\n          }\n        }\n      }\n\n      return null;\n    },\n\n    parseArray(input, tokenizer, settings) {\n      const { arrayStates } = qx.tool.utils.json.Parser;\n      const tokenTypes = qx.tool.utils.json.Tokenizer.tokenTypes;\n\n      // array: LEFT_BRACKET (value (COMMA value)*)? RIGHT_BRACKET\n      let startToken;\n      let array = {\n        type: \"array\",\n        children: []\n      };\n\n      let state = arrayStates._START_;\n      let token;\n\n      while (tokenizer.hasMore()) {\n        token = tokenizer.token();\n\n        switch (state) {\n          case arrayStates._START_: {\n            if (token.type === tokenTypes.LEFT_BRACKET) {\n              startToken = token;\n              if (settings.verbose) {\n                array.startToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  array,\n                  \"leadingComments\",\n                  token\n                );\n              }\n              state = arrayStates.OPEN_ARRAY;\n              tokenizer.next();\n            } else {\n              return null;\n            }\n            break;\n          }\n\n          case arrayStates.OPEN_ARRAY: {\n            if (token.type === tokenTypes.RIGHT_BRACKET) {\n              if (settings.verbose) {\n                array.loc = qx.tool.utils.json.Parser.location(\n                  startToken.loc.start.line,\n                  startToken.loc.start.column,\n                  startToken.loc.start.offset,\n                  token.loc.end.line,\n                  token.loc.end.column,\n                  token.loc.end.offset,\n                  settings.source\n                );\n\n                array.endToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  array,\n                  \"trailingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n              return {\n                value: array\n              };\n            }\n            let value = qx.tool.utils.json.Parser.parseValue(\n              input,\n              tokenizer,\n              settings\n            );\n\n            array.children.push(value.value);\n            state = arrayStates.VALUE;\n\n            break;\n          }\n\n          case arrayStates.VALUE: {\n            if (token.type === tokenTypes.RIGHT_BRACKET) {\n              if (settings.verbose) {\n                array.loc = qx.tool.utils.json.Parser.location(\n                  startToken.loc.start.line,\n                  startToken.loc.start.column,\n                  startToken.loc.start.offset,\n                  token.loc.end.line,\n                  token.loc.end.column,\n                  token.loc.end.offset,\n                  settings.source\n                );\n\n                array.endToken = tokenizer.tokenIndex;\n                qx.tool.utils.json.Parser.comment(\n                  array,\n                  \"trailingComments\",\n                  token\n                );\n              }\n              tokenizer.next();\n              return {\n                value: array\n              };\n            } else if (token.type === tokenTypes.COMMA) {\n              state = arrayStates.COMMA;\n              tokenizer.next();\n            } else {\n              qx.tool.utils.json.Parser.error(\n                qx.tool.utils.json.Parser.unexpectedToken(\n                  input.substring(token.loc.start.offset, token.loc.end.offset),\n                  token.loc.start.line,\n                  token.loc.start.column\n                ),\n\n                input,\n                token.loc.start.line,\n                token.loc.start.column\n              );\n            }\n            break;\n          }\n\n          case arrayStates.COMMA: {\n            let value = qx.tool.utils.json.Parser.parseValue(\n              input,\n              tokenizer,\n              settings\n            );\n\n            array.children.push(value.value);\n            state = arrayStates.VALUE;\n            break;\n          }\n        }\n      }\n\n      qx.tool.utils.json.Parser.error(\n        qx.tool.utils.json.Parser.unexpectedEnd()\n      );\n\n      return null;\n    },\n\n    parseLiteral(input, tokenizer, settings) {\n      // literal: STRING | NUMBER | TRUE | FALSE | NULL\n      const token = tokenizer.token();\n\n      const isLiteral =\n        qx.tool.utils.json.Parser.literals.indexOf(token.type) !== -1;\n\n      if (isLiteral) {\n        let value = token.value;\n        if (token.type == qx.tool.utils.json.Tokenizer.tokenTypes.STRING) {\n          value = value.replace(/\\\\(.)/g, \"$1\");\n        }\n        const literal = {\n          type: \"literal\",\n          value: value,\n          rawValue: input.substring(\n            token.loc.start.offset,\n            token.loc.end.offset\n          )\n        };\n\n        if (settings.verbose) {\n          literal.loc = token.loc;\n          literal.startToken = literal.endToken = tokenizer.tokenIndex;\n          qx.tool.utils.json.Parser.comment(literal, \"leadingComments\", token);\n        }\n        tokenizer.next();\n        return {\n          value: literal\n        };\n      }\n\n      return null;\n    },\n\n    parseValue(input, tokenizer, settings) {\n      // value: literal | object | array\n      const token = tokenizer.token();\n\n      const value =\n        qx.tool.utils.json.Parser.parseLiteral(...arguments) ||\n        qx.tool.utils.json.Parser.parseObject(...arguments) ||\n        qx.tool.utils.json.Parser.parseArray(...arguments);\n\n      if (value) {\n        return value;\n      }\n      qx.tool.utils.json.Parser.error(\n        qx.tool.utils.json.Parser.unexpectedToken(\n          input.substring(token.loc.start.offset, token.loc.end.offset),\n          token.loc.start.line,\n          token.loc.start.column\n        ),\n\n        input,\n        token.loc.start.line,\n        token.loc.start.column\n      );\n\n      return null;\n    },\n\n    parseToAst(input, settings) {\n      settings = Object.assign(\n        {},\n        qx.tool.utils.json.Parser.defaultSettings,\n        settings\n      );\n\n      const tokenizer = new qx.tool.utils.json.Tokenizer(input, settings);\n      tokenizer.tokenize();\n\n      if (!tokenizer.hasMore()) {\n        qx.tool.utils.json.Parser.error(\n          qx.tool.utils.json.Parser.unexpectedEnd()\n        );\n      }\n\n      const value = qx.tool.utils.json.Parser.parseValue(\n        input,\n        tokenizer,\n        settings\n      );\n\n      if (!tokenizer.hasMore()) {\n        var result = value.value;\n        if (settings.verbose) {\n          result.tokenizer = tokenizer;\n        }\n        return result;\n      }\n      const token = tokenizer.next();\n      qx.tool.utils.json.Parser.error(\n        qx.tool.utils.json.Parser.unexpectedToken(\n          input.substring(token.loc.start.offset, token.loc.end.offset),\n          token.loc.start.line,\n          token.loc.start.column\n        ),\n\n        input,\n        token.loc.start.line,\n        token.loc.start.column\n      );\n\n      return null;\n    },\n\n    parse(input, settings) {\n      return qx.tool.utils.json.Parser.parseToAst(input, settings);\n    },\n\n    unexpectedEnd() {\n      return \"Unexpected end of JSON input\";\n    },\n\n    unexpectedToken(token, line, column) {\n      return `Unexpected token <${token}> at ${line}:${column}`;\n    },\n\n    error(message, source, line, column) {\n      function showCodeFragment(source, linePosition, columnPosition) {\n        const lines = source.split(/\\n|\\r\\n?|\\f/);\n        const line = lines[linePosition - 1];\n        const marker = new Array(columnPosition).join(\" \") + \"^\";\n\n        return line + \"\\n\" + marker;\n      }\n\n      class ParseError extends SyntaxError {\n        constructor(message, source, linePosition, columnPosition) {\n          const fullMessage = linePosition\n            ? message +\n              \"\\n\" +\n              showCodeFragment(source, linePosition, columnPosition)\n            : message;\n          super(fullMessage);\n          this.rawMessage = message;\n        }\n      }\n\n      throw new ParseError(message, source, line, column);\n    }\n  }\n});\n"
  ]
}