{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/tool/utils/Promisify.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "require",
    "promisify",
    "nodePromisify",
    "PromisePool",
    "Class",
    "define",
    "statics",
    "MAGIC_KEY",
    "IGNORED_PROPS",
    "promisifyAll",
    "target",
    "fn",
    "Object",
    "getOwnPropertyNames",
    "forEach",
    "key",
    "test",
    "isPromisified",
    "promisifiedKey",
    "defineProperty",
    "value",
    "configurable",
    "enumerable",
    "writable",
    "e",
    "context",
    "bind",
    "poolEachOf",
    "arr",
    "size",
    "index",
    "pool",
    "length",
    "item",
    "start",
    "map",
    "Promise",
    "all",
    "some",
    "resolve",
    "reject",
    "count",
    "then",
    "result",
    "someEach",
    "next",
    "somePool",
    "call",
    "err",
    "args",
    "callback",
    "promise",
    "cb",
    "fs",
    "each",
    "coll",
    "tool",
    "utils",
    "Promisify",
    "eachOf",
    "forEachOf",
    "promises",
    "keys",
    "eachSeries",
    "eachOfSeries",
    "forEachOfSeries",
    "defer"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n *\n *    qooxdoo-compiler - node.js based replacement for the Qooxdoo python\n *    toolchain\n *\n *    https://github.com/qooxdoo/qooxdoo\n *\n *    Copyright:\n *      2011-2017 Zenesis Limited, http://www.zenesis.com\n *\n *    License:\n *      MIT: https://opensource.org/licenses/MIT\n *\n *      This software is provided under the same licensing terms as Qooxdoo,\n *      please see the LICENSE file in the Qooxdoo project's top-level directory\n *      for details.\n *\n *    Authors:\n *      * John Spackman (john.spackman@zenesis.com, @johnspackman)\n *\n * *********************************************************************** */\n\nconst { promisify } = require(\"util\");\nconst nodePromisify = promisify;\nconst PromisePool = require(\"es6-promise-pool\");\n\nqx.Class.define(\"qx.tool.utils.Promisify\", {\n  statics: {\n    MAGIC_KEY: \"__isPromisified__\",\n    IGNORED_PROPS:\n      /^(?:promises|length|name|arguments|caller|callee|prototype|__isPromisified__)$/,\n\n    promisifyAll(target, fn) {\n      Object.getOwnPropertyNames(target).forEach(key => {\n        if (this.IGNORED_PROPS.test(key) || (fn && fn(key, target) === false)) {\n          return;\n        }\n        if (typeof target[key] !== \"function\") {\n          return;\n        }\n        if (this.isPromisified(target[key])) {\n          return;\n        }\n\n        var promisifiedKey = key + \"Async\";\n\n        target[promisifiedKey] = this.promisify(target[key]);\n\n        [key, promisifiedKey].forEach(key => {\n          Object.defineProperty(target[key], this.MAGIC_KEY, {\n            value: true,\n            configurable: true,\n            enumerable: false,\n            writable: true\n          });\n        });\n      });\n\n      return target;\n    },\n\n    isPromisified(fn) {\n      try {\n        return fn[this.MAGIC_KEY] === true;\n      } catch (e) {\n        return false;\n      }\n    },\n\n    promisify(fn, context) {\n      fn = nodePromisify(fn);\n      if (context) {\n        fn = fn.bind(context);\n      }\n      return fn;\n    },\n\n    async poolEachOf(arr, size, fn) {\n      let index = 0;\n      let pool = new PromisePool(() => {\n        if (index >= arr.length) {\n          return null;\n        }\n        let item = arr[index++];\n        return fn(item);\n      }, 10);\n      await pool.start();\n    },\n\n    async map(arr, fn) {\n      return await qx.Promise.all(arr.map(fn));\n    },\n\n    async some(arr, fn) {\n      return await new qx.Promise((resolve, reject) => {\n        let count = 0;\n        arr.forEach((...args) => {\n          qx.Promise.resolve(fn(...args)).then(result => {\n            count++;\n            if (result && resolve) {\n              resolve(true);\n              resolve = null;\n            }\n            if (count == arr.length && resolve) {\n              resolve(false);\n            }\n            return null;\n          });\n        });\n      });\n    },\n\n    async someEach(arr, fn) {\n      let index = 0;\n      const next = () => {\n        if (index >= arr.length) {\n          return qx.Promise.resolve(false);\n        }\n        let item = arr[index++];\n        return qx.Promise.resolve(fn(item)).then(result => {\n          if (result) {\n            return true;\n          }\n          return next();\n        });\n      };\n      return await next();\n    },\n\n    async somePool(arr, size, fn) {\n      return await new qx.Promise((resolve, reject) => {\n        let index = 0;\n        let pool = new PromisePool(() => {\n          if (!resolve) {\n            return null;\n          }\n          if (index >= arr.length) {\n            resolve(false);\n            return null;\n          }\n          let item = arr[index++];\n          return fn(item).then(result => {\n            if (result && resolve) {\n              resolve(true);\n              resolve = null;\n            }\n          });\n        }, 10);\n        pool.start();\n      });\n    },\n\n    call(fn) {\n      return new Promise((resolve, reject) => {\n        fn((err, ...args) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(...args);\n          }\n        });\n      });\n    },\n\n    callback(promise, cb) {\n      if (cb) {\n        promise = promise\n          .then((...args) => cb(null, ...args))\n          .catch(err => cb(err));\n      }\n      return promise;\n    },\n\n    fs: null,\n\n    each(coll, fn) {\n      return qx.tool.utils.Promisify.eachOf(coll, fn);\n    },\n\n    forEachOf(coll, fn) {\n      return qx.tool.utils.Promisify.eachOf(coll, fn);\n    },\n\n    eachOf(coll, fn) {\n      let promises = Object.keys(coll).map(key => fn(coll[key], key));\n      return qx.Promise.all(promises);\n    },\n\n    eachSeries(coll, fn) {\n      return qx.tool.utils.Promisify.eachOfSeries(coll, fn);\n    },\n\n    forEachOfSeries(coll, fn) {\n      return qx.tool.utils.Promisify.eachOfSeries(coll, fn);\n    },\n\n    eachOfSeries(coll, fn) {\n      let keys = Object.keys(coll);\n      let index = 0;\n      function next() {\n        if (index == keys.length) {\n          return qx.Promise.resolve();\n        }\n        let key = keys[index];\n        index++;\n        var result = fn(coll[key], key);\n        return qx.Promise.resolve(result).then(next);\n      }\n      return next();\n    }\n  },\n\n  defer(statics) {\n    statics.fs = statics.promisifyAll(require(\"fs\"), function (key, fs) {\n      return key !== \"SyncWriteStream\";\n    });\n  }\n});\n"
  ]
}