{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/core/Object.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "Object",
    "include",
    "core",
    "Environment",
    "filter",
    "data",
    "MBinding",
    "MLogging",
    "MEvent",
    "MProperty",
    "MObjectId",
    "MAssert",
    "construct",
    "statics",
    "$$type",
    "members",
    "__Property",
    "Property",
    "toHashCode",
    "$$hash",
    "$$disposed",
    "hasInterface",
    "constructor",
    "IDisposable",
    "ObjectRegistry",
    "register",
    "toUuid",
    "$$uuid",
    "util",
    "Uuid",
    "createUuidV4",
    "setExplicitUuid",
    "uuid",
    "Boolean",
    "Error",
    "toString",
    "classname",
    "base",
    "args",
    "varargs",
    "func",
    "callee",
    "name",
    "isFunctionOrAsyncFunction",
    "displayName",
    "arguments",
    "length",
    "call",
    "apply",
    "Array",
    "prototype",
    "slice",
    "self",
    "clone",
    "clazz",
    "props",
    "getProperties",
    "user",
    "$$store",
    "setter",
    "$$method",
    "set",
    "i",
    "l",
    "hasOwnProperty",
    "__userData",
    "setUserData",
    "key",
    "value",
    "getUserData",
    "undefined",
    "resetUserData",
    "isDisposed",
    "isDisposing",
    "$$disposing",
    "dispose",
    "$$instance",
    "$$allowconstruct",
    "get",
    "debug",
    "event",
    "Registration",
    "removeAllListeners",
    "mixins",
    "superclass",
    "$$destructor",
    "$$includes",
    "$$flatIncludes",
    "isString",
    "warn",
    "_disposeObjects",
    "DisposeUtil",
    "disposeObjects",
    "_disposeSingletonObjects",
    "_disposeArray",
    "field",
    "disposeArray",
    "_disposeMap",
    "disposeMap",
    "environment",
    "destruct",
    "inShutDown",
    "deleteAllListeners",
    "unregister",
    "properties",
    "store",
    "storeUser",
    "storeTheme",
    "theme",
    "storeInherit",
    "inherit",
    "storeUseinit",
    "useinit",
    "storeInit",
    "init",
    "$$properties",
    "dereference"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The qooxdoo root class. All other classes are direct or indirect subclasses of this one.\n *\n * This class contains methods for:\n *\n * * object management (creation and destruction)\n * * interfaces for event system\n * * generic setter/getter support\n * * interfaces for logging console\n * * user friendly OO interfaces like {@link #self} or {@link #base}\n *\n * @require(qx.core.ObjectRegistry)\n */\nqx.Class.define(\"qx.core.Object\", {\n  extend: Object,\n  include: qx.core.Environment.filter({\n    \"module.databinding\": qx.data.MBinding,\n    \"module.logger\": qx.core.MLogging,\n    \"module.events\": qx.core.MEvent,\n    \"module.property\": qx.core.MProperty,\n    \"module.objectid\": qx.core.MObjectId,\n    \"qx.debug\": qx.core.MAssert\n  }),\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   */\n  construct() {},\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** Internal type */\n    $$type: \"Object\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __Property: qx.core.Environment.get(\"module.property\")\n      ? qx.core.Property\n      : null,\n\n    /*\n    ---------------------------------------------------------------------------\n      BASICS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Return unique hash code of object\n     *\n     * @return {String} unique hash code of the object\n     */\n    toHashCode() {\n      if (!this.$$hash && !this.$$disposed) {\n        if (\n          !qx.core.Environment.get(\"qx.automaticMemoryManagement\") ||\n          qx.Class.hasInterface(this.constructor, qx.core.IDisposable)\n        ) {\n          qx.core.ObjectRegistry.register(this);\n        } else {\n          qx.core.ObjectRegistry.toHashCode(this);\n        }\n      }\n      return this.$$hash;\n    },\n\n    /**\n     * Returns a UUID for this object\n     *\n     * @return {String} a UUID\n     */\n    toUuid() {\n      if (!this.$$uuid) {\n        this.$$uuid = qx.util.Uuid.createUuidV4();\n      }\n\n      return this.$$uuid;\n    },\n\n    /**\n     * Sets a UUID; normally set automatically, you would only set this manually\n     * if you have a very special reason to do so - for example, you are using UUIDs which are\n     * synchronized from a special source, eg remote server.\n     *\n     * This can only be called once, and only if it has not been automatically allocated.  If\n     * you really do need to call this, call it as soon after construction as possible to avoid\n     * an exception.\n     *\n     * @param uuid {String} an ID which is unique across the whole application\n     */\n    setExplicitUuid(uuid) {\n      if (Boolean(this.$$uuid)) {\n        throw new Error(\"Cannot change the UUID of an object once set\");\n      }\n      this.$$uuid = uuid;\n    },\n\n    /**\n     * Returns a string representation of the qooxdoo object.\n     *\n     * @return {String} string representation of the object\n     */\n    toString() {\n      return this.classname + \"[\" + this.toHashCode() + \"]\";\n    },\n\n    /**\n     * Call the same method of the super class.\n     *\n     * Either the compiler translate all calls to this.base\n     * into mypkg.MyBaseClass.prototype.myMethod.call(this, 123);\n     * this method is still needed for use in compile.js or playground\n     * which are not precompiled\n     *\n     * @param args {IArguments} the arguments variable of the calling method\n     * @param varargs {var?} variable number of arguments passed to the overwritten function\n     * @return {var} the return value of the method of the base class.\n     */\n    base(args, varargs) {\n      var func = args.callee.base;\n      if (!func) {\n        func = this[args.callee.name].base;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (!qx.Bootstrap.isFunctionOrAsyncFunction(func)) {\n          throw new Error(\n            \"Cannot call super class. Method is not derived: \" +\n              args.callee.displayName\n          );\n        }\n      }\n\n      if (arguments.length === 1) {\n        return func.call(this);\n      } else {\n        return func.apply(this, Array.prototype.slice.call(arguments, 1));\n      }\n    },\n\n    /**\n     * Returns the static class (to access static members of this class)\n     *\n     * @param args {arguments} the arguments variable of the calling method\n     * @return {var} the return value of the method of the base class.\n     */\n    self(args) {\n      return args.callee.self;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CLONE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     *\n     * Returns a clone of this object. Copies over all user configured\n     * property values. Do not configure a parent nor apply the appearance\n     * styles directly.\n     *\n     * @return {qx.core.Object} The clone\n     */\n    clone() {\n      if (!qx.core.Environment.get(\"module.property\")) {\n        throw new Error(\"Cloning only possible with properties.\");\n      }\n\n      var clazz = this.constructor;\n      var clone = new clazz();\n      var props = qx.Class.getProperties(clazz);\n      var user = this.__Property.$$store.user;\n      var setter = this.__Property.$$method.set;\n      var name;\n\n      // Iterate through properties\n      for (var i = 0, l = props.length; i < l; i++) {\n        name = props[i];\n        if (this.hasOwnProperty(user[name])) {\n          clone[setter[name]](this[user[name]]);\n        }\n      }\n\n      // Return clone\n      return clone;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER DATA\n    ---------------------------------------------------------------------------\n    */\n\n    /** @type {Map} stored user data */\n    __userData: null,\n\n    /**\n     * Store user defined data inside the object.\n     *\n     * @param key {String} the key\n     * @param value {Object} the value of the user data\n     */\n    setUserData(key, value) {\n      if (!this.__userData) {\n        this.__userData = {};\n      }\n\n      this.__userData[key] = value;\n    },\n\n    /**\n     * Load user defined data from the object\n     *\n     * @param key {String} the key\n     * @return {Object} the user data\n     */\n    getUserData(key) {\n      if (!this.__userData) {\n        return null;\n      }\n      var data = this.__userData[key];\n      return data === undefined ? null : data;\n    },\n\n    /**\n     * Clears all user defined data from the object.\n     */\n    resetUserData() {\n      this.__userData = null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DISPOSER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns true if the object is disposed.\n     *\n     * @return {Boolean} Whether the object has been disposed\n     */\n    isDisposed() {\n      return this.$$disposed || false;\n    },\n\n    /**\n     * Returns true if the object is being disposed, ie this.dispose() has started but\n     * not finished\n     *\n     * @return {Boolean} Whether the object is being disposed\n     */\n    isDisposing() {\n      return this.$$disposing || false;\n    },\n\n    /**\n     * Dispose this object\n     *\n     */\n    dispose() {\n      // Check first\n      if (this.$$disposed) {\n        return;\n      }\n\n      // Mark as disposed (directly, not at end, to omit recursions)\n      this.$$disposed = true;\n      this.$$disposing = true;\n      this.$$instance = null;\n      this.$$allowconstruct = null;\n\n      // Debug output\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.dispose.level\") > 2) {\n          qx.Bootstrap.debug(\n            this,\n            \"Disposing \" + this.classname + \"[\" + this.toHashCode() + \"]\"\n          );\n        }\n      }\n\n      // Remove all listeners.\n      //\n      // This must be done early, since it calls\n      // qx.core.ObjectRegistry.toHashCode(target) which would add a\n      // hash code back in after code here has cleaned it up.\n      qx.event.Registration.removeAllListeners(this);\n\n      // Deconstructor support for classes\n      var clazz = this.constructor;\n      var mixins;\n\n      while (clazz.superclass) {\n        // Processing this class...\n        if (clazz.$$destructor) {\n          clazz.$$destructor.call(this);\n        }\n\n        // Destructor support for mixins\n        if (clazz.$$includes) {\n          mixins = clazz.$$flatIncludes;\n\n          for (var i = 0, l = mixins.length; i < l; i++) {\n            if (mixins[i].$$destructor) {\n              mixins[i].$$destructor.call(this);\n            }\n          }\n        }\n\n        // Jump up to next super class\n        clazz = clazz.superclass;\n      }\n\n      this.$$disposing = false;\n\n      // Additional checks\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.dispose.level\") > 0) {\n          var key, value;\n          for (key in this) {\n            value = this[key];\n\n            // Check for Objects but respect values attached to the prototype itself\n            if (\n              value !== null &&\n              typeof value === \"object\" &&\n              !qx.Bootstrap.isString(value)\n            ) {\n              // Check prototype value\n              // undefined is the best, but null may be used as a placeholder for\n              // private variables (hint: checks in qx.Class.define). We accept both.\n              if (this.constructor.prototype[key] != null) {\n                continue;\n              }\n\n              if (qx.core.Environment.get(\"qx.debug.dispose.level\") > 1) {\n                qx.Bootstrap.warn(\n                  this,\n                  \"Missing destruct definition for '\" +\n                    key +\n                    \"' in \" +\n                    this.classname +\n                    \"[\" +\n                    this.toHashCode() +\n                    \"]: \" +\n                    value\n                );\n\n                delete this[key];\n              }\n            }\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      DISPOSER UTILITIES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Disconnects and disposes given objects from instance.\n     * Only works with qx.core.Object based objects e.g. Widgets.\n     *\n     * @param varargs {arguments} Names of fields (which store objects) to dispose\n     */\n    _disposeObjects(varargs) {\n      qx.util.DisposeUtil.disposeObjects(this, arguments);\n    },\n\n    /**\n     * Disconnects and disposes given singleton objects from instance.\n     * Only works with qx.core.Object based objects e.g. Widgets.\n     *\n     * @param varargs {arguments} Names of fields (which store objects) to dispose\n     */\n    _disposeSingletonObjects(varargs) {\n      qx.util.DisposeUtil.disposeObjects(this, arguments, true);\n    },\n\n    /**\n     * Disposes all members of the given array and deletes\n     * the field which refers to the array afterwards.\n     *\n     * @param field {String} Name of the field which refers to the array\n     */\n    _disposeArray(field) {\n      qx.util.DisposeUtil.disposeArray(this, field);\n    },\n\n    /**\n     * Disposes all members of the given map and deletes\n     * the field which refers to the map afterwards.\n     *\n     * @param field {String} Name of the field which refers to the map\n     */\n    _disposeMap(field) {\n      qx.util.DisposeUtil.disposeMap(this, field);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     ENVIRONMENT SETTINGS\n  *****************************************************************************\n  */\n\n  environment: {\n    \"qx.debug.dispose.level\": 0\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (qx.core.Environment.get(\"module.events\")) {\n      if (!qx.core.ObjectRegistry.inShutDown) {\n        // Cleanup event listeners\n        qx.event.Registration.removeAllListeners(this);\n      } else {\n        // on shutdown, just clear the internal listener map\n        qx.event.Registration.deleteAllListeners(this);\n      }\n    }\n\n    // Cleanup object registry\n    qx.core.ObjectRegistry.unregister(this);\n\n    // Cleanup user data\n    this.__userData = null;\n\n    // only of properties are available\n    if (qx.core.Environment.get(\"module.property\")) {\n      // Cleanup properties\n      var clazz = this.constructor;\n      var properties;\n      var store = this.__Property.$$store;\n      var storeUser = store.user;\n      var storeTheme = store.theme;\n      var storeInherit = store.inherit;\n      var storeUseinit = store.useinit;\n      var storeInit = store.init;\n\n      while (clazz) {\n        properties = clazz.$$properties;\n        if (properties) {\n          for (var name in properties) {\n            if (properties[name].dereference) {\n              this[storeUser[name]] =\n                this[storeTheme[name]] =\n                this[storeInherit[name]] =\n                this[storeUseinit[name]] =\n                this[storeInit[name]] =\n                  undefined;\n            }\n          }\n        }\n\n        clazz = clazz.superclass;\n      }\n    }\n  }\n});\n"
  ]
}