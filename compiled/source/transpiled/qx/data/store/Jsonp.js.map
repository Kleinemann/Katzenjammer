{
  "version": 3,
  "sources": [
    "C:/Users/klein/AppData/Roaming/npm/node_modules/@qooxdoo/framework/source/class/qx/data/store/Jsonp.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "data",
    "store",
    "Json",
    "construct",
    "url",
    "delegate",
    "callbackParam",
    "undefined",
    "setCallbackParam",
    "properties",
    "check",
    "init",
    "nullable",
    "callbackName",
    "members",
    "_createRequest",
    "_getRequest",
    "dispose",
    "req",
    "io",
    "request",
    "Jsonp",
    "_setRequest",
    "getCallbackParam",
    "setCallbackName",
    "getCallbackName",
    "setUrl",
    "addListener",
    "_onSuccess",
    "del",
    "_delegate",
    "lang",
    "Type",
    "isFunction",
    "configureRequest",
    "_onChangePhase",
    "_onFail",
    "send"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EAAuC;AACrCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,KAAR,CAAcC,IADe;;AAGrC;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,SAVqC,qBAU3BC,GAV2B,EAUtBC,QAVsB,EAUZC,aAVY,EAUG;AACtC,UAAIA,aAAa,IAAIC,SAArB,EAAgC;AAC9B,aAAKC,gBAAL,CAAsBF,aAAtB;AACD;;AAED,gDAAMF,GAAN,EAAWC,QAAX;AACD,KAhBoC;AAkBrCI,IAAAA,UAAU,EAAE;AACV;AACJ;AACA;AACA;AACIH,MAAAA,aAAa,EAAE;AACbI,QAAAA,KAAK,EAAE,QADM;AAEbC,QAAAA,IAAI,EAAE,UAFO;AAGbC,QAAAA,QAAQ,EAAE;AAHG,OALL;;AAWV;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,YAAY,EAAE;AACZH,QAAAA,KAAK,EAAE,QADK;AAEZE,QAAAA,QAAQ,EAAE;AAFE;AAjBJ,KAlByB;AAyCrCE,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,cAFO,0BAEQX,GAFR,EAEa;AAClB;AACA,YAAI,KAAKY,WAAL,EAAJ,EAAwB;AACtB,eAAKA,WAAL,GAAmBC,OAAnB;AACD;;AAED,YAAIC,GAAG,GAAG,IAAIzB,EAAE,CAAC0B,EAAH,CAAMC,OAAN,CAAcC,KAAlB,EAAV;;AACA,aAAKC,WAAL,CAAiBJ,GAAjB,EAPkB,CASlB;;;AACAA,QAAAA,GAAG,CAACV,gBAAJ,CAAqB,KAAKe,gBAAL,EAArB;AACAL,QAAAA,GAAG,CAACM,eAAJ,CAAoB,KAAKC,eAAL,EAApB,EAXkB,CAalB;;AACAP,QAAAA,GAAG,CAACQ,MAAJ,CAAWtB,GAAX,EAdkB,CAgBlB;AACA;;AACAc,QAAAA,GAAG,CAACS,WAAJ,CAAgB,SAAhB,EAA2B,KAAKC,UAAhC,EAA4C,IAA5C,EAlBkB,CAoBlB;;AACA,YAAIC,GAAG,GAAG,KAAKC,SAAf;;AACA,YAAID,GAAG,IAAIpC,EAAE,CAACsC,IAAH,CAAQC,IAAR,CAAaC,UAAb,CAAwBJ,GAAG,CAACK,gBAA5B,CAAX,EAA0D;AACxD,eAAKJ,SAAL,CAAeI,gBAAf,CAAgChB,GAAhC;AACD,SAxBiB,CA0BlB;;;AACAA,QAAAA,GAAG,CAACS,WAAJ,CAAgB,aAAhB,EAA+B,KAAKQ,cAApC,EAAoD,IAApD,EA3BkB,CA6BlB;;AACAjB,QAAAA,GAAG,CAACS,WAAJ,CAAgB,MAAhB,EAAwB,KAAKS,OAA7B,EAAsC,IAAtC;AAEAlB,QAAAA,GAAG,CAACmB,IAAJ;AACD;AAnCM;AAzC4B,GAAvC;AA9BA5C,EAAAA,EAAE,CAACO,IAAH,CAAQC,KAAR,CAAcoB,KAAd,CAAoBzB,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Tristan Koch (tristankoch)\n\n************************************************************************ */\n\n/**\n *\n * The JSONP data store is a specialization of {@link qx.data.store.Json}. It\n * differs in the type of transport used ({@link qx.io.request.Jsonp}). In\n * order to fulfill requirements of the JSONP service, the method\n * {@link #setCallbackParam} can be used.\n *\n * Please note that the upgrade notices described in {@link qx.data.store.Json}\n * also apply to this class.\n *\n */\nqx.Class.define(\"qx.data.store.Jsonp\", {\n  extend: qx.data.store.Json,\n\n  /**\n   * @param url {String?} URL of the JSONP service.\n   * @param delegate {Object?null} The delegate containing one of the methods\n   *   specified in {@link qx.data.store.IStoreDelegate}.\n   * @param callbackParam {String?} The name of the callback param. See\n   *   {@link qx.bom.request.Jsonp#setCallbackParam} for more details.\n   */\n  construct(url, delegate, callbackParam) {\n    if (callbackParam != undefined) {\n      this.setCallbackParam(callbackParam);\n    }\n\n    super(url, delegate);\n  },\n\n  properties: {\n    /**\n     * The name of the callback parameter of the service. See\n     * {@link qx.bom.request.Jsonp#setCallbackParam} for more details.\n     */\n    callbackParam: {\n      check: \"String\",\n      init: \"callback\",\n      nullable: true\n    },\n\n    /**\n     * The name of the callback function. See\n     * {@link qx.bom.request.Jsonp#setCallbackName} for more details.\n     *\n     * Note: Ignored when legacy transport is used.\n     */\n    callbackName: {\n      check: \"String\",\n      nullable: true\n    }\n  },\n\n  members: {\n    // overridden\n    _createRequest(url) {\n      // dispose old request\n      if (this._getRequest()) {\n        this._getRequest().dispose();\n      }\n\n      var req = new qx.io.request.Jsonp();\n      this._setRequest(req);\n\n      // default when null\n      req.setCallbackParam(this.getCallbackParam());\n      req.setCallbackName(this.getCallbackName());\n\n      // send\n      req.setUrl(url);\n\n      // register the internal event before the user has the change to\n      // register its own event in the delegate\n      req.addListener(\"success\", this._onSuccess, this);\n\n      // check for the request configuration hook\n      var del = this._delegate;\n      if (del && qx.lang.Type.isFunction(del.configureRequest)) {\n        this._delegate.configureRequest(req);\n      }\n\n      // map request phase to itâ€™s own phase\n      req.addListener(\"changePhase\", this._onChangePhase, this);\n\n      // add failed, aborted and timeout listeners\n      req.addListener(\"fail\", this._onFail, this);\n\n      req.send();\n    }\n  }\n});\n"
  ]
}