{
  "version": 3,
  "sources": [
    "C:/Workspace/katzenjammer/source/class/katzenjammer/container/lists/BuildingsContainer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "statics",
    "properties",
    "BuildingHeader",
    "init",
    "NewButton",
    "NewBuilding",
    "BuildingSelect",
    "SearchField",
    "BuildingList",
    "construct",
    "layout",
    "VBox",
    "initBuildingHeader",
    "initNewBuilding",
    "initBuildingList",
    "members",
    "cont",
    "HBox",
    "add",
    "basic",
    "Label",
    "setBuildingHeader",
    "btnNew",
    "form",
    "Button",
    "setNewButton",
    "addListener",
    "startBuilding",
    "setSearchField",
    "katzenjammer",
    "widgets",
    "PosSearch",
    "getSearchField",
    "buildingSelect",
    "createBuildingSelect",
    "flex",
    "btnBuild",
    "buildBuiling",
    "setNewBuilding",
    "box",
    "SelectBox",
    "data",
    "GameData",
    "Buildings",
    "i",
    "building",
    "item",
    "ListItem",
    "name",
    "money",
    "setUserData",
    "setBuildingSelect",
    "user",
    "User",
    "Instance",
    "uMoney",
    "getMoney",
    "selectItems",
    "getBuildingSelect",
    "getChildren",
    "firstSelectable",
    "itemData",
    "getUserData",
    "enable",
    "parseInt",
    "setEnabled",
    "resetSelection",
    "setSelection",
    "cPos",
    "getCurrentPos",
    "pos",
    "lat",
    "lon",
    "zoom",
    "getHome",
    "updateHome",
    "getSelection",
    "Action",
    "Data",
    "user_id",
    "getID",
    "building_id",
    "id",
    "position",
    "req",
    "ServiceRequest",
    "e",
    "response",
    "getTarget",
    "getResponse",
    "success",
    "buildings",
    "getBuildings",
    "UserBuilding",
    "setBuildings",
    "updateBuildingList",
    "send",
    "setBuildingList",
    "list",
    "getBuildingList",
    "removeAll",
    "userBuildings",
    "getItem",
    "MapContainer",
    "updateUserBuildings",
    "lists",
    "BuildingsContainer"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAC;;AACD;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,iDAAhB,EAAmE;AAC/DC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBC,SADuC;AAG/DC,IAAAA,OAAO,EACP,EAJ+D;AAO/DC,IAAAA,UAAU,EACV;AACIC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADpB;AAEIC,MAAAA,SAAS,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR,OAFf;AAGIE,MAAAA,WAAW,EAAE;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAHjB;AAIIG,MAAAA,cAAc,EAAE;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAJpB;AAKII,MAAAA,WAAW,EAAE;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OALjB;AAOIK,MAAAA,YAAY,EAAE;AAAEL,QAAAA,IAAI,EAAE;AAAR;AAPlB,KAR+D;AAkB/DM,IAAAA,SAAS,EAAE,qBACX;AACI,UAAIC,MAAM,GAAG,IAAIpB,EAAE,CAACO,EAAH,CAAMa,MAAN,CAAaC,IAAjB,CAAsB,CAAtB,CAAb;AACA,uDAAqBD,MAArB;AAEA,WAAKE,kBAAL;AACA,WAAKC,eAAL;AACA,WAAKC,gBAAL;AACH,KA1B8D;AA4B/DC,IAAAA,OAAO,EACP;AACIH,MAAAA,kBAAkB,EAAE,8BACpB;AACI,YAAII,IAAI,GAAG,IAAI1B,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBC,SAApB,CAA8B,IAAIT,EAAE,CAACO,EAAH,CAAMa,MAAN,CAAaO,IAAjB,CAAsB,CAAtB,CAA9B,CAAX;AACAD,QAAAA,IAAI,CAACE,GAAL,CAAS,IAAI5B,EAAE,CAACO,EAAH,CAAMsB,KAAN,CAAYC,KAAhB,CAAsB,eAAtB,CAAT;AACA,aAAKC,iBAAL,CAAuBL,IAAvB;AACT,OANC;AAQIH,MAAAA,eAAe,EAAE,2BACjB;AACI,YAAIG,IAAI,GAAG,IAAI1B,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBC,SAApB,CAA8B,IAAIT,EAAE,CAACO,EAAH,CAAMa,MAAN,CAAaC,IAAjB,CAAsB,CAAtB,CAA9B,CAAX;AACA,YAAIW,MAAM,GAAG,IAAIhC,EAAE,CAACO,EAAH,CAAM0B,IAAN,CAAWC,MAAf,CAAsB,KAAtB,CAAb;AACA,aAAKC,YAAL,CAAkBH,MAAlB;AACAA,QAAAA,MAAM,CAACI,WAAP,CAAmB,SAAnB,EAA8B,KAAKC,aAAnC,EAAkD,IAAlD;AACAX,QAAAA,IAAI,CAACE,GAAL,CAASI,MAAT;AAGA,aAAKM,cAAL,CAAoB,IAAIC,YAAY,CAACC,OAAb,CAAqBC,SAAzB,EAApB;AACAf,QAAAA,IAAI,CAACE,GAAL,CAAS,KAAKc,cAAL,EAAT;AAEA,YAAIC,cAAc,GAAG,IAAI3C,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBC,SAApB,CAA8B,IAAIT,EAAE,CAACO,EAAH,CAAMa,MAAN,CAAaO,IAAjB,CAAsB,CAAtB,CAA9B,CAArB;AACAgB,QAAAA,cAAc,CAACf,GAAf,CAAmB,KAAKgB,oBAAL,EAAnB,EAAgD;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAhD;AAEA,YAAIC,QAAQ,GAAG,IAAI9C,EAAE,CAACO,EAAH,CAAM0B,IAAN,CAAWC,MAAf,CAAsB,OAAtB,CAAf;AACAY,QAAAA,QAAQ,CAACV,WAAT,CAAqB,SAArB,EAAgC,KAAKW,YAArC,EAAmD,IAAnD;AACAJ,QAAAA,cAAc,CAACf,GAAf,CAAmBkB,QAAnB;AAEApB,QAAAA,IAAI,CAACE,GAAL,CAASe,cAAT;AAEA,aAAKK,cAAL,CAAoBtB,IAApB;AACH,OA9BL;AAgCIkB,MAAAA,oBAAoB,EAAE,gCACtB;AACI,YAAIK,GAAG,GAAG,IAAIjD,EAAE,CAACO,EAAH,CAAM0B,IAAN,CAAWiB,SAAf,EAAV;AAEA,YAAIC,IAAI,GAAGZ,YAAY,CAACY,IAAb,CAAkBC,QAAlB,CAA2BC,SAAtC;;AACA,aAAK,IAAIC,CAAT,IAAcH,IAAd,EACA;AACI,cAAII,QAAQ,GAAGJ,IAAI,CAACG,CAAD,CAAnB;AAEA,cAAIE,IAAI,GAAG,IAAIxD,EAAE,CAACO,EAAH,CAAM0B,IAAN,CAAWwB,QAAf,CAAwBF,QAAQ,CAACG,IAAT,GAAgB,IAAhB,GAAuBH,QAAQ,CAACI,KAAhC,GAAwC,GAAhE,CAAX;AACAH,UAAAA,IAAI,CAACI,WAAL,CAAiB,MAAjB,EAAyBL,QAAzB;AACAN,UAAAA,GAAG,CAACrB,GAAJ,CAAQ4B,IAAR;AACZ;;AAEQ,aAAKK,iBAAL,CAAuBZ,GAAvB;AAEA,eAAOA,GAAP;AACT,OAjDC;AAmDIZ,MAAAA,aAAa,EAAE,yBACf;AACI,YAAIyB,IAAI,GAAGvB,YAAY,CAACY,IAAb,CAAkBY,IAAlB,CAAuBC,QAAlC;AACA,YAAIC,MAAM,GAAGH,IAAI,CAACI,QAAL,EAAb;AAEA,YAAIC,WAAW,GAAG,KAAKC,iBAAL,GAAyBC,WAAzB,EAAlB;AAEA,YAAIC,eAAe,GAAG,IAAtB;;AACA,aAAK,IAAIhB,CAAT,IAAca,WAAd,EACA;AACI,cAAIX,IAAI,GAAGW,WAAW,CAACb,CAAD,CAAtB;AACA,cAAIiB,QAAQ,GAAGf,IAAI,CAACgB,WAAL,CAAiB,MAAjB,CAAf;AAEA,cAAIC,MAAM,GAAGC,QAAQ,CAACH,QAAQ,CAACZ,KAAV,CAAR,IAA4Be,QAAQ,CAACT,MAAD,CAAjD;AACAT,UAAAA,IAAI,CAACmB,UAAL,CAAgBF,MAAhB;AAEA,cAAIH,eAAe,KAAK,IAApB,IAA4BG,MAAhC,EACIH,eAAe,GAAGd,IAAlB;AACP;;AAED,YAAIc,eAAe,KAAK,IAAxB,EACI,KAAKF,iBAAL,GAAyBQ,cAAzB,GADJ,KAGI,KAAKR,iBAAL,GAAyBS,YAAzB,CAAsC,CAACP,eAAD,CAAtC;AACP,OA3EL;AA8EIvB,MAAAA,YAAY,EAAE,wBACd;AACI,YAAI+B,IAAI,GAAG,KAAKpC,cAAL,GAAsBqC,aAAtB,EAAX;AACA,YAAIjB,IAAI,GAAGvB,YAAY,CAACY,IAAb,CAAkBY,IAAlB,CAAuBC,QAAlC;AAEA,YAAIgB,GAAG,GAAG;AACNC,UAAAA,GAAG,EAAEH,IAAI,CAAC,CAAD,CADH;AAENI,UAAAA,GAAG,EAAEJ,IAAI,CAAC,CAAD,CAFH;AAGNK,UAAAA,IAAI,EAAE;AAHA,SAAV;AAMA,YAAIrB,IAAI,CAACsB,OAAL,OAAmB,IAAvB,EACItB,IAAI,CAACuB,UAAL,CAAgBL,GAAhB;AAGJ,YAAIzB,QAAQ,GAAG,KAAKa,iBAAL,GAAyBkB,YAAzB,GAAwC,CAAxC,EAA2Cd,WAA3C,CAAuD,MAAvD,CAAf;AAEA,YAAIrB,IAAI,GACR;AACIoC,UAAAA,MAAM,EAAE,aADZ;AAEIC,UAAAA,IAAI,EAAE;AACFC,YAAAA,OAAO,EAAE3B,IAAI,CAAC4B,KAAL,EADP;AAEFC,YAAAA,WAAW,EAAEpC,QAAQ,CAACqC,EAFpB;AAGFC,YAAAA,QAAQ,EAAEb;AAHR;AAFV,SADA;AAUA,YAAIc,GAAG,GAAG,IAAIvD,YAAY,CAACY,IAAb,CAAkB4C,cAAtB,CAAqC5C,IAArC,CAAV;AACA2C,QAAAA,GAAG,CAAC1D,WAAJ,CAAgB,SAAhB,EAA2B,UAAU4D,CAAV,EAC3B;AACI,cAAIC,QAAQ,GAAGD,CAAC,CAACE,SAAF,GAAcC,WAAd,EAAf;;AAEA,cAAIF,QAAQ,CAACG,OAAb,EACA;AACI,gBAAIC,SAAS,GAAG9D,YAAY,CAACY,IAAb,CAAkBY,IAAlB,CAAuBC,QAAvB,CAAgCsC,YAAhC,EAAhB;AACA,gBAAID,SAAS,KAAK,IAAlB,EACIA,SAAS,GAAG,EAAZ;;AAEJ,iBAAK,IAAI/C,CAAT,IAAcH,IAAd,EACA;AACIkD,cAAAA,SAAS,CAAClD,IAAI,CAACG,CAAD,CAAJ,CAAQsC,EAAT,CAAT,GAAwB,IAAIrD,YAAY,CAACY,IAAb,CAAkBoD,YAAtB,CAAmCpD,IAAI,CAACG,CAAD,CAAvC,CAAxB;AACH;;AAED,iBAAKkD,YAAL,CAAkBH,SAAlB;AACA,iBAAKI,kBAAL;AACH;AACJ,SAlBD,EAkBG,IAlBH;AAmBAX,QAAAA,GAAG,CAACY,IAAJ;AACT,OA9HC;AAiIIlF,MAAAA,gBAAgB,EAAE,4BAClB;AACI,YAAIE,IAAI,GAAG,IAAI1B,EAAE,CAACO,EAAH,CAAMC,SAAN,CAAgBC,SAApB,CAA8B,IAAIT,EAAE,CAACO,EAAH,CAAMa,MAAN,CAAaC,IAAjB,CAAsB,CAAtB,CAA9B,CAAX;AACA,aAAKsF,eAAL,CAAqBjF,IAArB;AACA,aAAKE,GAAL,CAASF,IAAT;AACH,OAtIL;AAwII+E,MAAAA,kBAAkB,EAAE,8BACpB;AACI,YAAIG,IAAI,GAAG,KAAKC,eAAL,EAAX;AACAD,QAAAA,IAAI,CAACE,SAAL;AAEA,YAAIC,aAAa,GAAGxE,YAAY,CAACY,IAAb,CAAkBY,IAAlB,CAAuBC,QAAvB,CAAgCsC,YAAhC,EAApB;;AACA,aAAK,IAAIhD,CAAT,IAAcyD,aAAd,EACA;AACI,cAAIvD,IAAI,GAAGuD,aAAa,CAACzD,CAAD,CAAb,CAAiB0D,OAAjB,EAAX;AACAJ,UAAAA,IAAI,CAAChF,GAAL,CAAS4B,IAAT;AACH;;AAEDjB,QAAAA,YAAY,CAAC/B,SAAb,CAAuByG,YAAvB,CAAoCjD,QAApC,CAA6CkD,mBAA7C;AACT;AArJC;AA7B+D,GAAnE;AAJA3E,EAAAA,YAAY,CAAC/B,SAAb,CAAuB2G,KAAvB,CAA6BC,kBAA7B,CAAgDjH,aAAhD,GAAgEA,aAAhE",
  "sourcesContent": [
    "﻿/* global katzenjammer */\r\n/**\r\n*\r\n**/\r\nqx.Class.define(\"katzenjammer.container.lists.BuildingsContainer\", {\r\n    extend: qx.ui.container.Composite,\r\n\r\n    statics:\r\n    {\r\n    },\r\n\r\n    properties:\r\n    {\r\n        BuildingHeader: { init: null },\r\n        NewButton: { init: null },\r\n        NewBuilding: { init: null },\r\n        BuildingSelect: { init: null },\r\n        SearchField: { init: null },\r\n\r\n        BuildingList: { init: null }\r\n    },\r\n\r\n    construct: function ()\r\n    {\r\n        var layout = new qx.ui.layout.VBox(3);\r\n        this.base(arguments, layout);\r\n\r\n        this.initBuildingHeader();\r\n        this.initNewBuilding();\r\n        this.initBuildingList();\r\n    },\r\n\r\n    members:\r\n    {\r\n        initBuildingHeader: function ()\r\n        {\r\n            var cont = new qx.ui.container.Composite(new qx.ui.layout.HBox(3));\r\n            cont.add(new qx.ui.basic.Label(\"Neues Gebäude\"));\r\n            this.setBuildingHeader(cont);\r\n\t\t},\r\n\r\n        initNewBuilding: function ()\r\n        {\r\n            var cont = new qx.ui.container.Composite(new qx.ui.layout.VBox(3));\r\n            var btnNew = new qx.ui.form.Button(\"Neu\");\r\n            this.setNewButton(btnNew);\r\n            btnNew.addListener(\"execute\", this.startBuilding, this);\r\n            cont.add(btnNew);\r\n\r\n\r\n            this.setSearchField(new katzenjammer.widgets.PosSearch());\r\n            cont.add(this.getSearchField());\r\n\r\n            var buildingSelect = new qx.ui.container.Composite(new qx.ui.layout.HBox(3));\r\n            buildingSelect.add(this.createBuildingSelect(), { flex: 1 });\r\n\r\n            var btnBuild = new qx.ui.form.Button(\"Bauen\");\r\n            btnBuild.addListener(\"execute\", this.buildBuiling, this);\r\n            buildingSelect.add(btnBuild);\r\n\r\n            cont.add(buildingSelect);\r\n\r\n            this.setNewBuilding(cont);\r\n        },\r\n\r\n        createBuildingSelect: function ()\r\n        {\r\n            var box = new qx.ui.form.SelectBox();\r\n\r\n            var data = katzenjammer.data.GameData.Buildings;\r\n            for (var i in data)\r\n            {\r\n                var building = data[i];\r\n\r\n                var item = new qx.ui.form.ListItem(building.name + \" (\" + building.money + \")\");\r\n                item.setUserData(\"data\", building);\r\n                box.add(item);\r\n\t\t\t}\r\n\r\n            this.setBuildingSelect(box);\r\n\r\n            return box;\r\n\t\t},\r\n\r\n        startBuilding: function ()\r\n        {\r\n            var user = katzenjammer.data.User.Instance;\r\n            var uMoney = user.getMoney();\r\n\r\n            var selectItems = this.getBuildingSelect().getChildren();\r\n\r\n            var firstSelectable = null;\r\n            for (var i in selectItems)\r\n            {\r\n                var item = selectItems[i];\r\n                var itemData = item.getUserData(\"data\");\r\n\r\n                var enable = parseInt(itemData.money) <= parseInt(uMoney);\r\n                item.setEnabled(enable);\r\n\r\n                if (firstSelectable === null && enable)\r\n                    firstSelectable = item;\r\n            }\r\n\r\n            if (firstSelectable === null)\r\n                this.getBuildingSelect().resetSelection();\r\n            else\r\n                this.getBuildingSelect().setSelection([firstSelectable]);\r\n        },\r\n\r\n\r\n        buildBuiling: function ()\r\n        {\r\n            var cPos = this.getSearchField().getCurrentPos();\r\n            var user = katzenjammer.data.User.Instance;\r\n\r\n            var pos = {\r\n                lat: cPos[0],\r\n                lon: cPos[1],\r\n                zoom: 15\r\n            };\r\n\r\n            if (user.getHome() === null)\r\n                user.updateHome(pos);\r\n\r\n\r\n            var building = this.getBuildingSelect().getSelection()[0].getUserData(\"data\");\r\n\r\n            var data =\r\n            {\r\n                Action: \"buyBuilding\",\r\n                Data: {\r\n                    user_id: user.getID(),\r\n                    building_id: building.id,\r\n                    position: pos\r\n                }\r\n            }\r\n\r\n            var req = new katzenjammer.data.ServiceRequest(data);\r\n            req.addListener(\"success\", function (e)\r\n            {\r\n                var response = e.getTarget().getResponse();\r\n\r\n                if (response.success)\r\n                {\r\n                    var buildings = katzenjammer.data.User.Instance.getBuildings();\r\n                    if (buildings === null)\r\n                        buildings = [];\r\n\r\n                    for (var i in data)\r\n                    {\r\n                        buildings[data[i].id] = new katzenjammer.data.UserBuilding(data[i]);\r\n                    }\r\n\r\n                    this.setBuildings(buildings);\r\n                    this.updateBuildingList();\r\n                }\r\n            }, this);\r\n            req.send();\r\n\t\t},\r\n\r\n\r\n        initBuildingList: function ()\r\n        {\r\n            var cont = new qx.ui.container.Composite(new qx.ui.layout.VBox(3));\r\n            this.setBuildingList(cont);            \r\n            this.add(cont);\r\n        },\r\n\r\n        updateBuildingList: function ()\r\n        {\r\n            var list = this.getBuildingList();\r\n            list.removeAll();\r\n\r\n            var userBuildings = katzenjammer.data.User.Instance.getBuildings();\r\n            for (var i in userBuildings)\r\n            {\r\n                var item = userBuildings[i].getItem();\r\n                list.add(item);\r\n            }\r\n\r\n            katzenjammer.container.MapContainer.Instance.updateUserBuildings();\r\n\t\t}\r\n    }\r\n});\r\n"
  ]
}