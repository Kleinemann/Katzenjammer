{
  "version": 3,
  "sources": [
    "C:/Workspace/katzenjammer/source/class/katzenjammer/container/MainContainer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "statics",
    "Instance",
    "ContainerSettings",
    "Layouts",
    "row",
    "column",
    "colSpan",
    "rowSpan",
    "properties",
    "User",
    "init",
    "katzenjammer",
    "data",
    "getInstance",
    "CurrentLayout",
    "Header",
    "nullable",
    "Map",
    "Login",
    "Register",
    "Update",
    "News",
    "TopPlayer",
    "Quests",
    "Buildings",
    "Information",
    "Building",
    "Quest",
    "construct",
    "layout",
    "Grid",
    "setColumnFlex",
    "setRowFlex",
    "MainContainer",
    "setBackgroundColor",
    "loadingLayout",
    "__gameTimer",
    "event",
    "Timer",
    "addListener",
    "gameInterval",
    "start",
    "members",
    "equalPosition",
    "a",
    "b",
    "undefined",
    "i",
    "layoutName",
    "oldPositions",
    "getCurrentLayout",
    "setCurrentLayout",
    "positions",
    "remove",
    "skip",
    "push",
    "oldWindow",
    "getLayout",
    "getCellWidget",
    "indexOf",
    "loadWindow",
    "evt",
    "document",
    "createEvent",
    "initUIEvent",
    "window",
    "dispatchEvent",
    "initContainerByName",
    "name",
    "MapContainer",
    "LoginContainer",
    "RegisterContainer",
    "QuestContainer",
    "lists",
    "TopPlayerContainer",
    "NewsContainer",
    "UpdatesContainer",
    "BuildingsContainer",
    "details",
    "BuildingDetailContainer",
    "QuestDetailContainer",
    "InformationContainer",
    "initSearch",
    "cont",
    "VBox",
    "txtSearch",
    "form",
    "TextField",
    "add",
    "e",
    "getKeyCode",
    "req",
    "ServiceRequest",
    "SearchAdressRequest",
    "getValue",
    "response",
    "getTarget",
    "getResponse",
    "length",
    "console",
    "log",
    "pos",
    "lat",
    "lon",
    "getMap",
    "movePosition",
    "send",
    "widgets",
    "WindowBase",
    "switchWindow",
    "oldName",
    "newName",
    "position",
    "reset",
    "windowName",
    "contSettings",
    "get",
    "set",
    "isWindow",
    "loadingUser",
    "args",
    "getUser",
    "getHeader",
    "refresh",
    "moveRandomPos",
    "home",
    "JSON",
    "parse",
    "getHome",
    "map",
    "zoom",
    "loadingBuilding",
    "userBuilding",
    "getBuilding",
    "load",
    "getPosition",
    "loadingQuest",
    "quest",
    "getQuest"
  ],
  "mappings": "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",
  "sourcesContent": [
    "﻿/* global katzenjammer */\r\n/**\r\n*\r\n * @asset(katzenjammer/*)\r\n * (katzenjammer/leaflet/*)\r\n * (katzenjammer/leaflet/images)\r\n * (katzenjammer/leaflet/routing/leaflet-routing-machine.js)\r\n*\r\n**/\r\nqx.Class.define(\"katzenjammer.container.MainContainer\", {\r\n    extend: qx.ui.container.Composite,\r\n\r\n    statics:\r\n    {\r\n        Instance: null,\r\n\r\n        ContainerSettings: {\r\n            \"Header\": { \"isWindow\": false },\r\n            \"Map\": { \"isWindow\": true },\r\n            \"Login\": { \"name\": \"Login\", \"isWindow\": true },\r\n            \"Register\": { \"name\": \"Registrieren\", \"isWindow\": true },\r\n            \"Update\": { \"name\": \"Updates\", \"isWindow\": true },\r\n            \"News\": { \"name\": \"News\", \"isWindow\": true },\r\n            \"TopPlayer\": { \"name\": \"Top-Spieler\", \"isWindow\": true },\r\n            \"Information\": { \"name\": \"Informationes\", \"isWindow\": true },\r\n            \"Quests\": { \"name\": \"Quests\", \"isWindow\": true },\r\n            \"Buildings\": { \"name\": \"Gebäude\", \"isWindow\": true, \"subbody\": \"NewBuilding\", \"subheader\": \"BuildingHeader\" },\r\n            \"Building\": { \"name\": \"Gebäude: \", \"propname\": \"Name\", \"isWindow\": true, \"subbody\": \"Description\", \"closeable\": true },\r\n            \"Quest\": { \"name\": \"Quest: \", \"propname\": \"Name\", \"isWindow\": true, \"subbody\": \"Description\", \"closeable\": true }\r\n        },\r\n\r\n        Layouts: {\r\n            \"start\": {\r\n                \"Header\": { row: 0, column: 0, colSpan: 3 },\r\n                \"Map\": { row: 1, column: 0, colSpan: 2, rowSpan: 2 },\r\n                \"Login\": { row: 1, column: 2, rowSpan: 2 },\r\n                \"Update\": { row: 3, column: 0 },\r\n                \"News\": { row: 3, column: 1 },\r\n                \"TopPlayer\": { row: 3, column: 2 }\r\n            },\r\n\r\n            \"default\": {\r\n                \"Header\": { row: 0, column: 0, colSpan: 3 },\r\n                \"Map\": { row: 1, column: 0, colSpan: 2, rowSpan: 2 },\r\n                \"Quests\": { row: 1, column: 2, rowSpan: 3 },\r\n                \"Buildings\": { row: 3, column: 0 },\r\n                \"Information\": { row: 3, column: 1 }\r\n            },\r\n\r\n            \"building\": {\r\n                \"Header\": { row: 0, column: 0, colSpan: 3 },\r\n                \"Building\": { row: 1, column: 0, colSpan: 2, rowSpan: 3 },\r\n                \"Map\": { row: 1, column: 2},\r\n                \"Buildings\": { row: 2, column: 2, rowSpan: 2},\r\n            },\r\n\r\n            \"quest\": {\r\n                \"Header\": { row: 0, column: 0, colSpan: 3 },\r\n                \"Quest\": { row: 1, column: 0, colSpan: 2, rowSpan: 3 },\r\n                \"Map\": { row: 1, column: 2 },\r\n                \"Quests\": { row: 2, column: 2, rowSpan: 2 },\r\n            }\r\n        }\r\n    },\r\n\r\n    properties:\r\n    {\r\n        User: { init: katzenjammer.data.User.getInstance() },\r\n\r\n        CurrentLayout: { init: null },\r\n\r\n        Header: { init: null, nullable: true },\r\n        Map: { init: null, nullable: true },\r\n        Login: { init: null, nullable: true },\r\n        Register: { init: null, nullable: true },\r\n        Update: { init: null, nullable: true },\r\n        News: { init: null, nullable: true },\r\n        TopPlayer: { init: null, nullable: true },\r\n        Quests: { init: null, nullable: true },\r\n        Buildings: { init: null, nullable: true },\r\n        Information: { init: null, nullable: true },\r\n\r\n        //GameItems\r\n        Building: { init: null, nullable: true },\r\n        Quest: { init: null, nullable: true }\r\n    },\r\n\r\n    construct: function ()\r\n    {\r\n        var layout = new qx.ui.layout.Grid(0, 0);\r\n        layout.setColumnFlex(0, 1);\r\n        layout.setColumnFlex(1, 1);\r\n        layout.setColumnFlex(2, 1);\r\n\r\n        layout.setRowFlex(0, 0);\r\n        layout.setRowFlex(1, 1);\r\n        layout.setRowFlex(2, 1);\r\n        layout.setRowFlex(3, 1);\r\n\r\n        this.base(arguments, layout);\r\n\r\n        katzenjammer.container.MainContainer.Instance = this;\r\n\r\n        this.setBackgroundColor(\"#CCCCCC\");\r\n\r\n        this.loadingLayout(\"start\");\r\n\r\n        this.__gameTimer = new qx.event.Timer(30000);\r\n        this.__gameTimer.addListener(\"interval\", this.gameInterval, this);\r\n        this.__gameTimer.start();\r\n    },\r\n\r\n    members:\r\n    {\r\n        gameInterval: function ()\r\n        {\r\n            if (katzenjammer.data.User.Instance !== null)\r\n            {\r\n                katzenjammer.data.User.Instance.gameInterval();\r\n            }\r\n        },\r\n\r\n        equalPosition: function (a, b)\r\n        {\r\n            if ((a === undefined || b === undefined) && a !== b)\r\n                return false;\r\n\r\n            for (var i in a)\r\n            {\r\n                if (b[i] === undefined || a[i] !== b[i])\r\n                    return false;\r\n\t\t\t}\r\n\r\n            return true;\r\n\t\t},\r\n\r\n\r\n        loadingLayout: function (layoutName)\r\n        {\r\n            var oldPositions = katzenjammer.container.MainContainer.Layouts[this.getCurrentLayout()];\r\n            this.setCurrentLayout(layoutName);\r\n            var positions = katzenjammer.container.MainContainer.Layouts[layoutName];\r\n\r\n            var remove = [];\r\n            var skip = [];\r\n            for (var i in oldPositions)\r\n            {\r\n                if (positions[i] !== undefined && this.equalPosition(oldPositions[i], positions[i]))\r\n                    skip.push(i);\r\n                else\r\n                    remove.push(i);\r\n\t\t\t}\r\n\r\n            for (var i in remove)\r\n            {\r\n                var oldWindow = this.getLayout().getCellWidget(oldPositions[remove[i]].row, oldPositions[remove[i]].column);\r\n                this.remove(oldWindow);\r\n\t\t\t}\r\n\r\n            for (var i in positions)\r\n            {\r\n                if (skip.indexOf(i) === -1) {\r\n                    this.loadWindow(i, positions[i]);\r\n                }\r\n            }\r\n\r\n            //resize everything\r\n            var evt = document.createEvent('UIEvents');\r\n            evt.initUIEvent('resize', true, false, window, 0);\r\n            window.dispatchEvent(evt);\r\n        },\r\n\r\n\r\n        initContainerByName: function (name)\r\n        {\r\n            switch (name)\r\n            {\r\n                case \"Header\": return new katzenjammer.container.Header(); break;\r\n                case \"Map\": return new katzenjammer.container.MapContainer(); break;\r\n                case \"Login\": return new katzenjammer.container.LoginContainer(); break;\r\n                case \"Register\": return new katzenjammer.container.RegisterContainer(); break;\r\n                case \"Quests\": return new katzenjammer.container.QuestContainer(); break;\r\n                case \"TopPlayer\": return new katzenjammer.container.lists.TopPlayerContainer(); break;\r\n                case \"News\": return new katzenjammer.container.lists.NewsContainer(); break;\r\n                case \"Update\": return new katzenjammer.container.lists.UpdatesContainer(); break;\r\n                case \"Buildings\": return new katzenjammer.container.lists.BuildingsContainer(); break;\r\n                case \"Building\": return new katzenjammer.container.details.BuildingDetailContainer(); break;\r\n                case \"Quest\": return new katzenjammer.container.details.QuestDetailContainer(); break;\r\n                case \"Information\": return new katzenjammer.container.lists.InformationContainer(); break;\r\n                default: return undefined;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n        initSearch: function ()\r\n        {\r\n            var cont = new qx.ui.container.Composite(new qx.ui.layout.VBox(3));\r\n            var txtSearch = new qx.ui.form.TextField();\r\n            cont.add(txtSearch);\r\n            txtSearch.addListener(\"keyup\", function (e)\r\n            {\r\n                if (e.getKeyCode() !== 13)\r\n                    return;\r\n\r\n                var req = katzenjammer.data.ServiceRequest.SearchAdressRequest(txtSearch.getValue());\r\n                req.addListener(\"success\", function (e)\r\n                {\r\n                    var response = e.getTarget().getResponse();\r\n                    if (response.length === 1)\r\n                    {\r\n                        console.log(response[0]);\r\n                        var pos = [response[0].lat, response[0].lon];\r\n                        this.getMap().movePosition(pos);\r\n                    }\r\n                    else\r\n                        console.log(\"Not Found\");\r\n                }, this);\r\n\r\n                req.send();\r\n            }, this);\r\n\r\n            var window = new katzenjammer.widgets.WindowBase(\"Search\", cont);\r\n            return window;\r\n\t\t},\r\n\r\n\r\n        switchWindow: function (oldName, newName)\r\n        {\r\n            var positions = katzenjammer.container.MainContainer.Layouts[this.getCurrentLayout()];\r\n\r\n            var position = positions[oldName] !== undefined ? positions[oldName] : positions[newName];\r\n\r\n            var oldWindow = this.getLayout().getCellWidget(position.row, position.column);\r\n            if (oldWindow !== null)\r\n            {\r\n                this.remove(oldWindow);\r\n                this.reset(oldName);\r\n            }\r\n\r\n            this.loadWindow(newName, position);\r\n\t\t},\r\n\r\n\r\n        loadWindow: function (windowName, position)\r\n        {\r\n            var contSettings = katzenjammer.container.MainContainer.ContainerSettings[windowName];\r\n            var window = this.get(windowName) !== null ? this.get(windowName) : this.initContainerByName(windowName);\r\n\r\n\r\n            if (contSettings !== undefined && window !== undefined)\r\n                this.set(windowName, window);\r\n\r\n            if (contSettings.isWindow)\r\n                this.add(new katzenjammer.widgets.WindowBase(window, contSettings), position);\r\n            else\r\n                this.add(window, position);\r\n\t\t},\r\n\r\n\r\n        loadingUser: function (args)\r\n        {\r\n            this.getUser().loadingUser(args);\r\n            this.getHeader().refresh();\r\n\r\n            if (args === null)\r\n            {\r\n                this.getMap().moveRandomPos();\r\n                this.loadingLayout(\"start\");\r\n            }\r\n            else\r\n            {\r\n                this.loadingLayout(\"default\");\r\n\r\n                var home = JSON.parse(this.getUser().getHome());\r\n                if (home !== null)\r\n                {\r\n                    var map = katzenjammer.container.MapContainer.Instance;\r\n                    map.movePosition([home.lat, home.lon], home.zoom);\r\n                }\r\n                else\r\n                    this.getMap().moveRandomPos();\r\n            }\r\n        },\r\n\r\n        loadingBuilding: function (userBuilding)\r\n        {\r\n            this.loadingLayout(\"building\");\r\n            this.getBuilding().load(userBuilding);\r\n\r\n            katzenjammer.container.MapContainer.Instance.movePosition(userBuilding.getPosition());\r\n        },\r\n\r\n        loadingQuest: function (quest)\r\n        {\r\n            this.loadingLayout(\"quest\");\r\n            this.getQuest().load(quest);\r\n\r\n             katzenjammer.container.MapContainer.Instance.movePosition(quest.getPosition());\r\n        }\r\n    }\r\n});\r\n"
  ]
}