{
  "version": 3,
  "sources": [
    "C:/Workspace/katzenjammer/source/class/katzenjammer/data/ServiceRequest.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "request",
    "Xhr",
    "statics",
    "URL_SERVICE",
    "URL_OpenStreetSearch",
    "URL_OpenStreetReverse",
    "SearchRoute",
    "source",
    "target",
    "promise",
    "Promise",
    "resolve",
    "reject",
    "L",
    "Routing",
    "osrmv1",
    "geometryOnly",
    "routing",
    "control",
    "waypoints",
    "language",
    "fitSelectedRoutes",
    "showAlternatives",
    "defaultErrorHandler",
    "on",
    "e",
    "route",
    "routes",
    "SearchAdressRevertRequest",
    "pos",
    "data",
    "lat",
    "lon",
    "zoom",
    "format",
    "katzenjammer",
    "ServiceRequest",
    "SearchAdressRequest",
    "searchString",
    "properties",
    "construct",
    "url",
    "method",
    "setMethod",
    "undefined",
    "getMethod",
    "addData",
    "setUrl",
    "setRequestData",
    "util",
    "Serializer",
    "toJson",
    "addListenerOnce",
    "response",
    "getTarget",
    "getResponse",
    "success",
    "console",
    "error",
    "JSON",
    "stringify",
    "trans",
    "getTransport",
    "responseText",
    "members",
    "string",
    "i",
    "value",
    "getTable",
    "table",
    "dataRow",
    "row",
    "j",
    "push"
  ],
  "mappings": "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",
  "sourcesContent": [
    "ï»¿/* global katzenjammer */\r\n/**\r\n*\r\n * @asset(katzenjammer/*)\r\n*\r\n**/\r\nqx.Class.define(\"katzenjammer.data.ServiceRequest\", {\r\n    extend: qx.io.request.Xhr,\r\n\r\n    statics:\r\n    {\r\n        URL_SERVICE: \"http://localhost/katzenjammer_service/service.php\",\r\n        URL_OpenStreetSearch: \"https://nominatim.openstreetmap.org/search\",\r\n        URL_OpenStreetReverse: \"https://nominatim.openstreetmap.org/reverse.php\",\r\n        //URL_OpenStreetRoute: \"https://routing.openstreetmap.de/routed-car/route/v1/driving/\",\r\n\r\n\r\n        SearchRoute: async function (source, target)\r\n        {\r\n            const promise = new Promise(function (resolve, reject) {\r\n                L.Routing.osrmv1({ geometryOnly: true });\r\n\r\n                var routing = L.Routing.control({\r\n                    waypoints: [\r\n                        source,\r\n                        target\r\n                    ],\r\n                    language: 'de',\r\n                    fitSelectedRoutes: false,\r\n                    showAlternatives: false,\r\n                    defaultErrorHandler: null\r\n\r\n                }).on('routesfound', function (e) {\r\n                    var route = e.routes[0];\r\n                    resolve(route);\r\n                }).on('routingerror', function (e) {\r\n                    reject(null);\r\n                });\r\n\r\n                routing.route();\r\n            });\r\n\r\n            return promise;\r\n            //var blubb = promise.coordinates;\r\n            //console.log(blubb);\r\n\r\n\r\n            /*\r\n            var position = source.lon + \",\" + source.lat + \";\" + target.lon + \",\" + target.lat;\r\n            var params = {\r\n                overview: false,\r\n                geometries: \"polyline\",\r\n                steps: true\r\n            };\r\n\r\n            var search = this.URL_OpenStreetRoute + position;\r\n\r\n            return new katzenjammer.data.ServiceRequest(params, search, \"GET\");\r\n            */\r\n        },\r\n\r\n\r\n        SearchAdressRevertRequest: function (pos)\r\n        {\r\n            var data =\r\n            {\r\n                lat: pos[0],\r\n                lon: pos[1],\r\n                zoom: 18,\r\n                format: \"jsonv2\"\r\n            };\r\n\r\n            return new katzenjammer.data.ServiceRequest(data, katzenjammer.data.ServiceRequest.URL_OpenStreetReverse, \"GET\");\r\n\t\t},\r\n\r\n\r\n        SearchAdressRequest: function (searchString)\r\n        {\r\n\r\n            var data =\r\n            {\r\n                \"q\": searchString,\r\n                \"limit\": 1,\r\n                \"format\": \"json\",\r\n                \"addressdetails\": 1\r\n            };\r\n\r\n            return new katzenjammer.data.ServiceRequest(data, katzenjammer.data.ServiceRequest.URL_OpenStreetSearch, \"GET\");\r\n\t\t}\r\n    },\r\n\r\n    properties:\r\n    {\r\n    },\r\n\r\n    construct: function (data, url, method)\r\n    {\r\n        this.base(arguments);\r\n\r\n        this.setMethod(method !== undefined && method !== null ? method : \"POST\");\r\n\r\n        if (this.getMethod() === \"GET\")\r\n            url += this.addData(data);\r\n\r\n        this.setUrl(url !== undefined && url !== null ? url : katzenjammer.data.ServiceRequest.URL_SERVICE);\r\n\r\n        if(this.getMethod() === \"POST\")\r\n            this.setRequestData(qx.util.Serializer.toJson(data));           \r\n\r\n        this.addListenerOnce(\"success\", function (e)\r\n        {\r\n            var response = e.getTarget().getResponse();\r\n            if (response.success !== undefined && !response.success)\r\n                console.error(JSON.stringify(response.error));\r\n        }, this);\r\n\r\n        this.addListenerOnce(\"fail\", function (e)\r\n        {\r\n            var trans = e.getTarget().getTransport();\r\n            var response = trans.responseText;\r\n            console.error(response);\r\n        }, this);\r\n\r\n    },\r\n\r\n    members:\r\n    {\r\n        addData: function (data)\r\n        {\r\n            var string = \"\"\r\n\r\n            for (var i in data)\r\n            {\r\n                var value = data[i];\r\n\r\n                string += string === \"\" ? \"?\" : \"&\";\r\n\r\n                string += i + \"=\" + value;\r\n            }\r\n\r\n            return string;\r\n\t\t},\r\n\r\n        getTable: function ()\r\n        {\r\n            var data = this.getResponse().data;\r\n            var table = [];\r\n\r\n            for (var i in data)\r\n            {\r\n                var dataRow = data[i];\r\n\r\n                var row = [];\r\n                for (var j in dataRow)\r\n                {\r\n                    row.push(dataRow[j]);\r\n                }\r\n\r\n                table.push(row);\r\n            }\r\n\r\n            return table;\r\n\t\t}\r\n    }\r\n});\r\n"
  ]
}