{
  "version": 3,
  "sources": [
    "C:/Workspace/katzenjammer/source/class/katzenjammer/data/User.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "statics",
    "Instance",
    "properties",
    "ID",
    "init",
    "nullable",
    "Session",
    "Name",
    "Home",
    "Money",
    "Guild",
    "Buildings",
    "construct",
    "katzenjammer",
    "data",
    "User",
    "members",
    "loadingUser",
    "args",
    "resetID",
    "resetSession",
    "resetName",
    "resetHome",
    "resetMoney",
    "resetGuild",
    "resetBuildings",
    "i",
    "value",
    "setID",
    "setName",
    "setSession",
    "setHome",
    "setMoney",
    "setGuild",
    "console",
    "log",
    "loadingUserData",
    "updateHome",
    "homeData",
    "Action",
    "Data",
    "id",
    "getID",
    "home",
    "getHome",
    "req",
    "ServiceRequest",
    "send",
    "loadingUserBuildings",
    "user",
    "addListener",
    "e",
    "response",
    "getTarget",
    "getResponse",
    "success",
    "buildings",
    "UserBuilding",
    "setBuildings",
    "container",
    "MainContainer",
    "getBuildings",
    "updateBuildingList"
  ],
  "mappings": "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",
  "sourcesContent": [
    "ï»¿/* global katzenjammer */\r\n/**\r\n*\r\n * @asset(katzenjammer/*)\r\n*\r\n**/\r\nqx.Class.define(\"katzenjammer.data.User\", {\r\n    extend: qx.core.Object,\r\n    type: \"singleton\",\r\n\r\n    statics:\r\n    {\r\n        Instance: null\r\n    },\r\n\r\n    properties:\r\n    {\r\n        ID: { init: null, nullable: true  },\r\n        Session: { init: null, nullable: true },\r\n        Name: { init: null, nullable: true  },\r\n        Home: { init: null, nullable: true  },\r\n        Money: { init: null, nullable: true  },\r\n        Guild: { init: null, nullable: true },\r\n\r\n        Buildings: { init: null, nullable: true }\r\n    },\r\n\r\n    construct: function ()\r\n    {\r\n        this.base(arguments);\r\n\r\n        katzenjammer.data.User.Instance = this;\r\n    },\r\n\r\n    members:\r\n    {\r\n        loadingUser: function (args)\r\n        {\r\n            if (args === null)\r\n            {\r\n                this.resetID();\r\n                this.resetSession();\r\n                this.resetName();\r\n                this.resetHome();\r\n                this.resetMoney();\r\n                this.resetGuild();\r\n\r\n                this.resetBuildings();\r\n\t\t\t}\r\n\r\n            for (var i in args)\r\n            {\r\n                var value = args[i];\r\n                switch (i)\r\n                {\r\n                    case \"id\": this.setID(value); break;\r\n                    case \"name\": this.setName(value); break;\r\n                    case \"session\": this.setSession(value); break;\r\n                    case \"home\": this.setHome(value); break;\r\n                    case \"money\": this.setMoney(value); break;\r\n                    case \"guild\": this.setGuild(value); break;\r\n                    default: console.log(\"Key \" + i + \" is not in use.\"); break;\r\n                }\r\n            }\r\n\r\n            this.loadingUserData();\r\n        },\r\n\r\n\r\n        updateHome: function (homeData)\r\n        {\r\n            this.setHome(homeData);\r\n\r\n            var data =\r\n            {\r\n                Action: \"userUpdate\",\r\n                Data: {\r\n                    id: this.getID(),\r\n                    home: this.getHome()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n            var req = new katzenjammer.data.ServiceRequest(data);\r\n            req.send();\r\n        },\r\n\r\n\r\n        loadingUserData: function ()\r\n        {\r\n            this.loadingUserBuildings();\r\n        },\r\n\r\n        loadingUserBuildings: function ()\r\n        {\r\n            var user = katzenjammer.data.User.Instance.getID();\r\n\r\n            var data = {\r\n                Action: \"select\",\r\n                Data: \"UserBuildings\",\r\n                ID: user\r\n            };\r\n\r\n            var req = new katzenjammer.data.ServiceRequest(data);\r\n            req.addListener(\"success\", function (e)\r\n            {\r\n                var response = e.getTarget().getResponse();\r\n                //console.log(response);\r\n\r\n                if (response.success)\r\n                {\r\n                    var data = e.getTarget().getResponse().data;\r\n\r\n                    var buildings = [];\r\n                    for (var i in data)\r\n                    {\r\n                        buildings[data[i].id] = new katzenjammer.data.UserBuilding(data[i]);\r\n                    }\r\n\r\n                    this.setBuildings(buildings);\r\n\r\n                    katzenjammer.container.MainContainer.Instance.getBuildings().updateBuildingList();\r\n                }\r\n            }, this);\r\n\r\n            req.send();\r\n        }\r\n    }\r\n});\r\n"
  ]
}