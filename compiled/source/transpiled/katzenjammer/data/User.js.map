{
  "version": 3,
  "sources": [
    "C:/Workspace/katzenjammer/source/class/katzenjammer/data/User.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "statics",
    "Instance",
    "properties",
    "ID",
    "init",
    "nullable",
    "Session",
    "Name",
    "Home",
    "Money",
    "Guild",
    "Buildings",
    "Quests",
    "construct",
    "katzenjammer",
    "data",
    "User",
    "members",
    "gameInterval",
    "buildings",
    "getBuildings",
    "i",
    "building",
    "quest",
    "getQuest",
    "console",
    "log",
    "getName",
    "getID",
    "Quest",
    "createNewQuest",
    "questCont",
    "container",
    "MainContainer",
    "getQuests",
    "addQuest",
    "loadingUser",
    "args",
    "resetID",
    "resetSession",
    "resetName",
    "resetHome",
    "resetMoney",
    "resetGuild",
    "resetBuildings",
    "value",
    "setID",
    "setName",
    "setSession",
    "setHome",
    "setMoney",
    "setGuild",
    "loadingUserData",
    "updateHome",
    "homeData",
    "Action",
    "Data",
    "id",
    "home",
    "getHome",
    "req",
    "ServiceRequest",
    "send",
    "loadingUserBuildings",
    "user",
    "addListener",
    "e",
    "response",
    "getTarget",
    "getResponse",
    "success",
    "UserBuilding",
    "setBuildings",
    "updateBuildingList",
    "loadingQuests",
    "quests",
    "user_building_id",
    "setQuests",
    "updateQuestList"
  ],
  "mappings": "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",
  "sourcesContent": [
    "﻿/* global katzenjammer */\r\n/**\r\n*\r\n * @asset(katzenjammer/*)\r\n*\r\n**/\r\nqx.Class.define(\"katzenjammer.data.User\", {\r\n    extend: qx.core.Object,\r\n    type: \"singleton\",\r\n\r\n    statics:\r\n    {\r\n        Instance: null\r\n    },\r\n\r\n    properties:\r\n    {\r\n        ID: { init: null, nullable: true },\r\n        Session: { init: null, nullable: true },\r\n        Name: { init: null, nullable: true },\r\n        Home: { init: null, nullable: true },\r\n        Money: { init: null, nullable: true },\r\n        Guild: { init: null, nullable: true },\r\n\r\n        Buildings: { init: null, nullable: true },\r\n        Quests: { init: null, nullable: true },\r\n    },\r\n\r\n    construct: function () {\r\n        this.base(arguments);\r\n\r\n        katzenjammer.data.User.Instance = this;\r\n    },\r\n\r\n    members:\r\n    {\r\n        gameInterval: function () {\r\n            var buildings = this.getBuildings();\r\n            for (var i in buildings) {\r\n                var building = buildings[i];\r\n                var quest = building.getQuest();\r\n\r\n                if (quest === null)\r\n                {\r\n                    console.log(building.getName() + \" (\" + building.getID() + \") benötigt eine Quest.\");\r\n                    var quest = katzenjammer.data.Quest.createNewQuest(building);\r\n\r\n                    var questCont = katzenjammer.container.MainContainer.Instance.getQuests();\r\n                    questCont.addQuest(quest);\r\n                }\r\n                else\r\n                    console.log(building.getName() + \" (\" + building.getID() + \") hat die Quest -> \" + quest.getName());\r\n            }\r\n        },\r\n\r\n\r\n        loadingUser: function (args)\r\n        {\r\n            if (args === null)\r\n            {\r\n                this.resetID();\r\n                this.resetSession();\r\n                this.resetName();\r\n                this.resetHome();\r\n                this.resetMoney();\r\n                this.resetGuild();\r\n\r\n                this.resetBuildings();\r\n\t\t\t}\r\n\r\n            for (var i in args)\r\n            {\r\n                var value = args[i];\r\n                switch (i)\r\n                {\r\n                    case \"id\": this.setID(value); break;\r\n                    case \"name\": this.setName(value); break;\r\n                    case \"session\": this.setSession(value); break;\r\n                    case \"home\": this.setHome(value); break;\r\n                    case \"money\": this.setMoney(value); break;\r\n                    case \"guild\": this.setGuild(value); break;\r\n                    default: console.log(\"Key \" + i + \" is not in use.\"); break;\r\n                }\r\n            }\r\n\r\n            this.loadingUserData();\r\n        },\r\n\r\n\r\n        updateHome: function (homeData)\r\n        {\r\n            this.setHome(homeData);\r\n\r\n            var data =\r\n            {\r\n                Action: \"userUpdate\",\r\n                Data: {\r\n                    id: this.getID(),\r\n                    home: this.getHome()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n            var req = new katzenjammer.data.ServiceRequest(data);\r\n            req.send();\r\n        },\r\n\r\n\r\n        loadingUserData: function ()\r\n        {\r\n            this.loadingUserBuildings();\r\n        },\r\n\r\n        loadingUserBuildings: function ()\r\n        {\r\n            var user = katzenjammer.data.User.Instance.getID();\r\n\r\n            var data = {\r\n                Action: \"select\",\r\n                Data: \"UserBuildings\",\r\n                ID: user\r\n            };\r\n\r\n            var req = new katzenjammer.data.ServiceRequest(data);\r\n            req.addListener(\"success\", function (e)\r\n            {\r\n                var response = e.getTarget().getResponse();\r\n                //console.log(response);\r\n\r\n                if (response.success)\r\n                {\r\n                    var data = e.getTarget().getResponse().data;\r\n\r\n                    var buildings = [];\r\n                    for (var i in data)\r\n                    {\r\n                        buildings[data[i].id] = new katzenjammer.data.UserBuilding(data[i]);\r\n                    }\r\n\r\n                    this.setBuildings(buildings);\r\n\r\n                    katzenjammer.container.MainContainer.Instance.getBuildings().updateBuildingList();\r\n                    this.loadingQuests();\r\n                }\r\n            }, this);\r\n\r\n            req.send();\r\n        },\r\n\r\n        loadingQuests: function ()\r\n        {\r\n            var user = katzenjammer.data.User.Instance.getID();\r\n\r\n            var data = {\r\n                Action: \"select\",\r\n                Data: \"Quests\",\r\n                ID: user\r\n            };\r\n\r\n            var req = new katzenjammer.data.ServiceRequest(data);\r\n            req.addListener(\"success\", function (e) {\r\n                var response = e.getTarget().getResponse();\r\n                //console.log(response);\r\n\r\n                if (response.success) {\r\n                    var data = e.getTarget().getResponse().data;\r\n\r\n                    var quests = [];\r\n                    for (var i in data) {\r\n                        quests[data[i].user_building_id] = new katzenjammer.data.Quest(data[i]);\r\n                    }\r\n\r\n                    this.setQuests(quests);\r\n\r\n                    katzenjammer.container.MainContainer.Instance.getQuests().updateQuestList();\r\n                }\r\n            }, this);\r\n\r\n            req.send();\r\n        }\r\n    }\r\n});\r\n"
  ]
}